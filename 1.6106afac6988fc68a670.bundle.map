{"version":3,"sources":["webpack:///1.6106afac6988fc68a670.chunk.js","webpack:////workspace/Energy-Consumption/src/app/building/building.module.ts","webpack:////workspace/Energy-Consumption/~/rxjs/scheduler/async.js?2be6","webpack:////workspace/Energy-Consumption/~/rxjs/operator/multicast.js?7063","webpack:////workspace/Energy-Consumption/~/rxjs/scheduler/AsyncAction.js?f5ee","webpack:////workspace/Energy-Consumption/~/rxjs/scheduler/AsyncScheduler.js?83ac","webpack:////workspace/Energy-Consumption/~/rxjs/AsyncSubject.js?ad51","webpack:////workspace/Energy-Consumption/~/rxjs/ReplaySubject.js?621a","webpack:////workspace/Energy-Consumption/~/rxjs/util/ArgumentOutOfRangeError.js?f75e","webpack:////workspace/Energy-Consumption/~/rxjs/util/isDate.js?84bb","webpack:////workspace/Energy-Consumption/~/rxjs/observable/ConnectableObservable.js?5b56","webpack:////workspace/Energy-Consumption/~/rxjs/operator/combineLatest.js?afc5","webpack:////workspace/Energy-Consumption/~/rxjs/operator/concat.js?e917","webpack:////workspace/Energy-Consumption/~/rxjs/operator/zip.js?32f2","webpack:////workspace/Energy-Consumption/~/rxjs/util/isNumeric.js?0186","webpack:////workspace/Energy-Consumption/src/app/building/building.service.ts?ebd0","webpack:////workspace/Energy-Consumption/~/rxjs/observable/MulticastObservable.js?a7e5","webpack:////workspace/Energy-Consumption/~/rxjs/observable/dom/AjaxObservable.js?79a5","webpack:////workspace/Energy-Consumption/~/rxjs/operator/distinct.js?a3cd","webpack:////workspace/Energy-Consumption/~/rxjs/operator/distinctUntilChanged.js?21bb","webpack:////workspace/Energy-Consumption/~/rxjs/operator/find.js?0980","webpack:////workspace/Energy-Consumption/~/rxjs/operator/merge.js?4fa5","webpack:////workspace/Energy-Consumption/~/rxjs/operator/mergeMapTo.js?eddf","webpack:////workspace/Energy-Consumption/~/rxjs/operator/onErrorResumeNext.js?5f96","webpack:////workspace/Energy-Consumption/~/rxjs/operator/race.js?071a","webpack:////workspace/Energy-Consumption/~/rxjs/operator/timeInterval.js?fe1c","webpack:////workspace/Energy-Consumption/~/rxjs/operator/timestamp.js?5d4f","webpack:////workspace/Energy-Consumption/~/rxjs/scheduler/VirtualTimeScheduler.js?14b9","webpack:////workspace/Energy-Consumption/~/rxjs/scheduler/asap.js?dfb4","webpack:////workspace/Energy-Consumption/~/rxjs/scheduler/queue.js?2b84","webpack:////workspace/Energy-Consumption/~/rxjs/testing/SubscriptionLog.js?d012","webpack:////workspace/Energy-Consumption/~/rxjs/testing/SubscriptionLoggable.js?8df6","webpack:////workspace/Energy-Consumption/~/rxjs/util/applyMixins.js?2ec6","webpack:////workspace/Energy-Consumption/~/rxjs/util/noop.js?e1ce","webpack:////workspace/Energy-Consumption/~/rxjs/Rx.js?3c5b","webpack:////workspace/Energy-Consumption/~/rxjs/Scheduler.js?73fa","webpack:////workspace/Energy-Consumption/~/rxjs/add/observable/bindCallback.js?71b6","webpack:////workspace/Energy-Consumption/~/rxjs/add/observable/bindNodeCallback.js?c15d","webpack:////workspace/Energy-Consumption/~/rxjs/add/observable/combineLatest.js?61e5","webpack:////workspace/Energy-Consumption/~/rxjs/add/observable/concat.js?bcee","webpack:////workspace/Energy-Consumption/~/rxjs/add/observable/defer.js?9768","webpack:////workspace/Energy-Consumption/~/rxjs/add/observable/dom/ajax.js?b182","webpack:////workspace/Energy-Consumption/~/rxjs/add/observable/dom/webSocket.js?18c2","webpack:////workspace/Energy-Consumption/~/rxjs/add/observable/empty.js?3e10","webpack:////workspace/Energy-Consumption/~/rxjs/add/observable/forkJoin.js?c278","webpack:////workspace/Energy-Consumption/~/rxjs/add/observable/from.js?c8f4","webpack:////workspace/Energy-Consumption/~/rxjs/add/observable/fromEvent.js?87a3","webpack:////workspace/Energy-Consumption/~/rxjs/add/observable/fromEventPattern.js?d21e","webpack:////workspace/Energy-Consumption/~/rxjs/add/observable/fromPromise.js?ad4c","webpack:////workspace/Energy-Consumption/~/rxjs/add/observable/generate.js?d424","webpack:////workspace/Energy-Consumption/~/rxjs/add/observable/if.js?5f30","webpack:////workspace/Energy-Consumption/~/rxjs/add/observable/interval.js?81f4","webpack:////workspace/Energy-Consumption/~/rxjs/add/observable/merge.js?de2e","webpack:////workspace/Energy-Consumption/~/rxjs/add/observable/never.js?0777","webpack:////workspace/Energy-Consumption/~/rxjs/add/observable/of.js?aee4","webpack:////workspace/Energy-Consumption/~/rxjs/add/observable/onErrorResumeNext.js?729b","webpack:////workspace/Energy-Consumption/~/rxjs/add/observable/pairs.js?8e43","webpack:////workspace/Energy-Consumption/~/rxjs/add/observable/race.js?359e","webpack:////workspace/Energy-Consumption/~/rxjs/add/observable/range.js?6c65","webpack:////workspace/Energy-Consumption/~/rxjs/add/observable/throw.js?b14d","webpack:////workspace/Energy-Consumption/~/rxjs/add/observable/timer.js?5dd8","webpack:////workspace/Energy-Consumption/~/rxjs/add/observable/using.js?6f9e","webpack:////workspace/Energy-Consumption/~/rxjs/add/observable/zip.js?339a","webpack:////workspace/Energy-Consumption/~/rxjs/add/operator/audit.js?6c15","webpack:////workspace/Energy-Consumption/~/rxjs/add/operator/auditTime.js?98df","webpack:////workspace/Energy-Consumption/~/rxjs/add/operator/buffer.js?7702","webpack:////workspace/Energy-Consumption/~/rxjs/add/operator/bufferCount.js?ce70","webpack:////workspace/Energy-Consumption/~/rxjs/add/operator/bufferTime.js?4629","webpack:////workspace/Energy-Consumption/~/rxjs/add/operator/bufferToggle.js?5e6f","webpack:////workspace/Energy-Consumption/~/rxjs/add/operator/bufferWhen.js?6636","webpack:////workspace/Energy-Consumption/~/rxjs/add/operator/cache.js?2733","webpack:////workspace/Energy-Consumption/~/rxjs/add/operator/catch.js?e742","webpack:////workspace/Energy-Consumption/~/rxjs/add/operator/combineAll.js?66c1","webpack:////workspace/Energy-Consumption/~/rxjs/add/operator/combineLatest.js?d9b6","webpack:////workspace/Energy-Consumption/~/rxjs/add/operator/concat.js?bb91","webpack:////workspace/Energy-Consumption/~/rxjs/add/operator/concatAll.js?ec1b","webpack:////workspace/Energy-Consumption/~/rxjs/add/operator/concatMap.js?aa54","webpack:////workspace/Energy-Consumption/~/rxjs/add/operator/concatMapTo.js?988a","webpack:////workspace/Energy-Consumption/~/rxjs/add/operator/count.js?5d36","webpack:////workspace/Energy-Consumption/~/rxjs/add/operator/debounce.js?dd1f","webpack:////workspace/Energy-Consumption/~/rxjs/add/operator/debounceTime.js?2483","webpack:////workspace/Energy-Consumption/~/rxjs/add/operator/defaultIfEmpty.js?d1ad","webpack:////workspace/Energy-Consumption/~/rxjs/add/operator/delay.js?1912","webpack:////workspace/Energy-Consumption/~/rxjs/add/operator/delayWhen.js?fccd","webpack:////workspace/Energy-Consumption/~/rxjs/add/operator/dematerialize.js?50ea","webpack:////workspace/Energy-Consumption/~/rxjs/add/operator/distinct.js?d219","webpack:////workspace/Energy-Consumption/~/rxjs/add/operator/distinctKey.js?c9b5","webpack:////workspace/Energy-Consumption/~/rxjs/add/operator/distinctUntilChanged.js?0e21","webpack:////workspace/Energy-Consumption/~/rxjs/add/operator/distinctUntilKeyChanged.js?044d","webpack:////workspace/Energy-Consumption/~/rxjs/add/operator/do.js?60ec","webpack:////workspace/Energy-Consumption/~/rxjs/add/operator/elementAt.js?5300","webpack:////workspace/Energy-Consumption/~/rxjs/add/operator/every.js?9ae6","webpack:////workspace/Energy-Consumption/~/rxjs/add/operator/exhaust.js?ca43","webpack:////workspace/Energy-Consumption/~/rxjs/add/operator/exhaustMap.js?506c","webpack:////workspace/Energy-Consumption/~/rxjs/add/operator/expand.js?9d1e","webpack:////workspace/Energy-Consumption/~/rxjs/add/operator/filter.js?b735","webpack:////workspace/Energy-Consumption/~/rxjs/add/operator/finally.js?c57c","webpack:////workspace/Energy-Consumption/~/rxjs/add/operator/find.js?f379","webpack:////workspace/Energy-Consumption/~/rxjs/add/operator/findIndex.js?e434","webpack:////workspace/Energy-Consumption/~/rxjs/add/operator/first.js?f876","webpack:////workspace/Energy-Consumption/~/rxjs/add/operator/groupBy.js?3faa","webpack:////workspace/Energy-Consumption/~/rxjs/add/operator/ignoreElements.js?e4bc","webpack:////workspace/Energy-Consumption/~/rxjs/add/operator/isEmpty.js?1366","webpack:////workspace/Energy-Consumption/~/rxjs/add/operator/last.js?5ee2","webpack:////workspace/Energy-Consumption/~/rxjs/add/operator/let.js?02d1","webpack:////workspace/Energy-Consumption/~/rxjs/add/operator/map.js?9e33","webpack:////workspace/Energy-Consumption/~/rxjs/add/operator/mapTo.js?9b74","webpack:////workspace/Energy-Consumption/~/rxjs/add/operator/materialize.js?6116","webpack:////workspace/Energy-Consumption/~/rxjs/add/operator/max.js?ab16","webpack:////workspace/Energy-Consumption/~/rxjs/add/operator/merge.js?104b","webpack:////workspace/Energy-Consumption/~/rxjs/add/operator/mergeAll.js?c157","webpack:////workspace/Energy-Consumption/~/rxjs/add/operator/mergeMap.js?f81d","webpack:////workspace/Energy-Consumption/~/rxjs/add/operator/mergeMapTo.js?2202","webpack:////workspace/Energy-Consumption/~/rxjs/add/operator/mergeScan.js?a9ca","webpack:////workspace/Energy-Consumption/~/rxjs/add/operator/min.js?1070","webpack:////workspace/Energy-Consumption/~/rxjs/add/operator/multicast.js?0f22","webpack:////workspace/Energy-Consumption/~/rxjs/add/operator/observeOn.js?5313","webpack:////workspace/Energy-Consumption/~/rxjs/add/operator/onErrorResumeNext.js?e481","webpack:////workspace/Energy-Consumption/~/rxjs/add/operator/pairwise.js?ff52","webpack:////workspace/Energy-Consumption/~/rxjs/add/operator/partition.js?67f2","webpack:////workspace/Energy-Consumption/~/rxjs/add/operator/pluck.js?4b46","webpack:////workspace/Energy-Consumption/~/rxjs/add/operator/publish.js?6c89","webpack:////workspace/Energy-Consumption/~/rxjs/add/operator/publishBehavior.js?608a","webpack:////workspace/Energy-Consumption/~/rxjs/add/operator/publishLast.js?6b1b","webpack:////workspace/Energy-Consumption/~/rxjs/add/operator/publishReplay.js?f661","webpack:////workspace/Energy-Consumption/~/rxjs/add/operator/race.js?d601","webpack:////workspace/Energy-Consumption/~/rxjs/add/operator/reduce.js?0a83","webpack:////workspace/Energy-Consumption/~/rxjs/add/operator/repeat.js?1083","webpack:////workspace/Energy-Consumption/~/rxjs/add/operator/repeatWhen.js?eafa","webpack:////workspace/Energy-Consumption/~/rxjs/add/operator/retry.js?99da","webpack:////workspace/Energy-Consumption/~/rxjs/add/operator/retryWhen.js?40db","webpack:////workspace/Energy-Consumption/~/rxjs/add/operator/sample.js?650b","webpack:////workspace/Energy-Consumption/~/rxjs/add/operator/sampleTime.js?787a","webpack:////workspace/Energy-Consumption/~/rxjs/add/operator/scan.js?7736","webpack:////workspace/Energy-Consumption/~/rxjs/add/operator/sequenceEqual.js?e40a","webpack:////workspace/Energy-Consumption/~/rxjs/add/operator/share.js?511a","webpack:////workspace/Energy-Consumption/~/rxjs/add/operator/single.js?0f49","webpack:////workspace/Energy-Consumption/~/rxjs/add/operator/skip.js?278a","webpack:////workspace/Energy-Consumption/~/rxjs/add/operator/skipUntil.js?0aa0","webpack:////workspace/Energy-Consumption/~/rxjs/add/operator/skipWhile.js?f30a","webpack:////workspace/Energy-Consumption/~/rxjs/add/operator/startWith.js?63d6","webpack:////workspace/Energy-Consumption/~/rxjs/add/operator/subscribeOn.js?21f6","webpack:////workspace/Energy-Consumption/~/rxjs/add/operator/switch.js?3e00","webpack:////workspace/Energy-Consumption/~/rxjs/add/operator/switchMap.js?996c","webpack:////workspace/Energy-Consumption/~/rxjs/add/operator/switchMapTo.js?a6aa","webpack:////workspace/Energy-Consumption/~/rxjs/add/operator/take.js?db89","webpack:////workspace/Energy-Consumption/~/rxjs/add/operator/takeLast.js?9f08","webpack:////workspace/Energy-Consumption/~/rxjs/add/operator/takeUntil.js?a290","webpack:////workspace/Energy-Consumption/~/rxjs/add/operator/takeWhile.js?976b","webpack:////workspace/Energy-Consumption/~/rxjs/add/operator/throttle.js?863b","webpack:////workspace/Energy-Consumption/~/rxjs/add/operator/throttleTime.js?0adf","webpack:////workspace/Energy-Consumption/~/rxjs/add/operator/timeInterval.js?fa48","webpack:////workspace/Energy-Consumption/~/rxjs/add/operator/timeout.js?269a","webpack:////workspace/Energy-Consumption/~/rxjs/add/operator/timeoutWith.js?5753","webpack:////workspace/Energy-Consumption/~/rxjs/add/operator/timestamp.js?fce1","webpack:////workspace/Energy-Consumption/~/rxjs/add/operator/toArray.js?41d0","webpack:////workspace/Energy-Consumption/~/rxjs/add/operator/toPromise.js?b136","webpack:////workspace/Energy-Consumption/~/rxjs/add/operator/window.js?8c7b","webpack:////workspace/Energy-Consumption/~/rxjs/add/operator/windowCount.js?4f06","webpack:////workspace/Energy-Consumption/~/rxjs/add/operator/windowTime.js?91bc","webpack:////workspace/Energy-Consumption/~/rxjs/add/operator/windowToggle.js?34f5","webpack:////workspace/Energy-Consumption/~/rxjs/add/operator/windowWhen.js?e035","webpack:////workspace/Energy-Consumption/~/rxjs/add/operator/withLatestFrom.js?25bd","webpack:////workspace/Energy-Consumption/~/rxjs/add/operator/zip.js?bdef","webpack:////workspace/Energy-Consumption/~/rxjs/add/operator/zipAll.js?e239","webpack:////workspace/Energy-Consumption/~/rxjs/observable/BoundCallbackObservable.js?919c","webpack:////workspace/Energy-Consumption/~/rxjs/observable/BoundNodeCallbackObservable.js?bc09","webpack:////workspace/Energy-Consumption/~/rxjs/observable/DeferObservable.js?62bc","webpack:////workspace/Energy-Consumption/~/rxjs/observable/ErrorObservable.js?ea71","webpack:////workspace/Energy-Consumption/~/rxjs/observable/ForkJoinObservable.js?43bb","webpack:////workspace/Energy-Consumption/~/rxjs/observable/FromEventObservable.js?2d34","webpack:////workspace/Energy-Consumption/~/rxjs/observable/FromEventPatternObservable.js?21d4","webpack:////workspace/Energy-Consumption/~/rxjs/observable/GenerateObservable.js?3550","webpack:////workspace/Energy-Consumption/~/rxjs/observable/IfObservable.js?ccfc","webpack:////workspace/Energy-Consumption/~/rxjs/observable/IntervalObservable.js?eda0","webpack:////workspace/Energy-Consumption/~/rxjs/observable/NeverObservable.js?d2d0","webpack:////workspace/Energy-Consumption/~/rxjs/observable/PairsObservable.js?8462","webpack:////workspace/Energy-Consumption/~/rxjs/observable/RangeObservable.js?9df6","webpack:////workspace/Energy-Consumption/~/rxjs/observable/SubscribeOnObservable.js?0e6b","webpack:////workspace/Energy-Consumption/~/rxjs/observable/TimerObservable.js?6529","webpack:////workspace/Energy-Consumption/~/rxjs/observable/UsingObservable.js?50aa","webpack:////workspace/Energy-Consumption/~/rxjs/observable/bindCallback.js?1578","webpack:////workspace/Energy-Consumption/~/rxjs/observable/bindNodeCallback.js?f5b0","webpack:////workspace/Energy-Consumption/~/rxjs/observable/combineLatest.js?c058","webpack:////workspace/Energy-Consumption/~/rxjs/observable/concat.js?8332","webpack:////workspace/Energy-Consumption/~/rxjs/observable/defer.js?9338","webpack:////workspace/Energy-Consumption/~/rxjs/observable/dom/WebSocketSubject.js?29c4","webpack:////workspace/Energy-Consumption/~/rxjs/observable/dom/ajax.js?96f1","webpack:////workspace/Energy-Consumption/~/rxjs/observable/dom/webSocket.js?5a0d","webpack:////workspace/Energy-Consumption/~/rxjs/observable/empty.js?fb0e","webpack:////workspace/Energy-Consumption/~/rxjs/observable/forkJoin.js?5ae6","webpack:////workspace/Energy-Consumption/~/rxjs/observable/fromEvent.js?5ef3","webpack:////workspace/Energy-Consumption/~/rxjs/observable/fromEventPattern.js?a638","webpack:////workspace/Energy-Consumption/~/rxjs/observable/if.js?d4cd","webpack:////workspace/Energy-Consumption/~/rxjs/observable/interval.js?f777","webpack:////workspace/Energy-Consumption/~/rxjs/observable/merge.js?69f5","webpack:////workspace/Energy-Consumption/~/rxjs/observable/never.js?d360","webpack:////workspace/Energy-Consumption/~/rxjs/observable/pairs.js?2df9","webpack:////workspace/Energy-Consumption/~/rxjs/observable/range.js?d30a","webpack:////workspace/Energy-Consumption/~/rxjs/observable/throw.js?b5fb","webpack:////workspace/Energy-Consumption/~/rxjs/observable/timer.js?1c47","webpack:////workspace/Energy-Consumption/~/rxjs/observable/using.js?af7b","webpack:////workspace/Energy-Consumption/~/rxjs/observable/zip.js?2e01","webpack:////workspace/Energy-Consumption/~/rxjs/operator/audit.js?0ae9","webpack:////workspace/Energy-Consumption/~/rxjs/operator/auditTime.js?1c89","webpack:////workspace/Energy-Consumption/~/rxjs/operator/buffer.js?02d4","webpack:////workspace/Energy-Consumption/~/rxjs/operator/bufferCount.js?b773","webpack:////workspace/Energy-Consumption/~/rxjs/operator/bufferTime.js?2547","webpack:////workspace/Energy-Consumption/~/rxjs/operator/bufferToggle.js?68a9","webpack:////workspace/Energy-Consumption/~/rxjs/operator/bufferWhen.js?9b51","webpack:////workspace/Energy-Consumption/~/rxjs/operator/cache.js?cd1e","webpack:////workspace/Energy-Consumption/~/rxjs/operator/combineAll.js?edcf","webpack:////workspace/Energy-Consumption/~/rxjs/operator/concatMapTo.js?c4fa","webpack:////workspace/Energy-Consumption/~/rxjs/operator/count.js?ac8b","webpack:////workspace/Energy-Consumption/~/rxjs/operator/debounce.js?09ca","webpack:////workspace/Energy-Consumption/~/rxjs/operator/debounceTime.js?96bb","webpack:////workspace/Energy-Consumption/~/rxjs/operator/defaultIfEmpty.js?e82d","webpack:////workspace/Energy-Consumption/~/rxjs/operator/delay.js?5bb5","webpack:////workspace/Energy-Consumption/~/rxjs/operator/delayWhen.js?7a7c","webpack:////workspace/Energy-Consumption/~/rxjs/operator/dematerialize.js?bd36","webpack:////workspace/Energy-Consumption/~/rxjs/operator/distinctKey.js?e292","webpack:////workspace/Energy-Consumption/~/rxjs/operator/distinctUntilKeyChanged.js?c4c1","webpack:////workspace/Energy-Consumption/~/rxjs/operator/do.js?ad56","webpack:////workspace/Energy-Consumption/~/rxjs/operator/elementAt.js?fffb","webpack:////workspace/Energy-Consumption/~/rxjs/operator/exhaust.js?370d","webpack:////workspace/Energy-Consumption/~/rxjs/operator/exhaustMap.js?83f5","webpack:////workspace/Energy-Consumption/~/rxjs/operator/expand.js?8693","webpack:////workspace/Energy-Consumption/~/rxjs/operator/finally.js?aa12","webpack:////workspace/Energy-Consumption/~/rxjs/operator/findIndex.js?b425","webpack:////workspace/Energy-Consumption/~/rxjs/operator/groupBy.js?9d86","webpack:////workspace/Energy-Consumption/~/rxjs/operator/ignoreElements.js?ee44","webpack:////workspace/Energy-Consumption/~/rxjs/operator/isEmpty.js?d47d","webpack:////workspace/Energy-Consumption/~/rxjs/operator/let.js?8396","webpack:////workspace/Energy-Consumption/~/rxjs/operator/mapTo.js?ccab","webpack:////workspace/Energy-Consumption/~/rxjs/operator/materialize.js?61b9","webpack:////workspace/Energy-Consumption/~/rxjs/operator/max.js?da39","webpack:////workspace/Energy-Consumption/~/rxjs/operator/mergeScan.js?9ec1","webpack:////workspace/Energy-Consumption/~/rxjs/operator/min.js?ac98","webpack:////workspace/Energy-Consumption/~/rxjs/operator/pairwise.js?e372","webpack:////workspace/Energy-Consumption/~/rxjs/operator/partition.js?0d8e","webpack:////workspace/Energy-Consumption/~/rxjs/operator/pluck.js?7021","webpack:////workspace/Energy-Consumption/~/rxjs/operator/publish.js?b445","webpack:////workspace/Energy-Consumption/~/rxjs/operator/publishBehavior.js?3356","webpack:////workspace/Energy-Consumption/~/rxjs/operator/publishLast.js?177b","webpack:////workspace/Energy-Consumption/~/rxjs/operator/publishReplay.js?1a5c","webpack:////workspace/Energy-Consumption/~/rxjs/operator/repeat.js?cd91","webpack:////workspace/Energy-Consumption/~/rxjs/operator/repeatWhen.js?dbbc","webpack:////workspace/Energy-Consumption/~/rxjs/operator/retry.js?9534","webpack:////workspace/Energy-Consumption/~/rxjs/operator/retryWhen.js?3dd4","webpack:////workspace/Energy-Consumption/~/rxjs/operator/sample.js?3150","webpack:////workspace/Energy-Consumption/~/rxjs/operator/sampleTime.js?fedd","webpack:////workspace/Energy-Consumption/~/rxjs/operator/scan.js?aaf3","webpack:////workspace/Energy-Consumption/~/rxjs/operator/sequenceEqual.js?df9b","webpack:////workspace/Energy-Consumption/~/rxjs/operator/share.js?e849","webpack:////workspace/Energy-Consumption/~/rxjs/operator/single.js?7e8f","webpack:////workspace/Energy-Consumption/~/rxjs/operator/skip.js?8a15","webpack:////workspace/Energy-Consumption/~/rxjs/operator/skipUntil.js?ab61","webpack:////workspace/Energy-Consumption/~/rxjs/operator/skipWhile.js?311a","webpack:////workspace/Energy-Consumption/~/rxjs/operator/startWith.js?1608","webpack:////workspace/Energy-Consumption/~/rxjs/operator/subscribeOn.js?26b3","webpack:////workspace/Energy-Consumption/~/rxjs/operator/switch.js?29a1","webpack:////workspace/Energy-Consumption/~/rxjs/operator/switchMap.js?a44a","webpack:////workspace/Energy-Consumption/~/rxjs/operator/switchMapTo.js?a13b","webpack:////workspace/Energy-Consumption/~/rxjs/operator/take.js?2998","webpack:////workspace/Energy-Consumption/~/rxjs/operator/takeLast.js?104d","webpack:////workspace/Energy-Consumption/~/rxjs/operator/takeUntil.js?6e3a","webpack:////workspace/Energy-Consumption/~/rxjs/operator/takeWhile.js?d76d","webpack:////workspace/Energy-Consumption/~/rxjs/operator/throttle.js?ce8a","webpack:////workspace/Energy-Consumption/~/rxjs/operator/throttleTime.js?706b","webpack:////workspace/Energy-Consumption/~/rxjs/operator/timeout.js?5e3d","webpack:////workspace/Energy-Consumption/~/rxjs/operator/timeoutWith.js?a9ad","webpack:////workspace/Energy-Consumption/~/rxjs/operator/toArray.js?7aaf","webpack:////workspace/Energy-Consumption/~/rxjs/operator/window.js?db9c","webpack:////workspace/Energy-Consumption/~/rxjs/operator/windowCount.js?eb36","webpack:////workspace/Energy-Consumption/~/rxjs/operator/windowTime.js?7d02","webpack:////workspace/Energy-Consumption/~/rxjs/operator/windowToggle.js?5392","webpack:////workspace/Energy-Consumption/~/rxjs/operator/windowWhen.js?5c4f","webpack:////workspace/Energy-Consumption/~/rxjs/operator/withLatestFrom.js?9586","webpack:////workspace/Energy-Consumption/~/rxjs/operator/zipAll.js?2b01","webpack:////workspace/Energy-Consumption/~/rxjs/scheduler/Action.js?18c2","webpack:////workspace/Energy-Consumption/~/rxjs/scheduler/AnimationFrameAction.js?bd32","webpack:////workspace/Energy-Consumption/~/rxjs/scheduler/AnimationFrameScheduler.js?2799","webpack:////workspace/Energy-Consumption/~/rxjs/scheduler/AsapAction.js?06c7","webpack:////workspace/Energy-Consumption/~/rxjs/scheduler/AsapScheduler.js?e65d","webpack:////workspace/Energy-Consumption/~/rxjs/scheduler/QueueAction.js?61cb","webpack:////workspace/Energy-Consumption/~/rxjs/scheduler/QueueScheduler.js?f004","webpack:////workspace/Energy-Consumption/~/rxjs/scheduler/animationFrame.js?12d9","webpack:////workspace/Energy-Consumption/~/rxjs/testing/ColdObservable.js?d195","webpack:////workspace/Energy-Consumption/~/rxjs/testing/HotObservable.js?b910","webpack:////workspace/Energy-Consumption/~/rxjs/testing/TestScheduler.js?1e08","webpack:////workspace/Energy-Consumption/~/rxjs/util/AnimationFrame.js?8b4d","webpack:////workspace/Energy-Consumption/~/rxjs/util/FastMap.js?57fd","webpack:////workspace/Energy-Consumption/~/rxjs/util/Immediate.js?554e","webpack:////workspace/Energy-Consumption/~/rxjs/util/Map.js?aa04","webpack:////workspace/Energy-Consumption/~/rxjs/util/MapPolyfill.js?ef62","webpack:////workspace/Energy-Consumption/~/rxjs/util/assign.js?d9c1","webpack:////workspace/Energy-Consumption/~/rxjs/util/not.js?3995","webpack:////workspace/Energy-Consumption/src/app/building/building-detail.component.ts","webpack:////workspace/Energy-Consumption/src/app/building/building-list.component.ts","webpack:////workspace/Energy-Consumption/src/app/building/building.component.ts","webpack:////workspace/Energy-Consumption/src/app/building/building.routing.module.ts","webpack:////workspace/Energy-Consumption/src/app/building/building-list.component.html"],"names":["webpackJsonp","Array","concat","module","exports","__webpack_require__","__WEBPACK_IMPORTED_MODULE_0__angular_core__","__WEBPACK_IMPORTED_MODULE_1__angular_common__","__WEBPACK_IMPORTED_MODULE_2__angular_forms__","__WEBPACK_IMPORTED_MODULE_3__building_component__","__WEBPACK_IMPORTED_MODULE_4__building_detail_component__","__WEBPACK_IMPORTED_MODULE_5__building_list_component__","__WEBPACK_IMPORTED_MODULE_6__building_routing_module__","d","BuildingModule","__decorate","this","decorators","target","key","desc","c","arguments","length","r","Object","getOwnPropertyDescriptor","Reflect","decorate","i","defineProperty","__metadata","k","v","metadata","imports","declarations","AsyncAction_1","AsyncScheduler_1","async","AsyncScheduler","AsyncAction","multicast","subjectOrSubjectFactory","selector","subjectFactory","MulticastObservable_1","MulticastObservable","ConnectableObservable_1","ConnectableObservable","__extends","b","__","constructor","p","hasOwnProperty","prototype","create","root_1","Action_1","_super","scheduler","work","call","pending","schedule","state","delay","closed","id","recycleAsyncId","requestAsyncId","root","setInterval","flush","bind","clearInterval","undefined","execute","Error","error","_execute","errored","errorValue","e","unsubscribe","_unsubscribe","actions","index","indexOf","splice","Action","Scheduler_1","apply","active","scheduled","action","push","shift","Scheduler","Subject_1","Subscription_1","AsyncSubject","value","hasNext","hasCompleted","_subscribe","subscriber","next","complete","Subscription","EMPTY","hasError","thrownError","Subject","queue_1","observeOn_1","ReplaySubject","bufferSize","windowTime","Number","POSITIVE_INFINITY","_events","_bufferSize","_windowTime","now","_getNow","ReplayEvent","_trimBufferThenGetEvents","add","ObserveOnSubscriber","len","queue","eventsCount","spliceCount","time","Math","max","ArgumentOutOfRangeError","err","name","stack","message","isDate","Date","isNaN","Observable_1","Subscriber_1","source","_refCount","getSubject","subscribe","subject","_subject","isStopped","connect","connection","_connection","ConnectableSubscriber","refCount","lift","RefCountOperator","Observable","destination","connectable","_error","_complete","SubjectSubscriber","refCounter","RefCountSubscriber","subscription","sharedConnection","Subscriber","combineLatest","observables","_i","project","pop","isArray_1","isArray","unshift","ArrayObservable_1","ArrayObservable","CombineLatestOperator","OuterSubscriber_1","subscribeToResult_1","none","CombineLatestSubscriber","values","_next","observable","toRespond","subscribeToResult","notifyComplete","unused","notifyNext","outerValue","innerValue","outerIndex","innerIndex","innerSub","oldVal","_tryProject","slice","result","OuterSubscriber","concatStatic","args","isScheduler_1","isScheduler","mergeAll_1","MergeAllOperator","zipProto","zipStatic","ZipOperator","iterator_1","ZipSubscriber","iterators","StaticArrayIterator","$$iterator","StaticIterator","ZipBufferIterator","iterator","stillUnsubscribed","notifyInactive","checkIterators","hasValue","shouldComplete","done","nextResult","array","parent","buffer","isComplete","isNumeric","val","parseFloat","__WEBPACK_IMPORTED_MODULE_1__angular_http__","__WEBPACK_IMPORTED_MODULE_2_rxjs_Rx__","n","BuildingService","Building","fields","data","Data","entity","metric","entries","Entry","timestamp","actual","expectedMin","expectedMax","co2","http","baseUrl","getBuildings","buildingID","entityID","interval","paramText","startDate","endDate","response","get","toISOString","map","res","json","buildings","catch","handleError","errMsg","body","JSON","stringify","status","statusText","toString","console","throw","_a","getCORSRequest","XMLHttpRequest","xhr","withCredentials","XDomainRequest","getXMLHttpRequest","progId","progIds","ActiveXObject","ajaxGet","url","headers","AjaxObservable","method","ajaxPost","ajaxDelete","ajaxPut","ajaxGetJSON","responseType","map_1","MapOperator","x","tryCatch_1","errorObject_1","urlOrRequest","request","createXHR","crossDomain","timeout","prop","AjaxSubscriber","post","delete","put","getJSON","FormData","serializeBody","send","AjaxResponse","_b","user","password","tryCatch","errorObject","open","setHeaders","setupEvents","contentType","splitIndex","substring","keys","encodeURI","join","setRequestHeader","progressSubscriber","ontimeout","xhrTimeout","AjaxTimeoutError","upload","onprogress","xhrProgress","onerror","xhrError","AjaxError","onreadystatechange","xhrReadyStateChange","readyState","status_1","responseText","abort","originalEvent","parse","responseXML","distinct","compare","flushes","DistinctOperator","DistinctSubscriber","notifyError","found","y","distinctUntilChanged","keySelector","DistinctUntilChangedOperator","DistinctUntilChangedSubscriber","hasKey","Boolean","find","predicate","thisArg","TypeError","FindValueOperator","yieldIndex","observer","FindValueSubscriber","merge","mergeStatic","concurrent","last","mergeMapTo","innerObservable","resultSelector","MergeMapToOperator","ish","MergeMapToSubscriber","_innerSub","trySelectResult","remove","onErrorResumeNext","nextSources","OnErrorResumeNextOperator","onErrorResumeNextStatic","FromObservable_1","FromObservable","OnErrorResumeNextSubscriber","subscribeToNextSource","race","raceStatic","RaceOperator","RaceSubscriber","hasFirst","subscriptions","timeInterval","async_1","TimeIntervalOperator","TimeInterval","TimeIntervalSubscriber","lastTime","span","TimestampOperator","Timestamp","TimestampSubscriber","VirtualTimeScheduler","SchedulerAction","maxFrames","_this","VirtualAction","frame","frameTimeFactor","sort","sortActions","a","AsapAction_1","AsapScheduler_1","asap","AsapScheduler","AsapAction","QueueAction_1","QueueScheduler_1","QueueScheduler","QueueAction","SubscriptionLog","subscribedFrame","unsubscribedFrame","SubscriptionLog_1","SubscriptionLoggable","logSubscribedFrame","logUnsubscribedFrame","subscriptionLogs","oldSubscriptionLog","applyMixins","derivedCtor","baseCtors","baseCtor","propertyKeys","getOwnPropertyNames","j","len2","name_1","noop","AsyncSubject_1","ReplaySubject_1","BehaviorSubject_1","BehaviorSubject","Notification_1","Notification","EmptyError_1","EmptyError","ArgumentOutOfRangeError_1","ObjectUnsubscribedError_1","ObjectUnsubscribedError","UnsubscriptionError_1","UnsubscriptionError","timeInterval_1","timestamp_1","TestScheduler_1","TestScheduler","VirtualTimeScheduler_1","AjaxObservable_1","asap_1","animationFrame_1","rxSubscriber_1","observable_1","animationFrame","Symbol","rxSubscriber","$$rxSubscriber","$$observable","bindCallback_1","bindCallback","bindNodeCallback_1","bindNodeCallback","combineLatest_1","concat_1","defer_1","defer","ajax_1","ajax","webSocket_1","webSocket","empty_1","empty","forkJoin_1","forkJoin","from_1","from","fromEvent_1","fromEvent","fromEventPattern_1","fromEventPattern","fromPromise_1","fromPromise","GenerateObservable_1","generate","GenerateObservable","if_1","if","_if","interval_1","merge_1","never_1","never","of_1","of","onErrorResumeNext_1","pairs_1","pairs","race_1","range_1","range","throw_1","_throw","timer_1","timer","using_1","using","zip_1","zip","audit_1","audit","auditTime_1","auditTime","buffer_1","bufferCount_1","bufferCount","bufferTime_1","bufferTime","bufferToggle_1","bufferToggle","bufferWhen_1","bufferWhen","cache_1","cache","catch_1","_catch","combineAll_1","combineAll","concatAll_1","concatAll","concatMap_1","concatMap","concatMapTo_1","concatMapTo","count_1","count","debounce_1","debounce","debounceTime_1","debounceTime","defaultIfEmpty_1","defaultIfEmpty","delay_1","delayWhen_1","delayWhen","dematerialize_1","dematerialize","distinct_1","distinctKey_1","distinctKey","distinctUntilChanged_1","distinctUntilKeyChanged_1","distinctUntilKeyChanged","do_1","do","_do","elementAt_1","elementAt","every_1","every","exhaust_1","exhaust","exhaustMap_1","exhaustMap","expand_1","expand","filter_1","filter","finally_1","finally","_finally","find_1","findIndex_1","findIndex","first_1","first","groupBy_1","groupBy","ignoreElements_1","ignoreElements","isEmpty_1","isEmpty","last_1","let_1","let","letProto","letBind","mapTo_1","mapTo","materialize_1","materialize","max_1","mergeAll","mergeMap_1","mergeMap","flatMap","mergeMapTo_1","flatMapTo","mergeScan_1","mergeScan","min_1","min","multicast_1","observeOn","pairwise_1","pairwise","partition_1","partition","pluck_1","pluck","publish_1","publish","publishBehavior_1","publishBehavior","publishLast_1","publishLast","publishReplay_1","publishReplay","reduce_1","reduce","repeat_1","repeat","repeatWhen_1","repeatWhen","retry_1","retry","retryWhen_1","retryWhen","sample_1","sample","sampleTime_1","sampleTime","scan_1","scan","sequenceEqual_1","sequenceEqual","share_1","share","single_1","single","skip_1","skip","skipUntil_1","skipUntil","skipWhile_1","skipWhile","startWith_1","startWith","subscribeOn_1","subscribeOn","switch_1","switch","_switch","switchMap_1","switchMap","switchMapTo_1","switchMapTo","take_1","take","takeLast_1","takeLast","takeUntil_1","takeUntil","takeWhile_1","takeWhile","throttle_1","throttle","throttleTime_1","throttleTime","timeout_1","timeoutWith_1","timeoutWith","toArray_1","toArray","toPromise_1","toPromise","window_1","window","windowCount_1","windowCount","windowTime_1","windowToggle_1","windowToggle","windowWhen_1","windowWhen","withLatestFrom_1","withLatestFrom","zipAll_1","zipAll","dispatchNext","arg","dispatchError","BoundCallbackObservable","callbackFunc","func","dispatch","handler","handlerFn","innerArgs","result_1","self","result_2","BoundNodeCallbackObservable","DeferObservable","observableFactory","DeferSubscriber","factory","tryDefer","_callFactory","ErrorObservable","EmptyObservable_1","ForkJoinObservable","sources","EmptyObservable","ForkJoinSubscriber","completed","haveValues","total","innerSubscription","_hasValue","isNodeStyleEventEmmitter","sourceObj","addListener","removeListener","isJQueryStyleEventEmitter","on","off","isNodeList","isHTMLCollection","isEventTarget","addEventListener","removeEventListener","isFunction_1","FromEventObservable","eventName","options","isFunction","setupSubscription","source_1","source_2","source_3","FromEventPatternObservable","addHandler","removeHandler","_callSelector","_callAddHandler","errorSubscriber","selfSelector","initialState","condition","iterate","initialStateOrOptions","resultSelectorOrObservable","conditionResult","needIterate","IfObservable","thenSource","elseSource","IfSubscriber","tryIf","isNumeric_1","IntervalObservable","period","noop_1","NeverObservable","obj","PairsObservable","idx","RangeObservable","start","_count","SubscribeOnObservable","delayTime","isDate_1","TimerObservable","dueTime","initialDelay","UsingObservable","resourceFactory","resource","UsingSubscriber","tryUse","BoundCallbackObservable_1","BoundNodeCallbackObservable_1","DeferObservable_1","assign_1","WebSocketSubject","urlConfigOrSource","WebSocketCtor","WebSocket","_output","assign","operator","sock","multiplex","subMsg","unsubMsg","messageFilter","_connectSocket","socket","protocol","close","onopen","openObserver","closingObserver","code","reason","onclose","closeObserver","wasClean","onmessage","observers","AnonymousSubject","WebSocketSubject_1","ForkJoinObservable_1","FromEventObservable_1","FromEventPatternObservable_1","IfObservable_1","IntervalObservable_1","NeverObservable_1","PairsObservable_1","RangeObservable_1","ErrorObservable_1","TimerObservable_1","UsingObservable_1","durationSelector","AuditOperator","AuditSubscriber","throttled","duration","clearThrottle","AuditTimeOperator","AuditTimeSubscriber","closingNotifier","BufferOperator","BufferSubscriber","startBufferEvery","BufferCountOperator","BufferCountSubscriber","buffers","bufferTimeSpan","bufferCreationInterval","maxBufferSize","BufferTimeOperator","dispatchBufferTimeSpanOnly","prevContext","context","closeContext","openContext","closeAction","dispatchBufferCreation","dispatchBufferClose","BufferTimeSubscriber","Context","contexts","timespanOnly","timeSpanOnlyState","closeState","creationState","filledBufferContext","onBufferFull","spliceIndex","openings","closingSelector","BufferToggleOperator","BufferToggleSubscriber","closeBuffer","openBuffer","trySubscribe","BufferWhenOperator","BufferWhenSubscriber","subscribing","closingSubscription","outerSub","refs","s","CountOperator","CountSubscriber","_tryPredicate","DebounceOperator","DebounceSubscriber","durationSubscription","_tryNext","emitValue","DebounceTimeOperator","debouncedNext","DebounceTimeSubscriber","debouncedSubscription","lastValue","clearDebounce","defaultValue","DefaultIfEmptyOperator","DefaultIfEmptySubscriber","absoluteDelay","delayFor","abs","DelayOperator","DelaySubscriber","notification","observe","_schedule","scheduleNotification","DelayMessage","createNext","createComplete","delayDurationSelector","subscriptionDelay","SubscriptionDelayObservable","DelayWhenOperator","DelayWhenSubscriber","delayNotifierSubscriptions","removeSubscription","tryComplete","delayNotifier","tryDelay","subscriptionIdx","notifierSubscription","SubscriptionDelaySubscriber","sourceSubscribed","subscribeToSource","DeMaterializeOperator","DeMaterializeSubscriber","nextOrObserver","DoOperator","DoSubscriber","safeSubscriber","syncErrorThrowable","syncErrorThrown","syncErrorValue","ElementAtOperator","ElementAtSubscriber","SwitchFirstOperator","SwitchFirstSubscriber","hasSubscription","SwitchFirstMapOperator","SwitchFirstMapSubscriber","tryNext","ExpandOperator","ExpandSubscriber","subscribeToProjection","callback","FinallyOperator","FinallySubscriber","elementSelector","GroupByOperator","Map_1","FastMap_1","GroupBySubscriber","groups","attemptedToUnsubscribe","_group","FastMap","Map","element","group","set","groupedObservable","GroupedObservable","GroupDurationSubscriber","forEach","clear","removeGroup","groupSubject","refCountSubscription","InnerRefCountSubscription","IgnoreElementsOperator","IgnoreElementsSubscriber","IsEmptyOperator","IsEmptySubscriber","MapToOperator","MapToSubscriber","MaterializeOperator","MaterializeSubscriber","createError","comparer","ReduceOperator","seed","MergeScanOperator","MergeScanSubscriber","acc","PairwiseOperator","PairwiseSubscriber","hasPrev","prev","not_1","not","properties","plucker","props","mapper","currentProp","RepeatOperator","RepeatSubscriber","notifier","RepeatWhenOperator","RepeatWhenSubscriber","notifications","retries","retriesSubscription","RetryOperator","RetrySubscriber","RetryWhenOperator","RetryWhenSubscriber","errors","SampleOperator","SampleSubscriber","SampleTimeOperator","dispatchNotification","SampleTimeSubscriber","accumulator","ScanOperator","ScanSubscriber","accumulatorSet","_seed","enumerable","configurable","compareTo","comparor","SequenceEqualOperator","SequenceEqualSubscriber","_oneComplete","SequenceEqualCompareToSubscriber","emit","checkValues","_c","areEqual","nextB","shareSubjectFactory","SingleOperator","SingleSubscriber","seenValue","applySingleValue","singleValue","SkipOperator","SkipSubscriber","SkipUntilOperator","SkipUntilSubscriber","isInnerStopped","SkipWhileOperator","SkipWhileSubscriber","skipping","tryCallPredicate","ScalarObservable_1","ScalarObservable","SubscribeOnObservable_1","SwitchOperator","SwitchSubscriber","unsubscribeInner","SwitchMapOperator","SwitchMapSubscriber","_tryNotifyNext","SwitchMapToOperator","SwitchMapToSubscriber","inner","tryResultSelector","TakeOperator","TakeSubscriber","TakeLastOperator","TakeLastSubscriber","ring","TakeUntilOperator","TakeUntilSubscriber","TakeWhileOperator","TakeWhileSubscriber","nextOrComplete","predicateResult","ThrottleOperator","ThrottleSubscriber","tryDurationSelector","emitAndThrottle","ThrottleTimeOperator","ThrottleTimeSubscriber","due","errorToSend","absoluteTimeout","waitFor","TimeoutOperator","TimeoutSubscriber","_previousIndex","_hasCompleted","scheduleTimeout","dispatchTimeout","currentIndex","previousIndex","notifyTimeout","withObservable","TimeoutWithOperator","TimeoutWithSubscriber","timeoutSubscription","handleTimeout","timeoutState","ToArrayOperator","ToArraySubscriber","windowBoundaries","WindowOperator","windowSubscriber","WindowSubscriber","sourceSubscription","openWindow","prevWindow","newWindow","windowSize","startWindowEvery","WindowCountOperator","WindowCountSubscriber","windows","windowTimeSpan","windowCreationInterval","WindowTimeOperator","dispatchWindowTimeSpanOnly","dispatchWindowCreation","timeSpanState","dispatchWindowClose","closeWindow","WindowTimeSubscriber","window_2","window_3","window_4","WindowToggleOperator","WindowToggleSubscriber","openSubscription","unsubscribeClosingNotification","closingNotification","WithLatestFromOperator","WithLatestFromSubscriber","AnimationFrame_1","AnimationFrameAction","AnimationFrame","requestAnimationFrame","cancelAnimationFrame","AnimationFrameScheduler","Immediate_1","Immediate","setImmediate","clearImmediate","AnimationFrameAction_1","AnimationFrameScheduler_1","SubscriptionLoggable_1","applyMixins_1","ColdObservable","messages","scheduleMessages","messagesLength","HotObservable","setup","ColdObservable_1","HotObservable_1","defaultMaxFrame","assertDeepEqual","hotObservables","coldObservables","flushTests","createTime","marbles","createColdObservable","parseMarbles","cold","createHotObservable","materializeInnerObservable","outerFrame","expectObservable","unsubscriptionMarbles","flushTest","ready","unsubscriptionFrame","parseMarblesAsSubscriptions","toBe","expected","expectSubscriptions","actualSubscriptionLogs","marblesArray","readyFlushTests","test","groupStart","subscriptionFrame","materializeInnerObservables","testMessages","subIndex","frameOffset","getValue","RequestAnimationFrameDefinition","mozRequestAnimationFrame","mozCancelAnimationFrame","webkitRequestAnimationFrame","webkitCancelAnimationFrame","msRequestAnimationFrame","msCancelAnimationFrame","oRequestAnimationFrame","oCancelAnimationFrame","clearTimeout","cb","setTimeout","ImmediateDefinition","nextHandle","tasksByHandle","currentlyRunningATask","canUseProcessNextTick","createProcessNextTickSetImmediate","canUsePostMessage","createPostMessageSetImmediate","canUseMessageChannel","createMessageChannelSetImmediate","canUseReadyStateChange","createReadyStateChangeSetImmediate","createSetTimeoutSetImmediate","ci","handle","instance","identify","o","process","MessageChannel","document","createElement","postMessage","importScripts","postMessageIsAsynchronous_1","oldOnMessage","partiallyApplied","fn","Function","addFromSetImmediateArguments","nextTick","runIfPresent","messagePrefix","random","onGlobalMessage","globalMessageHandler","event","task","channel","port1","port2","doc","html","documentElement","script","removeChild","appendChild","MapPolyfill_1","MapPolyfill","size","_values","_keys","output","pred","notPred","__WEBPACK_IMPORTED_MODULE_1__angular_router__","__WEBPACK_IMPORTED_MODULE_2__building_service__","BuildingDetailComponent","route","buildingService","ngOnInit","template","__WEBPACK_IMPORTED_MODULE_1__building_service__","BuildingListComponent","mode","date","setHours","errorMessage","providers","styles","BuildingComponent","__WEBPACK_IMPORTED_MODULE_2__building_component__","__WEBPACK_IMPORTED_MODULE_3__building_list_component__","BuildingRoutingModule","routes","path","component","children","forChild"],"mappings":"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","file":"1.6106afac6988fc68a670.chunk.js","sourcesContent":["webpackJsonp([1,5],Array(684).concat([\n/* 684 */\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__angular_common__ = __webpack_require__(103);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__angular_forms__ = __webpack_require__(384);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__building_component__ = __webpack_require__(988);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__building_detail_component__ = __webpack_require__(986);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__building_list_component__ = __webpack_require__(987);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__building_routing_module__ = __webpack_require__(1000);\n/* harmony export (binding) */ __webpack_require__.d(exports, \"BuildingModule\", function() { return BuildingModule; });\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\n\n\n\n\n\n\n\nvar BuildingModule = (function () {\n    function BuildingModule() {\n    }\n    BuildingModule = __decorate([\n        __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__[\"NgModule\"])({\n            imports: [__WEBPACK_IMPORTED_MODULE_1__angular_common__[\"CommonModule\"], __WEBPACK_IMPORTED_MODULE_2__angular_forms__[\"FormsModule\"], __WEBPACK_IMPORTED_MODULE_6__building_routing_module__[\"a\" /* BuildingRoutingModule */]],\n            declarations: [\n                __WEBPACK_IMPORTED_MODULE_3__building_component__[\"a\" /* BuildingComponent */], __WEBPACK_IMPORTED_MODULE_4__building_detail_component__[\"a\" /* BuildingDetailComponent */], __WEBPACK_IMPORTED_MODULE_5__building_list_component__[\"a\" /* BuildingListComponent */]\n            ]\n        }), \n        __metadata('design:paramtypes', [])\n    ], BuildingModule);\n    return BuildingModule;\n}());\n\n\n/***/ },\n/* 685 */,\n/* 686 */\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\"use strict\";\nvar AsyncAction_1 = __webpack_require__(688);\nvar AsyncScheduler_1 = __webpack_require__(689);\nexports.async = new AsyncScheduler_1.AsyncScheduler(AsyncAction_1.AsyncAction);\n//# sourceMappingURL=async.js.map\n\n/***/ },\n/* 687 */\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\"use strict\";\nvar MulticastObservable_1 = __webpack_require__(700);\nvar ConnectableObservable_1 = __webpack_require__(694);\n/**\n * Returns an Observable that emits the results of invoking a specified selector on items\n * emitted by a ConnectableObservable that shares a single subscription to the underlying stream.\n *\n * <img src=\"./img/multicast.png\" width=\"100%\">\n *\n * @param {Function|Subject} Factory function to create an intermediate subject through\n * which the source sequence's elements will be multicast to the selector function\n * or Subject to push source elements into.\n * @param {Function} Optional selector function that can use the multicasted source stream\n * as many times as needed, without causing multiple subscriptions to the source stream.\n * Subscribers to the given source will receive all notifications of the source from the\n * time of the subscription forward.\n * @return {Observable} an Observable that emits the results of invoking the selector\n * on the items emitted by a `ConnectableObservable` that shares a single subscription to\n * the underlying stream.\n * @method multicast\n * @owner Observable\n */\nfunction multicast(subjectOrSubjectFactory, selector) {\n    var subjectFactory;\n    if (typeof subjectOrSubjectFactory === 'function') {\n        subjectFactory = subjectOrSubjectFactory;\n    }\n    else {\n        subjectFactory = function subjectFactory() {\n            return subjectOrSubjectFactory;\n        };\n    }\n    return !selector ?\n        new ConnectableObservable_1.ConnectableObservable(this, subjectFactory) :\n        new MulticastObservable_1.MulticastObservable(this, subjectFactory, selector);\n}\nexports.multicast = multicast;\n//# sourceMappingURL=multicast.js.map\n\n/***/ },\n/* 688 */\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar root_1 = __webpack_require__(50);\nvar Action_1 = __webpack_require__(964);\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar AsyncAction = (function (_super) {\n    __extends(AsyncAction, _super);\n    function AsyncAction(scheduler, work) {\n        _super.call(this, scheduler, work);\n        this.scheduler = scheduler;\n        this.work = work;\n        this.pending = false;\n    }\n    AsyncAction.prototype.schedule = function (state, delay) {\n        if (delay === void 0) { delay = 0; }\n        if (this.closed) {\n            return this;\n        }\n        // Always replace the current state with the new state.\n        this.state = state;\n        // Set the pending flag indicating that this action has been scheduled, or\n        // has recursively rescheduled itself.\n        this.pending = true;\n        var id = this.id;\n        var scheduler = this.scheduler;\n        //\n        // Important implementation note:\n        //\n        // Actions only execute once by default, unless rescheduled from within the\n        // scheduled callback. This allows us to implement single and repeat\n        // actions via the same code path, without adding API surface area, as well\n        // as mimic traditional recursion but across asynchronous boundaries.\n        //\n        // However, JS runtimes and timers distinguish between intervals achieved by\n        // serial `setTimeout` calls vs. a single `setInterval` call. An interval of\n        // serial `setTimeout` calls can be individually delayed, which delays\n        // scheduling the next `setTimeout`, and so on. `setInterval` attempts to\n        // guarantee the interval callback will be invoked more precisely to the\n        // interval period, regardless of load.\n        //\n        // Therefore, we use `setInterval` to schedule single and repeat actions.\n        // If the action reschedules itself with the same delay, the interval is not\n        // canceled. If the action doesn't reschedule, or reschedules with a\n        // different delay, the interval will be canceled after scheduled callback\n        // execution.\n        //\n        if (id != null) {\n            this.id = this.recycleAsyncId(scheduler, id, delay);\n        }\n        this.delay = delay;\n        // If this action has already an async Id, don't request a new one.\n        this.id = this.id || this.requestAsyncId(scheduler, this.id, delay);\n        return this;\n    };\n    AsyncAction.prototype.requestAsyncId = function (scheduler, id, delay) {\n        if (delay === void 0) { delay = 0; }\n        return root_1.root.setInterval(scheduler.flush.bind(scheduler, this), delay);\n    };\n    AsyncAction.prototype.recycleAsyncId = function (scheduler, id, delay) {\n        if (delay === void 0) { delay = 0; }\n        // If this action is rescheduled with the same delay time, don't clear the interval id.\n        if (delay !== null && this.delay === delay) {\n            return id;\n        }\n        // Otherwise, if the action's delay time is different from the current delay,\n        // clear the interval id\n        return root_1.root.clearInterval(id) && undefined || undefined;\n    };\n    /**\n     * Immediately executes this action and the `work` it contains.\n     * @return {any}\n     */\n    AsyncAction.prototype.execute = function (state, delay) {\n        if (this.closed) {\n            return new Error('executing a cancelled action');\n        }\n        this.pending = false;\n        var error = this._execute(state, delay);\n        if (error) {\n            return error;\n        }\n        else if (this.pending === false && this.id != null) {\n            // Dequeue if the action didn't reschedule itself. Don't call\n            // unsubscribe(), because the action could reschedule later.\n            // For example:\n            // ```\n            // scheduler.schedule(function doWork(counter) {\n            //   /* ... I'm a busy worker bee ... */\n            //   var originalAction = this;\n            //   /* wait 100ms before rescheduling the action */\n            //   setTimeout(function () {\n            //     originalAction.schedule(counter + 1);\n            //   }, 100);\n            // }, 1000);\n            // ```\n            this.id = this.recycleAsyncId(this.scheduler, this.id, null);\n        }\n    };\n    AsyncAction.prototype._execute = function (state, delay) {\n        var errored = false;\n        var errorValue = undefined;\n        try {\n            this.work(state);\n        }\n        catch (e) {\n            errored = true;\n            errorValue = !!e && e || new Error(e);\n        }\n        if (errored) {\n            this.unsubscribe();\n            return errorValue;\n        }\n    };\n    AsyncAction.prototype._unsubscribe = function () {\n        var id = this.id;\n        var scheduler = this.scheduler;\n        var actions = scheduler.actions;\n        var index = actions.indexOf(this);\n        this.work = null;\n        this.delay = null;\n        this.state = null;\n        this.pending = false;\n        this.scheduler = null;\n        if (index !== -1) {\n            actions.splice(index, 1);\n        }\n        if (id != null) {\n            this.id = this.recycleAsyncId(scheduler, id, null);\n        }\n    };\n    return AsyncAction;\n}(Action_1.Action));\nexports.AsyncAction = AsyncAction;\n//# sourceMappingURL=AsyncAction.js.map\n\n/***/ },\n/* 689 */\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Scheduler_1 = __webpack_require__(720);\nvar AsyncScheduler = (function (_super) {\n    __extends(AsyncScheduler, _super);\n    function AsyncScheduler() {\n        _super.apply(this, arguments);\n        this.actions = [];\n        /**\n         * A flag to indicate whether the Scheduler is currently executing a batch of\n         * queued actions.\n         * @type {boolean}\n         */\n        this.active = false;\n        /**\n         * An internal ID used to track the latest asynchronous task such as those\n         * coming from `setTimeout`, `setInterval`, `requestAnimationFrame`, and\n         * others.\n         * @type {any}\n         */\n        this.scheduled = undefined;\n    }\n    AsyncScheduler.prototype.flush = function (action) {\n        var actions = this.actions;\n        if (this.active) {\n            actions.push(action);\n            return;\n        }\n        var error;\n        this.active = true;\n        do {\n            if (error = action.execute(action.state, action.delay)) {\n                break;\n            }\n        } while (action = actions.shift()); // exhaust the scheduler queue\n        this.active = false;\n        if (error) {\n            while (action = actions.shift()) {\n                action.unsubscribe();\n            }\n            throw error;\n        }\n    };\n    return AsyncScheduler;\n}(Scheduler_1.Scheduler));\nexports.AsyncScheduler = AsyncScheduler;\n//# sourceMappingURL=AsyncScheduler.js.map\n\n/***/ },\n/* 690 */\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Subject_1 = __webpack_require__(66);\nvar Subscription_1 = __webpack_require__(147);\n/**\n * @class AsyncSubject<T>\n */\nvar AsyncSubject = (function (_super) {\n    __extends(AsyncSubject, _super);\n    function AsyncSubject() {\n        _super.apply(this, arguments);\n        this.value = null;\n        this.hasNext = false;\n        this.hasCompleted = false;\n    }\n    AsyncSubject.prototype._subscribe = function (subscriber) {\n        if (this.hasCompleted && this.hasNext) {\n            subscriber.next(this.value);\n            subscriber.complete();\n            return Subscription_1.Subscription.EMPTY;\n        }\n        else if (this.hasError) {\n            subscriber.error(this.thrownError);\n            return Subscription_1.Subscription.EMPTY;\n        }\n        return _super.prototype._subscribe.call(this, subscriber);\n    };\n    AsyncSubject.prototype.next = function (value) {\n        if (!this.hasCompleted) {\n            this.value = value;\n            this.hasNext = true;\n        }\n    };\n    AsyncSubject.prototype.complete = function () {\n        this.hasCompleted = true;\n        if (this.hasNext) {\n            _super.prototype.next.call(this, this.value);\n        }\n        _super.prototype.complete.call(this);\n    };\n    return AsyncSubject;\n}(Subject_1.Subject));\nexports.AsyncSubject = AsyncSubject;\n//# sourceMappingURL=AsyncSubject.js.map\n\n/***/ },\n/* 691 */\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Subject_1 = __webpack_require__(66);\nvar queue_1 = __webpack_require__(713);\nvar observeOn_1 = __webpack_require__(386);\n/**\n * @class ReplaySubject<T>\n */\nvar ReplaySubject = (function (_super) {\n    __extends(ReplaySubject, _super);\n    function ReplaySubject(bufferSize, windowTime, scheduler) {\n        if (bufferSize === void 0) { bufferSize = Number.POSITIVE_INFINITY; }\n        if (windowTime === void 0) { windowTime = Number.POSITIVE_INFINITY; }\n        _super.call(this);\n        this.scheduler = scheduler;\n        this._events = [];\n        this._bufferSize = bufferSize < 1 ? 1 : bufferSize;\n        this._windowTime = windowTime < 1 ? 1 : windowTime;\n    }\n    ReplaySubject.prototype.next = function (value) {\n        var now = this._getNow();\n        this._events.push(new ReplayEvent(now, value));\n        this._trimBufferThenGetEvents();\n        _super.prototype.next.call(this, value);\n    };\n    ReplaySubject.prototype._subscribe = function (subscriber) {\n        var _events = this._trimBufferThenGetEvents();\n        var scheduler = this.scheduler;\n        if (scheduler) {\n            subscriber.add(subscriber = new observeOn_1.ObserveOnSubscriber(subscriber, scheduler));\n        }\n        var len = _events.length;\n        for (var i = 0; i < len && !subscriber.closed; i++) {\n            subscriber.next(_events[i].value);\n        }\n        return _super.prototype._subscribe.call(this, subscriber);\n    };\n    ReplaySubject.prototype._getNow = function () {\n        return (this.scheduler || queue_1.queue).now();\n    };\n    ReplaySubject.prototype._trimBufferThenGetEvents = function () {\n        var now = this._getNow();\n        var _bufferSize = this._bufferSize;\n        var _windowTime = this._windowTime;\n        var _events = this._events;\n        var eventsCount = _events.length;\n        var spliceCount = 0;\n        // Trim events that fall out of the time window.\n        // Start at the front of the list. Break early once\n        // we encounter an event that falls within the window.\n        while (spliceCount < eventsCount) {\n            if ((now - _events[spliceCount].time) < _windowTime) {\n                break;\n            }\n            spliceCount++;\n        }\n        if (eventsCount > _bufferSize) {\n            spliceCount = Math.max(spliceCount, eventsCount - _bufferSize);\n        }\n        if (spliceCount > 0) {\n            _events.splice(0, spliceCount);\n        }\n        return _events;\n    };\n    return ReplaySubject;\n}(Subject_1.Subject));\nexports.ReplaySubject = ReplaySubject;\nvar ReplayEvent = (function () {\n    function ReplayEvent(time, value) {\n        this.time = time;\n        this.value = value;\n    }\n    return ReplayEvent;\n}());\n//# sourceMappingURL=ReplaySubject.js.map\n\n/***/ },\n/* 692 */\n/***/ function(module, exports) {\n\n\"use strict\";\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\n/**\n * An error thrown when an element was queried at a certain index of an\n * Observable, but no such index or position exists in that sequence.\n *\n * @see {@link elementAt}\n * @see {@link take}\n * @see {@link takeLast}\n *\n * @class ArgumentOutOfRangeError\n */\nvar ArgumentOutOfRangeError = (function (_super) {\n    __extends(ArgumentOutOfRangeError, _super);\n    function ArgumentOutOfRangeError() {\n        var err = _super.call(this, 'argument out of range');\n        this.name = err.name = 'ArgumentOutOfRangeError';\n        this.stack = err.stack;\n        this.message = err.message;\n    }\n    return ArgumentOutOfRangeError;\n}(Error));\nexports.ArgumentOutOfRangeError = ArgumentOutOfRangeError;\n//# sourceMappingURL=ArgumentOutOfRangeError.js.map\n\n/***/ },\n/* 693 */\n/***/ function(module, exports) {\n\n\"use strict\";\n\"use strict\";\nfunction isDate(value) {\n    return value instanceof Date && !isNaN(+value);\n}\nexports.isDate = isDate;\n//# sourceMappingURL=isDate.js.map\n\n/***/ },\n/* 694 */\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Subject_1 = __webpack_require__(66);\nvar Observable_1 = __webpack_require__(14);\nvar Subscriber_1 = __webpack_require__(26);\nvar Subscription_1 = __webpack_require__(147);\n/**\n * @class ConnectableObservable<T>\n */\nvar ConnectableObservable = (function (_super) {\n    __extends(ConnectableObservable, _super);\n    function ConnectableObservable(source, subjectFactory) {\n        _super.call(this);\n        this.source = source;\n        this.subjectFactory = subjectFactory;\n        this._refCount = 0;\n    }\n    ConnectableObservable.prototype._subscribe = function (subscriber) {\n        return this.getSubject().subscribe(subscriber);\n    };\n    ConnectableObservable.prototype.getSubject = function () {\n        var subject = this._subject;\n        if (!subject || subject.isStopped) {\n            this._subject = this.subjectFactory();\n        }\n        return this._subject;\n    };\n    ConnectableObservable.prototype.connect = function () {\n        var connection = this._connection;\n        if (!connection) {\n            connection = this._connection = new Subscription_1.Subscription();\n            connection.add(this.source\n                .subscribe(new ConnectableSubscriber(this.getSubject(), this)));\n            if (connection.closed) {\n                this._connection = null;\n                connection = Subscription_1.Subscription.EMPTY;\n            }\n            else {\n                this._connection = connection;\n            }\n        }\n        return connection;\n    };\n    ConnectableObservable.prototype.refCount = function () {\n        return this.lift(new RefCountOperator(this));\n    };\n    return ConnectableObservable;\n}(Observable_1.Observable));\nexports.ConnectableObservable = ConnectableObservable;\nvar ConnectableSubscriber = (function (_super) {\n    __extends(ConnectableSubscriber, _super);\n    function ConnectableSubscriber(destination, connectable) {\n        _super.call(this, destination);\n        this.connectable = connectable;\n    }\n    ConnectableSubscriber.prototype._error = function (err) {\n        this._unsubscribe();\n        _super.prototype._error.call(this, err);\n    };\n    ConnectableSubscriber.prototype._complete = function () {\n        this._unsubscribe();\n        _super.prototype._complete.call(this);\n    };\n    ConnectableSubscriber.prototype._unsubscribe = function () {\n        var connectable = this.connectable;\n        if (connectable) {\n            this.connectable = null;\n            var connection = connectable._connection;\n            connectable._refCount = 0;\n            connectable._subject = null;\n            connectable._connection = null;\n            if (connection) {\n                connection.unsubscribe();\n            }\n        }\n    };\n    return ConnectableSubscriber;\n}(Subject_1.SubjectSubscriber));\nvar RefCountOperator = (function () {\n    function RefCountOperator(connectable) {\n        this.connectable = connectable;\n    }\n    RefCountOperator.prototype.call = function (subscriber, source) {\n        var connectable = this.connectable;\n        connectable._refCount++;\n        var refCounter = new RefCountSubscriber(subscriber, connectable);\n        var subscription = source._subscribe(refCounter);\n        if (!refCounter.closed) {\n            refCounter.connection = connectable.connect();\n        }\n        return subscription;\n    };\n    return RefCountOperator;\n}());\nvar RefCountSubscriber = (function (_super) {\n    __extends(RefCountSubscriber, _super);\n    function RefCountSubscriber(destination, connectable) {\n        _super.call(this, destination);\n        this.connectable = connectable;\n    }\n    RefCountSubscriber.prototype._unsubscribe = function () {\n        var connectable = this.connectable;\n        if (!connectable) {\n            this.connection = null;\n            return;\n        }\n        this.connectable = null;\n        var refCount = connectable._refCount;\n        if (refCount <= 0) {\n            this.connection = null;\n            return;\n        }\n        connectable._refCount = refCount - 1;\n        if (refCount > 1) {\n            this.connection = null;\n            return;\n        }\n        ///\n        // Compare the local RefCountSubscriber's connection Subscription to the\n        // connection Subscription on the shared ConnectableObservable. In cases\n        // where the ConnectableObservable source synchronously emits values, and\n        // the RefCountSubscriber's dowstream Observers synchronously unsubscribe,\n        // execution continues to here before the RefCountOperator has a chance to\n        // supply the RefCountSubscriber with the shared connection Subscription.\n        // For example:\n        // ```\n        // Observable.range(0, 10)\n        //   .publish()\n        //   .refCount()\n        //   .take(5)\n        //   .subscribe();\n        // ```\n        // In order to account for this case, RefCountSubscriber should only dispose\n        // the ConnectableObservable's shared connection Subscription if the\n        // connection Subscription exists, *and* either:\n        //   a. RefCountSubscriber doesn't have a reference to the shared connection\n        //      Subscription yet, or,\n        //   b. RefCountSubscriber's connection Subscription reference is identical\n        //      to the shared connection Subscription\n        ///\n        var connection = this.connection;\n        var sharedConnection = connectable._connection;\n        this.connection = null;\n        if (sharedConnection && (!connection || sharedConnection === connection)) {\n            sharedConnection.unsubscribe();\n        }\n    };\n    return RefCountSubscriber;\n}(Subscriber_1.Subscriber));\n//# sourceMappingURL=ConnectableObservable.js.map\n\n/***/ },\n/* 695 */\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar ArrayObservable_1 = __webpack_require__(232);\nvar isArray_1 = __webpack_require__(148);\nvar OuterSubscriber_1 = __webpack_require__(145);\nvar subscribeToResult_1 = __webpack_require__(146);\nvar none = {};\n/**\n * Combines multiple Observables to create an Observable whose values are\n * calculated from the latest values of each of its input Observables.\n *\n * <span class=\"informal\">Whenever any input Observable emits a value, it\n * computes a formula using the latest values from all the inputs, then emits\n * the output of that formula.</span>\n *\n * <img src=\"./img/combineLatest.png\" width=\"100%\">\n *\n * `combineLatest` combines the values from this Observable with values from\n * Observables passed as arguments. This is done by subscribing to each\n * Observable, in order, and collecting an array of each of the most recent\n * values any time any of the input Observables emits, then either taking that\n * array and passing it as arguments to an optional `project` function and\n * emitting the return value of that, or just emitting the array of recent\n * values directly if there is no `project` function.\n *\n * @example <caption>Dynamically calculate the Body-Mass Index from an Observable of weight and one for height</caption>\n * var weight = Rx.Observable.of(70, 72, 76, 79, 75);\n * var height = Rx.Observable.of(1.76, 1.77, 1.78);\n * var bmi = weight.combineLatest(height, (w, h) => w / (h * h));\n * bmi.subscribe(x => console.log('BMI is ' + x));\n *\n * @see {@link combineAll}\n * @see {@link merge}\n * @see {@link withLatestFrom}\n *\n * @param {Observable} other An input Observable to combine with the source\n * Observable. More than one input Observables may be given as argument.\n * @param {function} [project] An optional function to project the values from\n * the combined latest values into a new value on the output Observable.\n * @return {Observable} An Observable of projected values from the most recent\n * values from each input Observable, or an array of the most recent values from\n * each input Observable.\n * @method combineLatest\n * @owner Observable\n */\nfunction combineLatest() {\n    var observables = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        observables[_i - 0] = arguments[_i];\n    }\n    var project = null;\n    if (typeof observables[observables.length - 1] === 'function') {\n        project = observables.pop();\n    }\n    // if the first and only other argument besides the resultSelector is an array\n    // assume it's been called with `combineLatest([obs1, obs2, obs3], project)`\n    if (observables.length === 1 && isArray_1.isArray(observables[0])) {\n        observables = observables[0];\n    }\n    observables.unshift(this);\n    return new ArrayObservable_1.ArrayObservable(observables).lift(new CombineLatestOperator(project));\n}\nexports.combineLatest = combineLatest;\n/* tslint:enable:max-line-length */\nvar CombineLatestOperator = (function () {\n    function CombineLatestOperator(project) {\n        this.project = project;\n    }\n    CombineLatestOperator.prototype.call = function (subscriber, source) {\n        return source._subscribe(new CombineLatestSubscriber(subscriber, this.project));\n    };\n    return CombineLatestOperator;\n}());\nexports.CombineLatestOperator = CombineLatestOperator;\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar CombineLatestSubscriber = (function (_super) {\n    __extends(CombineLatestSubscriber, _super);\n    function CombineLatestSubscriber(destination, project) {\n        _super.call(this, destination);\n        this.project = project;\n        this.active = 0;\n        this.values = [];\n        this.observables = [];\n    }\n    CombineLatestSubscriber.prototype._next = function (observable) {\n        this.values.push(none);\n        this.observables.push(observable);\n    };\n    CombineLatestSubscriber.prototype._complete = function () {\n        var observables = this.observables;\n        var len = observables.length;\n        if (len === 0) {\n            this.destination.complete();\n        }\n        else {\n            this.active = len;\n            this.toRespond = len;\n            for (var i = 0; i < len; i++) {\n                var observable = observables[i];\n                this.add(subscribeToResult_1.subscribeToResult(this, observable, observable, i));\n            }\n        }\n    };\n    CombineLatestSubscriber.prototype.notifyComplete = function (unused) {\n        if ((this.active -= 1) === 0) {\n            this.destination.complete();\n        }\n    };\n    CombineLatestSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {\n        var values = this.values;\n        var oldVal = values[outerIndex];\n        var toRespond = !this.toRespond\n            ? 0\n            : oldVal === none ? --this.toRespond : this.toRespond;\n        values[outerIndex] = innerValue;\n        if (toRespond === 0) {\n            if (this.project) {\n                this._tryProject(values);\n            }\n            else {\n                this.destination.next(values.slice());\n            }\n        }\n    };\n    CombineLatestSubscriber.prototype._tryProject = function (values) {\n        var result;\n        try {\n            result = this.project.apply(this, values);\n        }\n        catch (err) {\n            this.destination.error(err);\n            return;\n        }\n        this.destination.next(result);\n    };\n    return CombineLatestSubscriber;\n}(OuterSubscriber_1.OuterSubscriber));\nexports.CombineLatestSubscriber = CombineLatestSubscriber;\n//# sourceMappingURL=combineLatest.js.map\n\n/***/ },\n/* 696 */\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\"use strict\";\nvar isScheduler_1 = __webpack_require__(381);\nvar ArrayObservable_1 = __webpack_require__(232);\nvar mergeAll_1 = __webpack_require__(102);\n/**\n * Creates an output Observable which sequentially emits all values from every\n * given input Observable after the current Observable.\n *\n * <span class=\"informal\">Concatenates multiple Observables together by\n * sequentially emitting their values, one Observable after the other.</span>\n *\n * <img src=\"./img/concat.png\" width=\"100%\">\n *\n * Joins this Observable with multiple other Observables by subscribing to them\n * one at a time, starting with the source, and merging their results into the\n * output Observable. Will wait for each Observable to complete before moving\n * on to the next.\n *\n * @example <caption>Concatenate a timer counting from 0 to 3 with a synchronous sequence from 1 to 10</caption>\n * var timer = Rx.Observable.interval(1000).take(4);\n * var sequence = Rx.Observable.range(1, 10);\n * var result = timer.concat(sequence);\n * result.subscribe(x => console.log(x));\n *\n * @example <caption>Concatenate 3 Observables</caption>\n * var timer1 = Rx.Observable.interval(1000).take(10);\n * var timer2 = Rx.Observable.interval(2000).take(6);\n * var timer3 = Rx.Observable.interval(500).take(10);\n * var result = timer1.concat(timer2, timer3);\n * result.subscribe(x => console.log(x));\n *\n * @see {@link concatAll}\n * @see {@link concatMap}\n * @see {@link concatMapTo}\n *\n * @param {Observable} other An input Observable to concatenate after the source\n * Observable. More than one input Observables may be given as argument.\n * @param {Scheduler} [scheduler=null] An optional Scheduler to schedule each\n * Observable subscription on.\n * @return {Observable} All values of each passed Observable merged into a\n * single Observable, in order, in serial fashion.\n * @method concat\n * @owner Observable\n */\nfunction concat() {\n    var observables = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        observables[_i - 0] = arguments[_i];\n    }\n    return concatStatic.apply(void 0, [this].concat(observables));\n}\nexports.concat = concat;\n/* tslint:enable:max-line-length */\n/**\n * Creates an output Observable which sequentially emits all values from every\n * given input Observable after the current Observable.\n *\n * <span class=\"informal\">Concatenates multiple Observables together by\n * sequentially emitting their values, one Observable after the other.</span>\n *\n * <img src=\"./img/concat.png\" width=\"100%\">\n *\n * Joins multiple Observables together by subscribing to them one at a time and\n * merging their results into the output Observable. Will wait for each\n * Observable to complete before moving on to the next.\n *\n * @example <caption>Concatenate a timer counting from 0 to 3 with a synchronous sequence from 1 to 10</caption>\n * var timer = Rx.Observable.interval(1000).take(4);\n * var sequence = Rx.Observable.range(1, 10);\n * var result = Rx.Observable.concat(timer, sequence);\n * result.subscribe(x => console.log(x));\n *\n * @example <caption>Concatenate 3 Observables</caption>\n * var timer1 = Rx.Observable.interval(1000).take(10);\n * var timer2 = Rx.Observable.interval(2000).take(6);\n * var timer3 = Rx.Observable.interval(500).take(10);\n * var result = Rx.Observable.concat(timer1, timer2, timer3);\n * result.subscribe(x => console.log(x));\n *\n * @see {@link concatAll}\n * @see {@link concatMap}\n * @see {@link concatMapTo}\n *\n * @param {Observable} input1 An input Observable to concatenate with others.\n * @param {Observable} input2 An input Observable to concatenate with others.\n * More than one input Observables may be given as argument.\n * @param {Scheduler} [scheduler=null] An optional Scheduler to schedule each\n * Observable subscription on.\n * @return {Observable} All values of each passed Observable merged into a\n * single Observable, in order, in serial fashion.\n * @static true\n * @name concat\n * @owner Observable\n */\nfunction concatStatic() {\n    var observables = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        observables[_i - 0] = arguments[_i];\n    }\n    var scheduler = null;\n    var args = observables;\n    if (isScheduler_1.isScheduler(args[observables.length - 1])) {\n        scheduler = args.pop();\n    }\n    return new ArrayObservable_1.ArrayObservable(observables, scheduler).lift(new mergeAll_1.MergeAllOperator(1));\n}\nexports.concatStatic = concatStatic;\n//# sourceMappingURL=concat.js.map\n\n/***/ },\n/* 697 */\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar ArrayObservable_1 = __webpack_require__(232);\nvar isArray_1 = __webpack_require__(148);\nvar Subscriber_1 = __webpack_require__(26);\nvar OuterSubscriber_1 = __webpack_require__(145);\nvar subscribeToResult_1 = __webpack_require__(146);\nvar iterator_1 = __webpack_require__(149);\n/**\n * @param observables\n * @return {Observable<R>}\n * @method zip\n * @owner Observable\n */\nfunction zipProto() {\n    var observables = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        observables[_i - 0] = arguments[_i];\n    }\n    observables.unshift(this);\n    return zipStatic.apply(this, observables);\n}\nexports.zipProto = zipProto;\n/* tslint:enable:max-line-length */\n/**\n * @param observables\n * @return {Observable<R>}\n * @static true\n * @name zip\n * @owner Observable\n */\nfunction zipStatic() {\n    var observables = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        observables[_i - 0] = arguments[_i];\n    }\n    var project = observables[observables.length - 1];\n    if (typeof project === 'function') {\n        observables.pop();\n    }\n    return new ArrayObservable_1.ArrayObservable(observables).lift(new ZipOperator(project));\n}\nexports.zipStatic = zipStatic;\nvar ZipOperator = (function () {\n    function ZipOperator(project) {\n        this.project = project;\n    }\n    ZipOperator.prototype.call = function (subscriber, source) {\n        return source._subscribe(new ZipSubscriber(subscriber, this.project));\n    };\n    return ZipOperator;\n}());\nexports.ZipOperator = ZipOperator;\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar ZipSubscriber = (function (_super) {\n    __extends(ZipSubscriber, _super);\n    function ZipSubscriber(destination, project, values) {\n        if (values === void 0) { values = Object.create(null); }\n        _super.call(this, destination);\n        this.index = 0;\n        this.iterators = [];\n        this.active = 0;\n        this.project = (typeof project === 'function') ? project : null;\n        this.values = values;\n    }\n    ZipSubscriber.prototype._next = function (value) {\n        var iterators = this.iterators;\n        var index = this.index++;\n        if (isArray_1.isArray(value)) {\n            iterators.push(new StaticArrayIterator(value));\n        }\n        else if (typeof value[iterator_1.$$iterator] === 'function') {\n            iterators.push(new StaticIterator(value[iterator_1.$$iterator]()));\n        }\n        else {\n            iterators.push(new ZipBufferIterator(this.destination, this, value, index));\n        }\n    };\n    ZipSubscriber.prototype._complete = function () {\n        var iterators = this.iterators;\n        var len = iterators.length;\n        this.active = len;\n        for (var i = 0; i < len; i++) {\n            var iterator = iterators[i];\n            if (iterator.stillUnsubscribed) {\n                this.add(iterator.subscribe(iterator, i));\n            }\n            else {\n                this.active--; // not an observable\n            }\n        }\n    };\n    ZipSubscriber.prototype.notifyInactive = function () {\n        this.active--;\n        if (this.active === 0) {\n            this.destination.complete();\n        }\n    };\n    ZipSubscriber.prototype.checkIterators = function () {\n        var iterators = this.iterators;\n        var len = iterators.length;\n        var destination = this.destination;\n        // abort if not all of them have values\n        for (var i = 0; i < len; i++) {\n            var iterator = iterators[i];\n            if (typeof iterator.hasValue === 'function' && !iterator.hasValue()) {\n                return;\n            }\n        }\n        var shouldComplete = false;\n        var args = [];\n        for (var i = 0; i < len; i++) {\n            var iterator = iterators[i];\n            var result = iterator.next();\n            // check to see if it's completed now that you've gotten\n            // the next value.\n            if (iterator.hasCompleted()) {\n                shouldComplete = true;\n            }\n            if (result.done) {\n                destination.complete();\n                return;\n            }\n            args.push(result.value);\n        }\n        if (this.project) {\n            this._tryProject(args);\n        }\n        else {\n            destination.next(args);\n        }\n        if (shouldComplete) {\n            destination.complete();\n        }\n    };\n    ZipSubscriber.prototype._tryProject = function (args) {\n        var result;\n        try {\n            result = this.project.apply(this, args);\n        }\n        catch (err) {\n            this.destination.error(err);\n            return;\n        }\n        this.destination.next(result);\n    };\n    return ZipSubscriber;\n}(Subscriber_1.Subscriber));\nexports.ZipSubscriber = ZipSubscriber;\nvar StaticIterator = (function () {\n    function StaticIterator(iterator) {\n        this.iterator = iterator;\n        this.nextResult = iterator.next();\n    }\n    StaticIterator.prototype.hasValue = function () {\n        return true;\n    };\n    StaticIterator.prototype.next = function () {\n        var result = this.nextResult;\n        this.nextResult = this.iterator.next();\n        return result;\n    };\n    StaticIterator.prototype.hasCompleted = function () {\n        var nextResult = this.nextResult;\n        return nextResult && nextResult.done;\n    };\n    return StaticIterator;\n}());\nvar StaticArrayIterator = (function () {\n    function StaticArrayIterator(array) {\n        this.array = array;\n        this.index = 0;\n        this.length = 0;\n        this.length = array.length;\n    }\n    StaticArrayIterator.prototype[iterator_1.$$iterator] = function () {\n        return this;\n    };\n    StaticArrayIterator.prototype.next = function (value) {\n        var i = this.index++;\n        var array = this.array;\n        return i < this.length ? { value: array[i], done: false } : { value: null, done: true };\n    };\n    StaticArrayIterator.prototype.hasValue = function () {\n        return this.array.length > this.index;\n    };\n    StaticArrayIterator.prototype.hasCompleted = function () {\n        return this.array.length === this.index;\n    };\n    return StaticArrayIterator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar ZipBufferIterator = (function (_super) {\n    __extends(ZipBufferIterator, _super);\n    function ZipBufferIterator(destination, parent, observable, index) {\n        _super.call(this, destination);\n        this.parent = parent;\n        this.observable = observable;\n        this.index = index;\n        this.stillUnsubscribed = true;\n        this.buffer = [];\n        this.isComplete = false;\n    }\n    ZipBufferIterator.prototype[iterator_1.$$iterator] = function () {\n        return this;\n    };\n    // NOTE: there is actually a name collision here with Subscriber.next and Iterator.next\n    //    this is legit because `next()` will never be called by a subscription in this case.\n    ZipBufferIterator.prototype.next = function () {\n        var buffer = this.buffer;\n        if (buffer.length === 0 && this.isComplete) {\n            return { value: null, done: true };\n        }\n        else {\n            return { value: buffer.shift(), done: false };\n        }\n    };\n    ZipBufferIterator.prototype.hasValue = function () {\n        return this.buffer.length > 0;\n    };\n    ZipBufferIterator.prototype.hasCompleted = function () {\n        return this.buffer.length === 0 && this.isComplete;\n    };\n    ZipBufferIterator.prototype.notifyComplete = function () {\n        if (this.buffer.length > 0) {\n            this.isComplete = true;\n            this.parent.notifyInactive();\n        }\n        else {\n            this.destination.complete();\n        }\n    };\n    ZipBufferIterator.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {\n        this.buffer.push(innerValue);\n        this.parent.checkIterators();\n    };\n    ZipBufferIterator.prototype.subscribe = function (value, index) {\n        return subscribeToResult_1.subscribeToResult(this, this.observable, this, index);\n    };\n    return ZipBufferIterator;\n}(OuterSubscriber_1.OuterSubscriber));\n//# sourceMappingURL=zip.js.map\n\n/***/ },\n/* 698 */\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\"use strict\";\nvar isArray_1 = __webpack_require__(148);\nfunction isNumeric(val) {\n    // parseFloat NaNs numeric-cast false positives (null|true|false|\"\")\n    // ...but misinterprets leading-number strings, particularly hex literals (\"0x...\")\n    // subtraction forces infinities to NaN\n    // adding 1 corrects loss of precision from parseFloat (#15100)\n    return !isArray_1.isArray(val) && (val - parseFloat(val) + 1) >= 0;\n}\nexports.isNumeric = isNumeric;\n;\n//# sourceMappingURL=isNumeric.js.map\n\n/***/ },\n/* 699 */\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__angular_http__ = __webpack_require__(388);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_rxjs_Rx__ = __webpack_require__(719);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_rxjs_Rx___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_2_rxjs_Rx__);\n/* unused harmony export Building */\n/* unused harmony export Data */\n/* unused harmony export Entry */\n/* harmony export (binding) */ __webpack_require__.d(exports, \"a\", function() { return BuildingService; });\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\n\n\n\nvar Building = (function () {\n    function Building(fields, data) {\n        this.fields = fields;\n        this.data = data;\n    }\n    return Building;\n}());\n// export class Fields {\n//   constructor(public postal: string, public city: string, public name: string, public img: string, public id: number, public address: string) { }\n// }\nvar Data = (function () {\n    function Data(entity, metric, entries) {\n        this.entity = entity;\n        this.metric = metric;\n        this.entries = entries;\n    }\n    return Data;\n}());\nvar Entry = (function () {\n    function Entry(timestamp, actual, expectedMin, expectedMax, co2) {\n        this.timestamp = timestamp;\n        this.actual = actual;\n        this.expectedMin = expectedMin;\n        this.expectedMax = expectedMax;\n        this.co2 = co2;\n    }\n    return Entry;\n}());\nvar BuildingService = (function () {\n    function BuildingService(http) {\n        this.http = http;\n        this.baseUrl = 'http://129.125.84.138:8099/sensor-data-rest/';\n    }\n    BuildingService.prototype.getBuildings = function (buildingID, entityID, interval, paramText, startDate, endDate) {\n        startDate = new Date(startDate);\n        endDate = new Date(endDate);\n        var response = this.http.get(this.baseUrl + buildingID + '/' + entityID + '/' + interval + '/' + paramText + 'start=' + startDate.toISOString() + '&end=' + endDate.toISOString())\n            .map(function (res) { return res.json().buildings; })\n            .catch(this.handleError);\n        return response;\n    };\n    // getBuilding(id: number | string) {\n    //   var response = this.getBuildings ( buildingID, entityID, interval, paramText, startDate, endDate )\n    //                      .map(buildings => buildings.find(building => building.id === id));\n    //   //console.log(response);\n    //   return response;\n    // }\n    BuildingService.prototype.handleError = function (error) {\n        var errMsg;\n        if (error instanceof __WEBPACK_IMPORTED_MODULE_1__angular_http__[\"a\" /* Response */]) {\n            var body = error.json() || '';\n            var err = body.error || JSON.stringify(body);\n            errMsg = error.status + \" - \" + (error.statusText || '') + \" \" + err;\n        }\n        else {\n            errMsg = error.message ? error.message : error.toString();\n        }\n        console.error(errMsg);\n        return __WEBPACK_IMPORTED_MODULE_2_rxjs_Rx__[\"Observable\"].throw(errMsg);\n    };\n    BuildingService = __decorate([\n        __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Injectable\"])(), \n        __metadata('design:paramtypes', [(typeof (_a = typeof __WEBPACK_IMPORTED_MODULE_1__angular_http__[\"b\" /* Http */] !== 'undefined' && __WEBPACK_IMPORTED_MODULE_1__angular_http__[\"b\" /* Http */]) === 'function' && _a) || Object])\n    ], BuildingService);\n    return BuildingService;\n    var _a;\n}());\n\n\n/***/ },\n/* 700 */\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Observable_1 = __webpack_require__(14);\nvar ConnectableObservable_1 = __webpack_require__(694);\nvar MulticastObservable = (function (_super) {\n    __extends(MulticastObservable, _super);\n    function MulticastObservable(source, subjectFactory, selector) {\n        _super.call(this);\n        this.source = source;\n        this.subjectFactory = subjectFactory;\n        this.selector = selector;\n    }\n    MulticastObservable.prototype._subscribe = function (subscriber) {\n        var _a = this, selector = _a.selector, source = _a.source;\n        var connectable = new ConnectableObservable_1.ConnectableObservable(source, this.subjectFactory);\n        var subscription = selector(connectable).subscribe(subscriber);\n        subscription.add(connectable.connect());\n        return subscription;\n    };\n    return MulticastObservable;\n}(Observable_1.Observable));\nexports.MulticastObservable = MulticastObservable;\n//# sourceMappingURL=MulticastObservable.js.map\n\n/***/ },\n/* 701 */\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar root_1 = __webpack_require__(50);\nvar tryCatch_1 = __webpack_require__(380);\nvar errorObject_1 = __webpack_require__(231);\nvar Observable_1 = __webpack_require__(14);\nvar Subscriber_1 = __webpack_require__(26);\nvar map_1 = __webpack_require__(101);\nfunction getCORSRequest() {\n    if (root_1.root.XMLHttpRequest) {\n        var xhr = new root_1.root.XMLHttpRequest();\n        if ('withCredentials' in xhr) {\n            xhr.withCredentials = !!this.withCredentials;\n        }\n        return xhr;\n    }\n    else if (!!root_1.root.XDomainRequest) {\n        return new root_1.root.XDomainRequest();\n    }\n    else {\n        throw new Error('CORS is not supported by your browser');\n    }\n}\nfunction getXMLHttpRequest() {\n    if (root_1.root.XMLHttpRequest) {\n        return new root_1.root.XMLHttpRequest();\n    }\n    else {\n        var progId = void 0;\n        try {\n            var progIds = ['Msxml2.XMLHTTP', 'Microsoft.XMLHTTP', 'Msxml2.XMLHTTP.4.0'];\n            for (var i = 0; i < 3; i++) {\n                try {\n                    progId = progIds[i];\n                    if (new root_1.root.ActiveXObject(progId)) {\n                        break;\n                    }\n                }\n                catch (e) {\n                }\n            }\n            return new root_1.root.ActiveXObject(progId);\n        }\n        catch (e) {\n            throw new Error('XMLHttpRequest is not supported by your browser');\n        }\n    }\n}\nfunction ajaxGet(url, headers) {\n    if (headers === void 0) { headers = null; }\n    return new AjaxObservable({ method: 'GET', url: url, headers: headers });\n}\nexports.ajaxGet = ajaxGet;\n;\nfunction ajaxPost(url, body, headers) {\n    return new AjaxObservable({ method: 'POST', url: url, body: body, headers: headers });\n}\nexports.ajaxPost = ajaxPost;\n;\nfunction ajaxDelete(url, headers) {\n    return new AjaxObservable({ method: 'DELETE', url: url, headers: headers });\n}\nexports.ajaxDelete = ajaxDelete;\n;\nfunction ajaxPut(url, body, headers) {\n    return new AjaxObservable({ method: 'PUT', url: url, body: body, headers: headers });\n}\nexports.ajaxPut = ajaxPut;\n;\nfunction ajaxGetJSON(url, headers) {\n    return new AjaxObservable({ method: 'GET', url: url, responseType: 'json', headers: headers })\n        .lift(new map_1.MapOperator(function (x, index) { return x.response; }, null));\n}\nexports.ajaxGetJSON = ajaxGetJSON;\n;\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @extends {Ignored}\n * @hide true\n */\nvar AjaxObservable = (function (_super) {\n    __extends(AjaxObservable, _super);\n    function AjaxObservable(urlOrRequest) {\n        _super.call(this);\n        var request = {\n            async: true,\n            createXHR: function () {\n                return this.crossDomain ? getCORSRequest.call(this) : getXMLHttpRequest();\n            },\n            crossDomain: false,\n            withCredentials: false,\n            headers: {},\n            method: 'GET',\n            responseType: 'json',\n            timeout: 0\n        };\n        if (typeof urlOrRequest === 'string') {\n            request.url = urlOrRequest;\n        }\n        else {\n            for (var prop in urlOrRequest) {\n                if (urlOrRequest.hasOwnProperty(prop)) {\n                    request[prop] = urlOrRequest[prop];\n                }\n            }\n        }\n        this.request = request;\n    }\n    AjaxObservable.prototype._subscribe = function (subscriber) {\n        return new AjaxSubscriber(subscriber, this.request);\n    };\n    /**\n     * Creates an observable for an Ajax request with either a request object with\n     * url, headers, etc or a string for a URL.\n     *\n     * @example\n     * source = Rx.Observable.ajax('/products');\n     * source = Rx.Observable.ajax({ url: 'products', method: 'GET' });\n     *\n     * @param {string|Object} request Can be one of the following:\n     *   A string of the URL to make the Ajax call.\n     *   An object with the following properties\n     *   - url: URL of the request\n     *   - body: The body of the request\n     *   - method: Method of the request, such as GET, POST, PUT, PATCH, DELETE\n     *   - async: Whether the request is async\n     *   - headers: Optional headers\n     *   - crossDomain: true if a cross domain request, else false\n     *   - createXHR: a function to override if you need to use an alternate\n     *   XMLHttpRequest implementation.\n     *   - resultSelector: a function to use to alter the output value type of\n     *   the Observable. Gets {@link AjaxResponse} as an argument.\n     * @return {Observable} An observable sequence containing the XMLHttpRequest.\n     * @static true\n     * @name ajax\n     * @owner Observable\n    */\n    AjaxObservable.create = (function () {\n        var create = function (urlOrRequest) {\n            return new AjaxObservable(urlOrRequest);\n        };\n        create.get = ajaxGet;\n        create.post = ajaxPost;\n        create.delete = ajaxDelete;\n        create.put = ajaxPut;\n        create.getJSON = ajaxGetJSON;\n        return create;\n    })();\n    return AjaxObservable;\n}(Observable_1.Observable));\nexports.AjaxObservable = AjaxObservable;\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar AjaxSubscriber = (function (_super) {\n    __extends(AjaxSubscriber, _super);\n    function AjaxSubscriber(destination, request) {\n        _super.call(this, destination);\n        this.request = request;\n        this.done = false;\n        var headers = request.headers = request.headers || {};\n        // force CORS if requested\n        if (!request.crossDomain && !headers['X-Requested-With']) {\n            headers['X-Requested-With'] = 'XMLHttpRequest';\n        }\n        // ensure content type is set\n        if (!('Content-Type' in headers) && !(root_1.root.FormData && request.body instanceof root_1.root.FormData) && typeof request.body !== 'undefined') {\n            headers['Content-Type'] = 'application/x-www-form-urlencoded; charset=UTF-8';\n        }\n        // properly serialize body\n        request.body = this.serializeBody(request.body, request.headers['Content-Type']);\n        this.send();\n    }\n    AjaxSubscriber.prototype.next = function (e) {\n        this.done = true;\n        var _a = this, xhr = _a.xhr, request = _a.request, destination = _a.destination;\n        var response = new AjaxResponse(e, xhr, request);\n        destination.next(response);\n    };\n    AjaxSubscriber.prototype.send = function () {\n        var _a = this, request = _a.request, _b = _a.request, user = _b.user, method = _b.method, url = _b.url, async = _b.async, password = _b.password, headers = _b.headers, body = _b.body;\n        var createXHR = request.createXHR;\n        var xhr = tryCatch_1.tryCatch(createXHR).call(request);\n        if (xhr === errorObject_1.errorObject) {\n            this.error(errorObject_1.errorObject.e);\n        }\n        else {\n            this.xhr = xhr;\n            // open XHR first\n            var result = void 0;\n            if (user) {\n                result = tryCatch_1.tryCatch(xhr.open).call(xhr, method, url, async, user, password);\n            }\n            else {\n                result = tryCatch_1.tryCatch(xhr.open).call(xhr, method, url, async);\n            }\n            if (result === errorObject_1.errorObject) {\n                this.error(errorObject_1.errorObject.e);\n                return null;\n            }\n            // timeout and responseType can be set once the XHR is open\n            xhr.timeout = request.timeout;\n            xhr.responseType = request.responseType;\n            // set headers\n            this.setHeaders(xhr, headers);\n            // now set up the events\n            this.setupEvents(xhr, request);\n            // finally send the request\n            if (body) {\n                xhr.send(body);\n            }\n            else {\n                xhr.send();\n            }\n        }\n        return xhr;\n    };\n    AjaxSubscriber.prototype.serializeBody = function (body, contentType) {\n        if (!body || typeof body === 'string') {\n            return body;\n        }\n        else if (root_1.root.FormData && body instanceof root_1.root.FormData) {\n            return body;\n        }\n        if (contentType) {\n            var splitIndex = contentType.indexOf(';');\n            if (splitIndex !== -1) {\n                contentType = contentType.substring(0, splitIndex);\n            }\n        }\n        switch (contentType) {\n            case 'application/x-www-form-urlencoded':\n                return Object.keys(body).map(function (key) { return (encodeURI(key) + \"=\" + encodeURI(body[key])); }).join('&');\n            case 'application/json':\n                return JSON.stringify(body);\n            default:\n                return body;\n        }\n    };\n    AjaxSubscriber.prototype.setHeaders = function (xhr, headers) {\n        for (var key in headers) {\n            if (headers.hasOwnProperty(key)) {\n                xhr.setRequestHeader(key, headers[key]);\n            }\n        }\n    };\n    AjaxSubscriber.prototype.setupEvents = function (xhr, request) {\n        var progressSubscriber = request.progressSubscriber;\n        xhr.ontimeout = function xhrTimeout(e) {\n            var _a = xhrTimeout, subscriber = _a.subscriber, progressSubscriber = _a.progressSubscriber, request = _a.request;\n            if (progressSubscriber) {\n                progressSubscriber.error(e);\n            }\n            subscriber.error(new AjaxTimeoutError(this, request)); //TODO: Make betterer.\n        };\n        xhr.ontimeout.request = request;\n        xhr.ontimeout.subscriber = this;\n        xhr.ontimeout.progressSubscriber = progressSubscriber;\n        if (xhr.upload && 'withCredentials' in xhr && root_1.root.XDomainRequest) {\n            if (progressSubscriber) {\n                xhr.onprogress = function xhrProgress(e) {\n                    var progressSubscriber = xhrProgress.progressSubscriber;\n                    progressSubscriber.next(e);\n                };\n                xhr.onprogress.progressSubscriber = progressSubscriber;\n            }\n            xhr.onerror = function xhrError(e) {\n                var _a = xhrError, progressSubscriber = _a.progressSubscriber, subscriber = _a.subscriber, request = _a.request;\n                if (progressSubscriber) {\n                    progressSubscriber.error(e);\n                }\n                subscriber.error(new AjaxError('ajax error', this, request));\n            };\n            xhr.onerror.request = request;\n            xhr.onerror.subscriber = this;\n            xhr.onerror.progressSubscriber = progressSubscriber;\n        }\n        xhr.onreadystatechange = function xhrReadyStateChange(e) {\n            var _a = xhrReadyStateChange, subscriber = _a.subscriber, progressSubscriber = _a.progressSubscriber, request = _a.request;\n            if (this.readyState === 4) {\n                // normalize IE9 bug (http://bugs.jquery.com/ticket/1450)\n                var status_1 = this.status === 1223 ? 204 : this.status;\n                var response = (this.responseType === 'text' ? (this.response || this.responseText) : this.response);\n                // fix status code when it is 0 (0 status is undocumented).\n                // Occurs when accessing file resources or on Android 4.1 stock browser\n                // while retrieving files from application cache.\n                if (status_1 === 0) {\n                    status_1 = response ? 200 : 0;\n                }\n                if (200 <= status_1 && status_1 < 300) {\n                    if (progressSubscriber) {\n                        progressSubscriber.complete();\n                    }\n                    subscriber.next(e);\n                    subscriber.complete();\n                }\n                else {\n                    if (progressSubscriber) {\n                        progressSubscriber.error(e);\n                    }\n                    subscriber.error(new AjaxError('ajax error ' + status_1, this, request));\n                }\n            }\n        };\n        xhr.onreadystatechange.subscriber = this;\n        xhr.onreadystatechange.progressSubscriber = progressSubscriber;\n        xhr.onreadystatechange.request = request;\n    };\n    AjaxSubscriber.prototype.unsubscribe = function () {\n        var _a = this, done = _a.done, xhr = _a.xhr;\n        if (!done && xhr && xhr.readyState !== 4) {\n            xhr.abort();\n        }\n        _super.prototype.unsubscribe.call(this);\n    };\n    return AjaxSubscriber;\n}(Subscriber_1.Subscriber));\nexports.AjaxSubscriber = AjaxSubscriber;\n/**\n * A normalized AJAX response.\n *\n * @see {@link ajax}\n *\n * @class AjaxResponse\n */\nvar AjaxResponse = (function () {\n    function AjaxResponse(originalEvent, xhr, request) {\n        this.originalEvent = originalEvent;\n        this.xhr = xhr;\n        this.request = request;\n        this.status = xhr.status;\n        this.responseType = xhr.responseType || request.responseType;\n        switch (this.responseType) {\n            case 'json':\n                if ('response' in xhr) {\n                    //IE does not support json as responseType, parse it internally\n                    this.response = xhr.responseType ? xhr.response : JSON.parse(xhr.response || xhr.responseText || 'null');\n                }\n                else {\n                    this.response = JSON.parse(xhr.responseText || 'null');\n                }\n                break;\n            case 'xml':\n                this.response = xhr.responseXML;\n                break;\n            case 'text':\n            default:\n                this.response = ('response' in xhr) ? xhr.response : xhr.responseText;\n                break;\n        }\n    }\n    return AjaxResponse;\n}());\nexports.AjaxResponse = AjaxResponse;\n/**\n * A normalized AJAX error.\n *\n * @see {@link ajax}\n *\n * @class AjaxError\n */\nvar AjaxError = (function (_super) {\n    __extends(AjaxError, _super);\n    function AjaxError(message, xhr, request) {\n        _super.call(this, message);\n        this.message = message;\n        this.xhr = xhr;\n        this.request = request;\n        this.status = xhr.status;\n    }\n    return AjaxError;\n}(Error));\nexports.AjaxError = AjaxError;\n/**\n * @see {@link ajax}\n *\n * @class AjaxTimeoutError\n */\nvar AjaxTimeoutError = (function (_super) {\n    __extends(AjaxTimeoutError, _super);\n    function AjaxTimeoutError(xhr, request) {\n        _super.call(this, 'ajax timeout', xhr, request);\n    }\n    return AjaxTimeoutError;\n}(AjaxError));\nexports.AjaxTimeoutError = AjaxTimeoutError;\n//# sourceMappingURL=AjaxObservable.js.map\n\n/***/ },\n/* 702 */\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar OuterSubscriber_1 = __webpack_require__(145);\nvar subscribeToResult_1 = __webpack_require__(146);\n/**\n * Returns an Observable that emits all items emitted by the source Observable that are distinct by comparison from previous items.\n * If a comparator function is provided, then it will be called for each item to test for whether or not that value should be emitted.\n * If a comparator function is not provided, an equality check is used by default.\n * As the internal HashSet of this operator grows larger and larger, care should be taken in the domain of inputs this operator may see.\n * An optional parameter is also provided such that an Observable can be provided to queue the internal HashSet to flush the values it holds.\n * @param {function} [compare] optional comparison function called to test if an item is distinct from previous items in the source.\n * @param {Observable} [flushes] optional Observable for flushing the internal HashSet of the operator.\n * @return {Observable} an Observable that emits items from the source Observable with distinct values.\n * @method distinct\n * @owner Observable\n */\nfunction distinct(compare, flushes) {\n    return this.lift(new DistinctOperator(compare, flushes));\n}\nexports.distinct = distinct;\nvar DistinctOperator = (function () {\n    function DistinctOperator(compare, flushes) {\n        this.compare = compare;\n        this.flushes = flushes;\n    }\n    DistinctOperator.prototype.call = function (subscriber, source) {\n        return source._subscribe(new DistinctSubscriber(subscriber, this.compare, this.flushes));\n    };\n    return DistinctOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar DistinctSubscriber = (function (_super) {\n    __extends(DistinctSubscriber, _super);\n    function DistinctSubscriber(destination, compare, flushes) {\n        _super.call(this, destination);\n        this.values = [];\n        if (typeof compare === 'function') {\n            this.compare = compare;\n        }\n        if (flushes) {\n            this.add(subscribeToResult_1.subscribeToResult(this, flushes));\n        }\n    }\n    DistinctSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {\n        this.values.length = 0;\n    };\n    DistinctSubscriber.prototype.notifyError = function (error, innerSub) {\n        this._error(error);\n    };\n    DistinctSubscriber.prototype._next = function (value) {\n        var found = false;\n        var values = this.values;\n        var len = values.length;\n        try {\n            for (var i = 0; i < len; i++) {\n                if (this.compare(values[i], value)) {\n                    found = true;\n                    return;\n                }\n            }\n        }\n        catch (err) {\n            this.destination.error(err);\n            return;\n        }\n        this.values.push(value);\n        this.destination.next(value);\n    };\n    DistinctSubscriber.prototype.compare = function (x, y) {\n        return x === y;\n    };\n    return DistinctSubscriber;\n}(OuterSubscriber_1.OuterSubscriber));\nexports.DistinctSubscriber = DistinctSubscriber;\n//# sourceMappingURL=distinct.js.map\n\n/***/ },\n/* 703 */\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Subscriber_1 = __webpack_require__(26);\nvar tryCatch_1 = __webpack_require__(380);\nvar errorObject_1 = __webpack_require__(231);\n/**\n * Returns an Observable that emits all items emitted by the source Observable that are distinct by comparison from the previous item.\n * If a comparator function is provided, then it will be called for each item to test for whether or not that value should be emitted.\n * If a comparator function is not provided, an equality check is used by default.\n * @param {function} [compare] optional comparison function called to test if an item is distinct from the previous item in the source.\n * @return {Observable} an Observable that emits items from the source Observable with distinct values.\n * @method distinctUntilChanged\n * @owner Observable\n */\nfunction distinctUntilChanged(compare, keySelector) {\n    return this.lift(new DistinctUntilChangedOperator(compare, keySelector));\n}\nexports.distinctUntilChanged = distinctUntilChanged;\nvar DistinctUntilChangedOperator = (function () {\n    function DistinctUntilChangedOperator(compare, keySelector) {\n        this.compare = compare;\n        this.keySelector = keySelector;\n    }\n    DistinctUntilChangedOperator.prototype.call = function (subscriber, source) {\n        return source._subscribe(new DistinctUntilChangedSubscriber(subscriber, this.compare, this.keySelector));\n    };\n    return DistinctUntilChangedOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar DistinctUntilChangedSubscriber = (function (_super) {\n    __extends(DistinctUntilChangedSubscriber, _super);\n    function DistinctUntilChangedSubscriber(destination, compare, keySelector) {\n        _super.call(this, destination);\n        this.keySelector = keySelector;\n        this.hasKey = false;\n        if (typeof compare === 'function') {\n            this.compare = compare;\n        }\n    }\n    DistinctUntilChangedSubscriber.prototype.compare = function (x, y) {\n        return x === y;\n    };\n    DistinctUntilChangedSubscriber.prototype._next = function (value) {\n        var keySelector = this.keySelector;\n        var key = value;\n        if (keySelector) {\n            key = tryCatch_1.tryCatch(this.keySelector)(value);\n            if (key === errorObject_1.errorObject) {\n                return this.destination.error(errorObject_1.errorObject.e);\n            }\n        }\n        var result = false;\n        if (this.hasKey) {\n            result = tryCatch_1.tryCatch(this.compare)(this.key, key);\n            if (result === errorObject_1.errorObject) {\n                return this.destination.error(errorObject_1.errorObject.e);\n            }\n        }\n        else {\n            this.hasKey = true;\n        }\n        if (Boolean(result) === false) {\n            this.key = key;\n            this.destination.next(value);\n        }\n    };\n    return DistinctUntilChangedSubscriber;\n}(Subscriber_1.Subscriber));\n//# sourceMappingURL=distinctUntilChanged.js.map\n\n/***/ },\n/* 704 */\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Subscriber_1 = __webpack_require__(26);\n/**\n * Emits only the first value emitted by the source Observable that meets some\n * condition.\n *\n * <span class=\"informal\">Finds the first value that passes some test and emits\n * that.</span>\n *\n * <img src=\"./img/find.png\" width=\"100%\">\n *\n * `find` searches for the first item in the source Observable that matches the\n * specified condition embodied by the `predicate`, and returns the first\n * occurrence in the source. Unlike {@link first}, the `predicate` is required\n * in `find`, and does not emit an error if a valid value is not found.\n *\n * @example <caption>Find and emit the first click that happens on a DIV element</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.find(ev => ev.target.tagName === 'DIV');\n * result.subscribe(x => console.log(x));\n *\n * @see {@link filter}\n * @see {@link first}\n * @see {@link findIndex}\n * @see {@link take}\n *\n * @param {function(value: T, index: number, source: Observable<T>): boolean} predicate\n * A function called with each item to test for condition matching.\n * @param {any} [thisArg] An optional argument to determine the value of `this`\n * in the `predicate` function.\n * @return {Observable<T>} An Observable of the first item that matches the\n * condition.\n * @method find\n * @owner Observable\n */\nfunction find(predicate, thisArg) {\n    if (typeof predicate !== 'function') {\n        throw new TypeError('predicate is not a function');\n    }\n    return this.lift(new FindValueOperator(predicate, this, false, thisArg));\n}\nexports.find = find;\nvar FindValueOperator = (function () {\n    function FindValueOperator(predicate, source, yieldIndex, thisArg) {\n        this.predicate = predicate;\n        this.source = source;\n        this.yieldIndex = yieldIndex;\n        this.thisArg = thisArg;\n    }\n    FindValueOperator.prototype.call = function (observer, source) {\n        return source._subscribe(new FindValueSubscriber(observer, this.predicate, this.source, this.yieldIndex, this.thisArg));\n    };\n    return FindValueOperator;\n}());\nexports.FindValueOperator = FindValueOperator;\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar FindValueSubscriber = (function (_super) {\n    __extends(FindValueSubscriber, _super);\n    function FindValueSubscriber(destination, predicate, source, yieldIndex, thisArg) {\n        _super.call(this, destination);\n        this.predicate = predicate;\n        this.source = source;\n        this.yieldIndex = yieldIndex;\n        this.thisArg = thisArg;\n        this.index = 0;\n    }\n    FindValueSubscriber.prototype.notifyComplete = function (value) {\n        var destination = this.destination;\n        destination.next(value);\n        destination.complete();\n    };\n    FindValueSubscriber.prototype._next = function (value) {\n        var _a = this, predicate = _a.predicate, thisArg = _a.thisArg;\n        var index = this.index++;\n        try {\n            var result = predicate.call(thisArg || this, value, index, this.source);\n            if (result) {\n                this.notifyComplete(this.yieldIndex ? index : value);\n            }\n        }\n        catch (err) {\n            this.destination.error(err);\n        }\n    };\n    FindValueSubscriber.prototype._complete = function () {\n        this.notifyComplete(this.yieldIndex ? -1 : undefined);\n    };\n    return FindValueSubscriber;\n}(Subscriber_1.Subscriber));\nexports.FindValueSubscriber = FindValueSubscriber;\n//# sourceMappingURL=find.js.map\n\n/***/ },\n/* 705 */\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\"use strict\";\nvar ArrayObservable_1 = __webpack_require__(232);\nvar mergeAll_1 = __webpack_require__(102);\nvar isScheduler_1 = __webpack_require__(381);\n/**\n * Creates an output Observable which concurrently emits all values from every\n * given input Observable.\n *\n * <span class=\"informal\">Flattens multiple Observables together by blending\n * their values into one Observable.</span>\n *\n * <img src=\"./img/merge.png\" width=\"100%\">\n *\n * `merge` subscribes to each given input Observable (either the source or an\n * Observable given as argument), and simply forwards (without doing any\n * transformation) all the values from all the input Observables to the output\n * Observable. The output Observable only completes once all input Observables\n * have completed. Any error delivered by an input Observable will be immediately\n * emitted on the output Observable.\n *\n * @example <caption>Merge together two Observables: 1s interval and clicks</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var timer = Rx.Observable.interval(1000);\n * var clicksOrTimer = clicks.merge(timer);\n * clicksOrTimer.subscribe(x => console.log(x));\n *\n * @example <caption>Merge together 3 Observables, but only 2 run concurrently</caption>\n * var timer1 = Rx.Observable.interval(1000).take(10);\n * var timer2 = Rx.Observable.interval(2000).take(6);\n * var timer3 = Rx.Observable.interval(500).take(10);\n * var concurrent = 2; // the argument\n * var merged = timer1.merge(timer2, timer3, concurrent);\n * merged.subscribe(x => console.log(x));\n *\n * @see {@link mergeAll}\n * @see {@link mergeMap}\n * @see {@link mergeMapTo}\n * @see {@link mergeScan}\n *\n * @param {Observable} other An input Observable to merge with the source\n * Observable. More than one input Observables may be given as argument.\n * @param {number} [concurrent=Number.POSITIVE_INFINITY] Maximum number of input\n * Observables being subscribed to concurrently.\n * @param {Scheduler} [scheduler=null] The Scheduler to use for managing\n * concurrency of input Observables.\n * @return {Observable} an Observable that emits items that are the result of\n * every input Observable.\n * @method merge\n * @owner Observable\n */\nfunction merge() {\n    var observables = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        observables[_i - 0] = arguments[_i];\n    }\n    observables.unshift(this);\n    return mergeStatic.apply(this, observables);\n}\nexports.merge = merge;\n/* tslint:enable:max-line-length */\n/**\n * Creates an output Observable which concurrently emits all values from every\n * given input Observable.\n *\n * <span class=\"informal\">Flattens multiple Observables together by blending\n * their values into one Observable.</span>\n *\n * <img src=\"./img/merge.png\" width=\"100%\">\n *\n * `merge` subscribes to each given input Observable (as arguments), and simply\n * forwards (without doing any transformation) all the values from all the input\n * Observables to the output Observable. The output Observable only completes\n * once all input Observables have completed. Any error delivered by an input\n * Observable will be immediately emitted on the output Observable.\n *\n * @example <caption>Merge together two Observables: 1s interval and clicks</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var timer = Rx.Observable.interval(1000);\n * var clicksOrTimer = Rx.Observable.merge(clicks, timer);\n * clicksOrTimer.subscribe(x => console.log(x));\n *\n * @example <caption>Merge together 3 Observables, but only 2 run concurrently</caption>\n * var timer1 = Rx.Observable.interval(1000).take(10);\n * var timer2 = Rx.Observable.interval(2000).take(6);\n * var timer3 = Rx.Observable.interval(500).take(10);\n * var concurrent = 2; // the argument\n * var merged = Rx.Observable.merge(timer1, timer2, timer3, concurrent);\n * merged.subscribe(x => console.log(x));\n *\n * @see {@link mergeAll}\n * @see {@link mergeMap}\n * @see {@link mergeMapTo}\n * @see {@link mergeScan}\n *\n * @param {Observable} input1 An input Observable to merge with others.\n * @param {Observable} input2 An input Observable to merge with others.\n * @param {number} [concurrent=Number.POSITIVE_INFINITY] Maximum number of input\n * Observables being subscribed to concurrently.\n * @param {Scheduler} [scheduler=null] The Scheduler to use for managing\n * concurrency of input Observables.\n * @return {Observable} an Observable that emits items that are the result of\n * every input Observable.\n * @static true\n * @name merge\n * @owner Observable\n */\nfunction mergeStatic() {\n    var observables = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        observables[_i - 0] = arguments[_i];\n    }\n    var concurrent = Number.POSITIVE_INFINITY;\n    var scheduler = null;\n    var last = observables[observables.length - 1];\n    if (isScheduler_1.isScheduler(last)) {\n        scheduler = observables.pop();\n        if (observables.length > 1 && typeof observables[observables.length - 1] === 'number') {\n            concurrent = observables.pop();\n        }\n    }\n    else if (typeof last === 'number') {\n        concurrent = observables.pop();\n    }\n    if (observables.length === 1) {\n        return observables[0];\n    }\n    return new ArrayObservable_1.ArrayObservable(observables, scheduler).lift(new mergeAll_1.MergeAllOperator(concurrent));\n}\nexports.mergeStatic = mergeStatic;\n//# sourceMappingURL=merge.js.map\n\n/***/ },\n/* 706 */\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar OuterSubscriber_1 = __webpack_require__(145);\nvar subscribeToResult_1 = __webpack_require__(146);\n/**\n * Projects each source value to the same Observable which is merged multiple\n * times in the output Observable.\n *\n * <span class=\"informal\">It's like {@link mergeMap}, but maps each value always\n * to the same inner Observable.</span>\n *\n * <img src=\"./img/mergeMapTo.png\" width=\"100%\">\n *\n * Maps each source value to the given Observable `innerObservable` regardless\n * of the source value, and then merges those resulting Observables into one\n * single Observable, which is the output Observable.\n *\n * @example <caption>For each click event, start an interval Observable ticking every 1 second</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.mergeMapTo(Rx.Observable.interval(1000));\n * result.subscribe(x => console.log(x));\n *\n * @see {@link concatMapTo}\n * @see {@link merge}\n * @see {@link mergeAll}\n * @see {@link mergeMap}\n * @see {@link mergeScan}\n * @see {@link switchMapTo}\n *\n * @param {Observable} innerObservable An Observable to replace each value from\n * the source Observable.\n * @param {function(outerValue: T, innerValue: I, outerIndex: number, innerIndex: number): any} [resultSelector]\n * A function to produce the value on the output Observable based on the values\n * and the indices of the source (outer) emission and the inner Observable\n * emission. The arguments passed to this function are:\n * - `outerValue`: the value that came from the source\n * - `innerValue`: the value that came from the projected Observable\n * - `outerIndex`: the \"index\" of the value that came from the source\n * - `innerIndex`: the \"index\" of the value from the projected Observable\n * @param {number} [concurrent=Number.POSITIVE_INFINITY] Maximum number of input\n * Observables being subscribed to concurrently.\n * @return {Observable} An Observable that emits items from the given\n * `innerObservable` (and optionally transformed through `resultSelector`) every\n * time a value is emitted on the source Observable.\n * @method mergeMapTo\n * @owner Observable\n */\nfunction mergeMapTo(innerObservable, resultSelector, concurrent) {\n    if (concurrent === void 0) { concurrent = Number.POSITIVE_INFINITY; }\n    if (typeof resultSelector === 'number') {\n        concurrent = resultSelector;\n        resultSelector = null;\n    }\n    return this.lift(new MergeMapToOperator(innerObservable, resultSelector, concurrent));\n}\nexports.mergeMapTo = mergeMapTo;\n// TODO: Figure out correct signature here: an Operator<Observable<T>, R>\n//       needs to implement call(observer: Subscriber<R>): Subscriber<Observable<T>>\nvar MergeMapToOperator = (function () {\n    function MergeMapToOperator(ish, resultSelector, concurrent) {\n        if (concurrent === void 0) { concurrent = Number.POSITIVE_INFINITY; }\n        this.ish = ish;\n        this.resultSelector = resultSelector;\n        this.concurrent = concurrent;\n    }\n    MergeMapToOperator.prototype.call = function (observer, source) {\n        return source._subscribe(new MergeMapToSubscriber(observer, this.ish, this.resultSelector, this.concurrent));\n    };\n    return MergeMapToOperator;\n}());\nexports.MergeMapToOperator = MergeMapToOperator;\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar MergeMapToSubscriber = (function (_super) {\n    __extends(MergeMapToSubscriber, _super);\n    function MergeMapToSubscriber(destination, ish, resultSelector, concurrent) {\n        if (concurrent === void 0) { concurrent = Number.POSITIVE_INFINITY; }\n        _super.call(this, destination);\n        this.ish = ish;\n        this.resultSelector = resultSelector;\n        this.concurrent = concurrent;\n        this.hasCompleted = false;\n        this.buffer = [];\n        this.active = 0;\n        this.index = 0;\n    }\n    MergeMapToSubscriber.prototype._next = function (value) {\n        if (this.active < this.concurrent) {\n            var resultSelector = this.resultSelector;\n            var index = this.index++;\n            var ish = this.ish;\n            var destination = this.destination;\n            this.active++;\n            this._innerSub(ish, destination, resultSelector, value, index);\n        }\n        else {\n            this.buffer.push(value);\n        }\n    };\n    MergeMapToSubscriber.prototype._innerSub = function (ish, destination, resultSelector, value, index) {\n        this.add(subscribeToResult_1.subscribeToResult(this, ish, value, index));\n    };\n    MergeMapToSubscriber.prototype._complete = function () {\n        this.hasCompleted = true;\n        if (this.active === 0 && this.buffer.length === 0) {\n            this.destination.complete();\n        }\n    };\n    MergeMapToSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {\n        var _a = this, resultSelector = _a.resultSelector, destination = _a.destination;\n        if (resultSelector) {\n            this.trySelectResult(outerValue, innerValue, outerIndex, innerIndex);\n        }\n        else {\n            destination.next(innerValue);\n        }\n    };\n    MergeMapToSubscriber.prototype.trySelectResult = function (outerValue, innerValue, outerIndex, innerIndex) {\n        var _a = this, resultSelector = _a.resultSelector, destination = _a.destination;\n        var result;\n        try {\n            result = resultSelector(outerValue, innerValue, outerIndex, innerIndex);\n        }\n        catch (err) {\n            destination.error(err);\n            return;\n        }\n        destination.next(result);\n    };\n    MergeMapToSubscriber.prototype.notifyError = function (err) {\n        this.destination.error(err);\n    };\n    MergeMapToSubscriber.prototype.notifyComplete = function (innerSub) {\n        var buffer = this.buffer;\n        this.remove(innerSub);\n        this.active--;\n        if (buffer.length > 0) {\n            this._next(buffer.shift());\n        }\n        else if (this.active === 0 && this.hasCompleted) {\n            this.destination.complete();\n        }\n    };\n    return MergeMapToSubscriber;\n}(OuterSubscriber_1.OuterSubscriber));\nexports.MergeMapToSubscriber = MergeMapToSubscriber;\n//# sourceMappingURL=mergeMapTo.js.map\n\n/***/ },\n/* 707 */\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar FromObservable_1 = __webpack_require__(389);\nvar isArray_1 = __webpack_require__(148);\nvar OuterSubscriber_1 = __webpack_require__(145);\nvar subscribeToResult_1 = __webpack_require__(146);\nfunction onErrorResumeNext() {\n    var nextSources = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        nextSources[_i - 0] = arguments[_i];\n    }\n    if (nextSources.length === 1 && isArray_1.isArray(nextSources[0])) {\n        nextSources = nextSources[0];\n    }\n    return this.lift(new OnErrorResumeNextOperator(nextSources));\n}\nexports.onErrorResumeNext = onErrorResumeNext;\n/* tslint:enable:max-line-length */\nfunction onErrorResumeNextStatic() {\n    var nextSources = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        nextSources[_i - 0] = arguments[_i];\n    }\n    var source = null;\n    if (nextSources.length === 1 && isArray_1.isArray(nextSources[0])) {\n        nextSources = nextSources[0];\n    }\n    source = nextSources.shift();\n    return new FromObservable_1.FromObservable(source, null).lift(new OnErrorResumeNextOperator(nextSources));\n}\nexports.onErrorResumeNextStatic = onErrorResumeNextStatic;\nvar OnErrorResumeNextOperator = (function () {\n    function OnErrorResumeNextOperator(nextSources) {\n        this.nextSources = nextSources;\n    }\n    OnErrorResumeNextOperator.prototype.call = function (subscriber, source) {\n        return source._subscribe(new OnErrorResumeNextSubscriber(subscriber, this.nextSources));\n    };\n    return OnErrorResumeNextOperator;\n}());\nvar OnErrorResumeNextSubscriber = (function (_super) {\n    __extends(OnErrorResumeNextSubscriber, _super);\n    function OnErrorResumeNextSubscriber(destination, nextSources) {\n        _super.call(this, destination);\n        this.destination = destination;\n        this.nextSources = nextSources;\n    }\n    OnErrorResumeNextSubscriber.prototype.notifyError = function (error, innerSub) {\n        this.subscribeToNextSource();\n    };\n    OnErrorResumeNextSubscriber.prototype.notifyComplete = function (innerSub) {\n        this.subscribeToNextSource();\n    };\n    OnErrorResumeNextSubscriber.prototype._error = function (err) {\n        this.subscribeToNextSource();\n    };\n    OnErrorResumeNextSubscriber.prototype._complete = function () {\n        this.subscribeToNextSource();\n    };\n    OnErrorResumeNextSubscriber.prototype.subscribeToNextSource = function () {\n        var next = this.nextSources.shift();\n        if (next) {\n            this.add(subscribeToResult_1.subscribeToResult(this, next));\n        }\n        else {\n            this.destination.complete();\n        }\n    };\n    return OnErrorResumeNextSubscriber;\n}(OuterSubscriber_1.OuterSubscriber));\n//# sourceMappingURL=onErrorResumeNext.js.map\n\n/***/ },\n/* 708 */\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar isArray_1 = __webpack_require__(148);\nvar ArrayObservable_1 = __webpack_require__(232);\nvar OuterSubscriber_1 = __webpack_require__(145);\nvar subscribeToResult_1 = __webpack_require__(146);\n/**\n * Returns an Observable that mirrors the first source Observable to emit an item\n * from the combination of this Observable and supplied Observables\n * @param {...Observables} ...observables sources used to race for which Observable emits first.\n * @return {Observable} an Observable that mirrors the output of the first Observable to emit an item.\n * @method race\n * @owner Observable\n */\nfunction race() {\n    var observables = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        observables[_i - 0] = arguments[_i];\n    }\n    // if the only argument is an array, it was most likely called with\n    // `pair([obs1, obs2, ...])`\n    if (observables.length === 1 && isArray_1.isArray(observables[0])) {\n        observables = observables[0];\n    }\n    observables.unshift(this);\n    return raceStatic.apply(this, observables);\n}\nexports.race = race;\nfunction raceStatic() {\n    var observables = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        observables[_i - 0] = arguments[_i];\n    }\n    // if the only argument is an array, it was most likely called with\n    // `pair([obs1, obs2, ...])`\n    if (observables.length === 1) {\n        if (isArray_1.isArray(observables[0])) {\n            observables = observables[0];\n        }\n        else {\n            return observables[0];\n        }\n    }\n    return new ArrayObservable_1.ArrayObservable(observables).lift(new RaceOperator());\n}\nexports.raceStatic = raceStatic;\nvar RaceOperator = (function () {\n    function RaceOperator() {\n    }\n    RaceOperator.prototype.call = function (subscriber, source) {\n        return source._subscribe(new RaceSubscriber(subscriber));\n    };\n    return RaceOperator;\n}());\nexports.RaceOperator = RaceOperator;\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar RaceSubscriber = (function (_super) {\n    __extends(RaceSubscriber, _super);\n    function RaceSubscriber(destination) {\n        _super.call(this, destination);\n        this.hasFirst = false;\n        this.observables = [];\n        this.subscriptions = [];\n    }\n    RaceSubscriber.prototype._next = function (observable) {\n        this.observables.push(observable);\n    };\n    RaceSubscriber.prototype._complete = function () {\n        var observables = this.observables;\n        var len = observables.length;\n        if (len === 0) {\n            this.destination.complete();\n        }\n        else {\n            for (var i = 0; i < len; i++) {\n                var observable = observables[i];\n                var subscription = subscribeToResult_1.subscribeToResult(this, observable, observable, i);\n                if (this.subscriptions) {\n                    this.subscriptions.push(subscription);\n                    this.add(subscription);\n                }\n            }\n            this.observables = null;\n        }\n    };\n    RaceSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {\n        if (!this.hasFirst) {\n            this.hasFirst = true;\n            for (var i = 0; i < this.subscriptions.length; i++) {\n                if (i !== outerIndex) {\n                    var subscription = this.subscriptions[i];\n                    subscription.unsubscribe();\n                    this.remove(subscription);\n                }\n            }\n            this.subscriptions = null;\n        }\n        this.destination.next(innerValue);\n    };\n    return RaceSubscriber;\n}(OuterSubscriber_1.OuterSubscriber));\nexports.RaceSubscriber = RaceSubscriber;\n//# sourceMappingURL=race.js.map\n\n/***/ },\n/* 709 */\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Subscriber_1 = __webpack_require__(26);\nvar async_1 = __webpack_require__(686);\n/**\n * @param scheduler\n * @return {Observable<TimeInterval<any>>|WebSocketSubject<T>|Observable<T>}\n * @method timeInterval\n * @owner Observable\n */\nfunction timeInterval(scheduler) {\n    if (scheduler === void 0) { scheduler = async_1.async; }\n    return this.lift(new TimeIntervalOperator(scheduler));\n}\nexports.timeInterval = timeInterval;\nvar TimeInterval = (function () {\n    function TimeInterval(value, interval) {\n        this.value = value;\n        this.interval = interval;\n    }\n    return TimeInterval;\n}());\nexports.TimeInterval = TimeInterval;\n;\nvar TimeIntervalOperator = (function () {\n    function TimeIntervalOperator(scheduler) {\n        this.scheduler = scheduler;\n    }\n    TimeIntervalOperator.prototype.call = function (observer, source) {\n        return source._subscribe(new TimeIntervalSubscriber(observer, this.scheduler));\n    };\n    return TimeIntervalOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar TimeIntervalSubscriber = (function (_super) {\n    __extends(TimeIntervalSubscriber, _super);\n    function TimeIntervalSubscriber(destination, scheduler) {\n        _super.call(this, destination);\n        this.scheduler = scheduler;\n        this.lastTime = 0;\n        this.lastTime = scheduler.now();\n    }\n    TimeIntervalSubscriber.prototype._next = function (value) {\n        var now = this.scheduler.now();\n        var span = now - this.lastTime;\n        this.lastTime = now;\n        this.destination.next(new TimeInterval(value, span));\n    };\n    return TimeIntervalSubscriber;\n}(Subscriber_1.Subscriber));\n//# sourceMappingURL=timeInterval.js.map\n\n/***/ },\n/* 710 */\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Subscriber_1 = __webpack_require__(26);\nvar async_1 = __webpack_require__(686);\n/**\n * @param scheduler\n * @return {Observable<Timestamp<any>>|WebSocketSubject<T>|Observable<T>}\n * @method timestamp\n * @owner Observable\n */\nfunction timestamp(scheduler) {\n    if (scheduler === void 0) { scheduler = async_1.async; }\n    return this.lift(new TimestampOperator(scheduler));\n}\nexports.timestamp = timestamp;\nvar Timestamp = (function () {\n    function Timestamp(value, timestamp) {\n        this.value = value;\n        this.timestamp = timestamp;\n    }\n    return Timestamp;\n}());\nexports.Timestamp = Timestamp;\n;\nvar TimestampOperator = (function () {\n    function TimestampOperator(scheduler) {\n        this.scheduler = scheduler;\n    }\n    TimestampOperator.prototype.call = function (observer, source) {\n        return source._subscribe(new TimestampSubscriber(observer, this.scheduler));\n    };\n    return TimestampOperator;\n}());\nvar TimestampSubscriber = (function (_super) {\n    __extends(TimestampSubscriber, _super);\n    function TimestampSubscriber(destination, scheduler) {\n        _super.call(this, destination);\n        this.scheduler = scheduler;\n    }\n    TimestampSubscriber.prototype._next = function (value) {\n        var now = this.scheduler.now();\n        this.destination.next(new Timestamp(value, now));\n    };\n    return TimestampSubscriber;\n}(Subscriber_1.Subscriber));\n//# sourceMappingURL=timestamp.js.map\n\n/***/ },\n/* 711 */\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar AsyncAction_1 = __webpack_require__(688);\nvar AsyncScheduler_1 = __webpack_require__(689);\nvar VirtualTimeScheduler = (function (_super) {\n    __extends(VirtualTimeScheduler, _super);\n    function VirtualTimeScheduler(SchedulerAction, maxFrames) {\n        var _this = this;\n        if (SchedulerAction === void 0) { SchedulerAction = VirtualAction; }\n        if (maxFrames === void 0) { maxFrames = Number.POSITIVE_INFINITY; }\n        _super.call(this, SchedulerAction, function () { return _this.frame; });\n        this.maxFrames = maxFrames;\n        this.frame = 0;\n        this.index = -1;\n    }\n    /**\n     * Prompt the Scheduler to execute all of its queued actions, therefore\n     * clearing its queue.\n     * @return {void}\n     */\n    VirtualTimeScheduler.prototype.flush = function () {\n        var _a = this, actions = _a.actions, maxFrames = _a.maxFrames;\n        var error, action;\n        while ((action = actions.shift()) && (this.frame = action.delay) <= maxFrames) {\n            if (error = action.execute(action.state, action.delay)) {\n                break;\n            }\n        }\n        if (error) {\n            while (action = actions.shift()) {\n                action.unsubscribe();\n            }\n            throw error;\n        }\n    };\n    VirtualTimeScheduler.frameTimeFactor = 10;\n    return VirtualTimeScheduler;\n}(AsyncScheduler_1.AsyncScheduler));\nexports.VirtualTimeScheduler = VirtualTimeScheduler;\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar VirtualAction = (function (_super) {\n    __extends(VirtualAction, _super);\n    function VirtualAction(scheduler, work, index) {\n        if (index === void 0) { index = scheduler.index += 1; }\n        _super.call(this, scheduler, work);\n        this.scheduler = scheduler;\n        this.work = work;\n        this.index = index;\n        this.index = scheduler.index = index;\n    }\n    VirtualAction.prototype.schedule = function (state, delay) {\n        if (delay === void 0) { delay = 0; }\n        return !this.id ?\n            _super.prototype.schedule.call(this, state, delay) : this.add(new VirtualAction(this.scheduler, this.work)).schedule(state, delay);\n    };\n    VirtualAction.prototype.requestAsyncId = function (scheduler, id, delay) {\n        if (delay === void 0) { delay = 0; }\n        this.delay = scheduler.frame + delay;\n        var actions = scheduler.actions;\n        actions.push(this);\n        actions.sort(VirtualAction.sortActions);\n        return true;\n    };\n    VirtualAction.prototype.recycleAsyncId = function (scheduler, id, delay) {\n        if (delay === void 0) { delay = 0; }\n        return undefined;\n    };\n    VirtualAction.sortActions = function (a, b) {\n        if (a.delay === b.delay) {\n            if (a.index === b.index) {\n                return 0;\n            }\n            else if (a.index > b.index) {\n                return 1;\n            }\n            else {\n                return -1;\n            }\n        }\n        else if (a.delay > b.delay) {\n            return 1;\n        }\n        else {\n            return -1;\n        }\n    };\n    return VirtualAction;\n}(AsyncAction_1.AsyncAction));\nexports.VirtualAction = VirtualAction;\n//# sourceMappingURL=VirtualTimeScheduler.js.map\n\n/***/ },\n/* 712 */\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\"use strict\";\nvar AsapAction_1 = __webpack_require__(967);\nvar AsapScheduler_1 = __webpack_require__(968);\nexports.asap = new AsapScheduler_1.AsapScheduler(AsapAction_1.AsapAction);\n//# sourceMappingURL=asap.js.map\n\n/***/ },\n/* 713 */\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\"use strict\";\nvar QueueAction_1 = __webpack_require__(969);\nvar QueueScheduler_1 = __webpack_require__(970);\nexports.queue = new QueueScheduler_1.QueueScheduler(QueueAction_1.QueueAction);\n//# sourceMappingURL=queue.js.map\n\n/***/ },\n/* 714 */\n/***/ function(module, exports) {\n\n\"use strict\";\n\"use strict\";\nvar SubscriptionLog = (function () {\n    function SubscriptionLog(subscribedFrame, unsubscribedFrame) {\n        if (unsubscribedFrame === void 0) { unsubscribedFrame = Number.POSITIVE_INFINITY; }\n        this.subscribedFrame = subscribedFrame;\n        this.unsubscribedFrame = unsubscribedFrame;\n    }\n    return SubscriptionLog;\n}());\nexports.SubscriptionLog = SubscriptionLog;\n//# sourceMappingURL=SubscriptionLog.js.map\n\n/***/ },\n/* 715 */\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\"use strict\";\nvar SubscriptionLog_1 = __webpack_require__(714);\nvar SubscriptionLoggable = (function () {\n    function SubscriptionLoggable() {\n        this.subscriptions = [];\n    }\n    SubscriptionLoggable.prototype.logSubscribedFrame = function () {\n        this.subscriptions.push(new SubscriptionLog_1.SubscriptionLog(this.scheduler.now()));\n        return this.subscriptions.length - 1;\n    };\n    SubscriptionLoggable.prototype.logUnsubscribedFrame = function (index) {\n        var subscriptionLogs = this.subscriptions;\n        var oldSubscriptionLog = subscriptionLogs[index];\n        subscriptionLogs[index] = new SubscriptionLog_1.SubscriptionLog(oldSubscriptionLog.subscribedFrame, this.scheduler.now());\n    };\n    return SubscriptionLoggable;\n}());\nexports.SubscriptionLoggable = SubscriptionLoggable;\n//# sourceMappingURL=SubscriptionLoggable.js.map\n\n/***/ },\n/* 716 */\n/***/ function(module, exports) {\n\n\"use strict\";\n\"use strict\";\nfunction applyMixins(derivedCtor, baseCtors) {\n    for (var i = 0, len = baseCtors.length; i < len; i++) {\n        var baseCtor = baseCtors[i];\n        var propertyKeys = Object.getOwnPropertyNames(baseCtor.prototype);\n        for (var j = 0, len2 = propertyKeys.length; j < len2; j++) {\n            var name_1 = propertyKeys[j];\n            derivedCtor.prototype[name_1] = baseCtor.prototype[name_1];\n        }\n    }\n}\nexports.applyMixins = applyMixins;\n//# sourceMappingURL=applyMixins.js.map\n\n/***/ },\n/* 717 */\n/***/ function(module, exports) {\n\n\"use strict\";\n\"use strict\";\n/* tslint:disable:no-empty */\nfunction noop() { }\nexports.noop = noop;\n//# sourceMappingURL=noop.js.map\n\n/***/ },\n/* 718 */,\n/* 719 */\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\"use strict\";\n/* tslint:disable:no-unused-variable */\n// Subject imported before Observable to bypass circular dependency issue since\n// Subject extends Observable and Observable references Subject in it's\n// definition\nvar Subject_1 = __webpack_require__(66);\nexports.Subject = Subject_1.Subject;\n/* tslint:enable:no-unused-variable */\nvar Observable_1 = __webpack_require__(14);\nexports.Observable = Observable_1.Observable;\n// statics\n/* tslint:disable:no-use-before-declare */\n__webpack_require__(721);\n__webpack_require__(722);\n__webpack_require__(723);\n__webpack_require__(724);\n__webpack_require__(725);\n__webpack_require__(728);\n__webpack_require__(729);\n__webpack_require__(730);\n__webpack_require__(731);\n__webpack_require__(732);\n__webpack_require__(733);\n__webpack_require__(734);\n__webpack_require__(735);\n__webpack_require__(736);\n__webpack_require__(737);\n__webpack_require__(742);\n__webpack_require__(738);\n__webpack_require__(739);\n__webpack_require__(740);\n__webpack_require__(741);\n__webpack_require__(743);\n__webpack_require__(746);\n__webpack_require__(744);\n__webpack_require__(745);\n__webpack_require__(747);\n//dom\n__webpack_require__(726);\n__webpack_require__(727);\n//operators\n__webpack_require__(750);\n__webpack_require__(751);\n__webpack_require__(752);\n__webpack_require__(753);\n__webpack_require__(754);\n__webpack_require__(755);\n__webpack_require__(756);\n__webpack_require__(757);\n__webpack_require__(758);\n__webpack_require__(759);\n__webpack_require__(760);\n__webpack_require__(761);\n__webpack_require__(762);\n__webpack_require__(763);\n__webpack_require__(769);\n__webpack_require__(764);\n__webpack_require__(765);\n__webpack_require__(766);\n__webpack_require__(767);\n__webpack_require__(768);\n__webpack_require__(770);\n__webpack_require__(771);\n__webpack_require__(772);\n__webpack_require__(773);\n__webpack_require__(774);\n__webpack_require__(777);\n__webpack_require__(778);\n__webpack_require__(779);\n__webpack_require__(775);\n__webpack_require__(780);\n__webpack_require__(781);\n__webpack_require__(782);\n__webpack_require__(783);\n__webpack_require__(784);\n__webpack_require__(785);\n__webpack_require__(786);\n__webpack_require__(787);\n__webpack_require__(748);\n__webpack_require__(749);\n__webpack_require__(788);\n__webpack_require__(789);\n__webpack_require__(776);\n__webpack_require__(790);\n__webpack_require__(791);\n__webpack_require__(792);\n__webpack_require__(793);\n__webpack_require__(794);\n__webpack_require__(795);\n__webpack_require__(796);\n__webpack_require__(797);\n__webpack_require__(798);\n__webpack_require__(799);\n__webpack_require__(800);\n__webpack_require__(801);\n__webpack_require__(802);\n__webpack_require__(803);\n__webpack_require__(804);\n__webpack_require__(805);\n__webpack_require__(806);\n__webpack_require__(807);\n__webpack_require__(809);\n__webpack_require__(808);\n__webpack_require__(810);\n__webpack_require__(811);\n__webpack_require__(812);\n__webpack_require__(813);\n__webpack_require__(814);\n__webpack_require__(815);\n__webpack_require__(816);\n__webpack_require__(817);\n__webpack_require__(818);\n__webpack_require__(819);\n__webpack_require__(820);\n__webpack_require__(821);\n__webpack_require__(822);\n__webpack_require__(823);\n__webpack_require__(824);\n__webpack_require__(825);\n__webpack_require__(826);\n__webpack_require__(827);\n__webpack_require__(828);\n__webpack_require__(829);\n__webpack_require__(830);\n__webpack_require__(831);\n__webpack_require__(832);\n__webpack_require__(833);\n__webpack_require__(834);\n__webpack_require__(835);\n__webpack_require__(836);\n__webpack_require__(837);\n__webpack_require__(838);\n__webpack_require__(839);\n__webpack_require__(840);\n__webpack_require__(841);\n__webpack_require__(842);\n__webpack_require__(843);\n__webpack_require__(844);\n__webpack_require__(845);\n__webpack_require__(846);\n__webpack_require__(847);\n__webpack_require__(848);\n__webpack_require__(849);\n/* tslint:disable:no-unused-variable */\nvar Subscription_1 = __webpack_require__(147);\nexports.Subscription = Subscription_1.Subscription;\nvar Subscriber_1 = __webpack_require__(26);\nexports.Subscriber = Subscriber_1.Subscriber;\nvar AsyncSubject_1 = __webpack_require__(690);\nexports.AsyncSubject = AsyncSubject_1.AsyncSubject;\nvar ReplaySubject_1 = __webpack_require__(691);\nexports.ReplaySubject = ReplaySubject_1.ReplaySubject;\nvar BehaviorSubject_1 = __webpack_require__(234);\nexports.BehaviorSubject = BehaviorSubject_1.BehaviorSubject;\nvar MulticastObservable_1 = __webpack_require__(700);\nexports.MulticastObservable = MulticastObservable_1.MulticastObservable;\nvar ConnectableObservable_1 = __webpack_require__(694);\nexports.ConnectableObservable = ConnectableObservable_1.ConnectableObservable;\nvar Notification_1 = __webpack_require__(382);\nexports.Notification = Notification_1.Notification;\nvar EmptyError_1 = __webpack_require__(150);\nexports.EmptyError = EmptyError_1.EmptyError;\nvar ArgumentOutOfRangeError_1 = __webpack_require__(692);\nexports.ArgumentOutOfRangeError = ArgumentOutOfRangeError_1.ArgumentOutOfRangeError;\nvar ObjectUnsubscribedError_1 = __webpack_require__(240);\nexports.ObjectUnsubscribedError = ObjectUnsubscribedError_1.ObjectUnsubscribedError;\nvar UnsubscriptionError_1 = __webpack_require__(393);\nexports.UnsubscriptionError = UnsubscriptionError_1.UnsubscriptionError;\nvar timeInterval_1 = __webpack_require__(709);\nexports.TimeInterval = timeInterval_1.TimeInterval;\nvar timestamp_1 = __webpack_require__(710);\nexports.Timestamp = timestamp_1.Timestamp;\nvar TestScheduler_1 = __webpack_require__(974);\nexports.TestScheduler = TestScheduler_1.TestScheduler;\nvar VirtualTimeScheduler_1 = __webpack_require__(711);\nexports.VirtualTimeScheduler = VirtualTimeScheduler_1.VirtualTimeScheduler;\nvar AjaxObservable_1 = __webpack_require__(701);\nexports.AjaxResponse = AjaxObservable_1.AjaxResponse;\nexports.AjaxError = AjaxObservable_1.AjaxError;\nexports.AjaxTimeoutError = AjaxObservable_1.AjaxTimeoutError;\nvar asap_1 = __webpack_require__(712);\nvar async_1 = __webpack_require__(686);\nvar queue_1 = __webpack_require__(713);\nvar animationFrame_1 = __webpack_require__(971);\nvar rxSubscriber_1 = __webpack_require__(154);\nvar iterator_1 = __webpack_require__(149);\nvar observable_1 = __webpack_require__(153);\n/* tslint:enable:no-unused-variable */\n/**\n * @typedef {Object} Rx.Scheduler\n * @property {Scheduler} queue Schedules on a queue in the current event frame\n * (trampoline scheduler). Use this for iteration operations.\n * @property {Scheduler} asap Schedules on the micro task queue, which uses the\n * fastest transport mechanism available, either Node.js' `process.nextTick()`\n * or Web Worker MessageChannel or setTimeout or others. Use this for\n * asynchronous conversions.\n * @property {Scheduler} async Schedules work with `setInterval`. Use this for\n * time-based operations.\n * @property {Scheduler} animationFrame Schedules work with `requestAnimationFrame`.\n * Use this for synchronizing with the platform's painting\n */\nvar Scheduler = {\n    asap: asap_1.asap,\n    queue: queue_1.queue,\n    animationFrame: animationFrame_1.animationFrame,\n    async: async_1.async\n};\nexports.Scheduler = Scheduler;\n/**\n * @typedef {Object} Rx.Symbol\n * @property {Symbol|string} rxSubscriber A symbol to use as a property name to\n * retrieve an \"Rx safe\" Observer from an object. \"Rx safety\" can be defined as\n * an object that has all of the traits of an Rx Subscriber, including the\n * ability to add and remove subscriptions to the subscription chain and\n * guarantees involving event triggering (can't \"next\" after unsubscription,\n * etc).\n * @property {Symbol|string} observable A symbol to use as a property name to\n * retrieve an Observable as defined by the [ECMAScript \"Observable\" spec](https://github.com/zenparsing/es-observable).\n * @property {Symbol|string} iterator The ES6 symbol to use as a property name\n * to retrieve an iterator from an object.\n */\nvar Symbol = {\n    rxSubscriber: rxSubscriber_1.$$rxSubscriber,\n    observable: observable_1.$$observable,\n    iterator: iterator_1.$$iterator\n};\nexports.Symbol = Symbol;\n//# sourceMappingURL=Rx.js.map\n\n/***/ },\n/* 720 */\n/***/ function(module, exports) {\n\n\"use strict\";\n\"use strict\";\n/**\n * An execution context and a data structure to order tasks and schedule their\n * execution. Provides a notion of (potentially virtual) time, through the\n * `now()` getter method.\n *\n * Each unit of work in a Scheduler is called an {@link Action}.\n *\n * ```ts\n * class Scheduler {\n *   now(): number;\n *   schedule(work, delay?, state?): Subscription;\n * }\n * ```\n *\n * @class Scheduler\n */\nvar Scheduler = (function () {\n    function Scheduler(SchedulerAction, now) {\n        if (now === void 0) { now = Scheduler.now; }\n        this.SchedulerAction = SchedulerAction;\n        this.now = now;\n    }\n    /**\n     * Schedules a function, `work`, for execution. May happen at some point in\n     * the future, according to the `delay` parameter, if specified. May be passed\n     * some context object, `state`, which will be passed to the `work` function.\n     *\n     * The given arguments will be processed an stored as an Action object in a\n     * queue of actions.\n     *\n     * @param {function(state: ?T): ?Subscription} work A function representing a\n     * task, or some unit of work to be executed by the Scheduler.\n     * @param {number} [delay] Time to wait before executing the work, where the\n     * time unit is implicit and defined by the Scheduler itself.\n     * @param {T} [state] Some contextual data that the `work` function uses when\n     * called by the Scheduler.\n     * @return {Subscription} A subscription in order to be able to unsubscribe\n     * the scheduled work.\n     */\n    Scheduler.prototype.schedule = function (work, delay, state) {\n        if (delay === void 0) { delay = 0; }\n        return new this.SchedulerAction(this, work).schedule(state, delay);\n    };\n    Scheduler.now = Date.now ? Date.now : function () { return +new Date(); };\n    return Scheduler;\n}());\nexports.Scheduler = Scheduler;\n//# sourceMappingURL=Scheduler.js.map\n\n/***/ },\n/* 721 */\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\"use strict\";\nvar Observable_1 = __webpack_require__(14);\nvar bindCallback_1 = __webpack_require__(866);\nObservable_1.Observable.bindCallback = bindCallback_1.bindCallback;\n//# sourceMappingURL=bindCallback.js.map\n\n/***/ },\n/* 722 */\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\"use strict\";\nvar Observable_1 = __webpack_require__(14);\nvar bindNodeCallback_1 = __webpack_require__(867);\nObservable_1.Observable.bindNodeCallback = bindNodeCallback_1.bindNodeCallback;\n//# sourceMappingURL=bindNodeCallback.js.map\n\n/***/ },\n/* 723 */\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\"use strict\";\nvar Observable_1 = __webpack_require__(14);\nvar combineLatest_1 = __webpack_require__(868);\nObservable_1.Observable.combineLatest = combineLatest_1.combineLatest;\n//# sourceMappingURL=combineLatest.js.map\n\n/***/ },\n/* 724 */\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\"use strict\";\nvar Observable_1 = __webpack_require__(14);\nvar concat_1 = __webpack_require__(869);\nObservable_1.Observable.concat = concat_1.concat;\n//# sourceMappingURL=concat.js.map\n\n/***/ },\n/* 725 */\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\"use strict\";\nvar Observable_1 = __webpack_require__(14);\nvar defer_1 = __webpack_require__(870);\nObservable_1.Observable.defer = defer_1.defer;\n//# sourceMappingURL=defer.js.map\n\n/***/ },\n/* 726 */\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\"use strict\";\nvar Observable_1 = __webpack_require__(14);\nvar ajax_1 = __webpack_require__(872);\nObservable_1.Observable.ajax = ajax_1.ajax;\n//# sourceMappingURL=ajax.js.map\n\n/***/ },\n/* 727 */\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\"use strict\";\nvar Observable_1 = __webpack_require__(14);\nvar webSocket_1 = __webpack_require__(873);\nObservable_1.Observable.webSocket = webSocket_1.webSocket;\n//# sourceMappingURL=webSocket.js.map\n\n/***/ },\n/* 728 */\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\"use strict\";\nvar Observable_1 = __webpack_require__(14);\nvar empty_1 = __webpack_require__(874);\nObservable_1.Observable.empty = empty_1.empty;\n//# sourceMappingURL=empty.js.map\n\n/***/ },\n/* 729 */\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\"use strict\";\nvar Observable_1 = __webpack_require__(14);\nvar forkJoin_1 = __webpack_require__(875);\nObservable_1.Observable.forkJoin = forkJoin_1.forkJoin;\n//# sourceMappingURL=forkJoin.js.map\n\n/***/ },\n/* 730 */\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\"use strict\";\nvar Observable_1 = __webpack_require__(14);\nvar from_1 = __webpack_require__(151);\nObservable_1.Observable.from = from_1.from;\n//# sourceMappingURL=from.js.map\n\n/***/ },\n/* 731 */\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\"use strict\";\nvar Observable_1 = __webpack_require__(14);\nvar fromEvent_1 = __webpack_require__(876);\nObservable_1.Observable.fromEvent = fromEvent_1.fromEvent;\n//# sourceMappingURL=fromEvent.js.map\n\n/***/ },\n/* 732 */\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\"use strict\";\nvar Observable_1 = __webpack_require__(14);\nvar fromEventPattern_1 = __webpack_require__(877);\nObservable_1.Observable.fromEventPattern = fromEventPattern_1.fromEventPattern;\n//# sourceMappingURL=fromEventPattern.js.map\n\n/***/ },\n/* 733 */\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\"use strict\";\nvar Observable_1 = __webpack_require__(14);\nvar fromPromise_1 = __webpack_require__(152);\nObservable_1.Observable.fromPromise = fromPromise_1.fromPromise;\n//# sourceMappingURL=fromPromise.js.map\n\n/***/ },\n/* 734 */\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\"use strict\";\nvar Observable_1 = __webpack_require__(14);\nvar GenerateObservable_1 = __webpack_require__(857);\nObservable_1.Observable.generate = GenerateObservable_1.GenerateObservable.create;\n//# sourceMappingURL=generate.js.map\n\n/***/ },\n/* 735 */\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\"use strict\";\nvar Observable_1 = __webpack_require__(14);\nvar if_1 = __webpack_require__(878);\nObservable_1.Observable.if = if_1._if;\n//# sourceMappingURL=if.js.map\n\n/***/ },\n/* 736 */\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\"use strict\";\nvar Observable_1 = __webpack_require__(14);\nvar interval_1 = __webpack_require__(879);\nObservable_1.Observable.interval = interval_1.interval;\n//# sourceMappingURL=interval.js.map\n\n/***/ },\n/* 737 */\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\"use strict\";\nvar Observable_1 = __webpack_require__(14);\nvar merge_1 = __webpack_require__(880);\nObservable_1.Observable.merge = merge_1.merge;\n//# sourceMappingURL=merge.js.map\n\n/***/ },\n/* 738 */\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\"use strict\";\nvar Observable_1 = __webpack_require__(14);\nvar never_1 = __webpack_require__(881);\nObservable_1.Observable.never = never_1.never;\n//# sourceMappingURL=never.js.map\n\n/***/ },\n/* 739 */\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\"use strict\";\nvar Observable_1 = __webpack_require__(14);\nvar of_1 = __webpack_require__(67);\nObservable_1.Observable.of = of_1.of;\n//# sourceMappingURL=of.js.map\n\n/***/ },\n/* 740 */\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\"use strict\";\nvar Observable_1 = __webpack_require__(14);\nvar onErrorResumeNext_1 = __webpack_require__(707);\nObservable_1.Observable.onErrorResumeNext = onErrorResumeNext_1.onErrorResumeNextStatic;\n//# sourceMappingURL=onErrorResumeNext.js.map\n\n/***/ },\n/* 741 */\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\"use strict\";\nvar Observable_1 = __webpack_require__(14);\nvar pairs_1 = __webpack_require__(882);\nObservable_1.Observable.pairs = pairs_1.pairs;\n//# sourceMappingURL=pairs.js.map\n\n/***/ },\n/* 742 */\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\"use strict\";\nvar Observable_1 = __webpack_require__(14);\nvar race_1 = __webpack_require__(708);\nObservable_1.Observable.race = race_1.raceStatic;\n//# sourceMappingURL=race.js.map\n\n/***/ },\n/* 743 */\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\"use strict\";\nvar Observable_1 = __webpack_require__(14);\nvar range_1 = __webpack_require__(883);\nObservable_1.Observable.range = range_1.range;\n//# sourceMappingURL=range.js.map\n\n/***/ },\n/* 744 */\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\"use strict\";\nvar Observable_1 = __webpack_require__(14);\nvar throw_1 = __webpack_require__(884);\nObservable_1.Observable.throw = throw_1._throw;\n//# sourceMappingURL=throw.js.map\n\n/***/ },\n/* 745 */\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\"use strict\";\nvar Observable_1 = __webpack_require__(14);\nvar timer_1 = __webpack_require__(885);\nObservable_1.Observable.timer = timer_1.timer;\n//# sourceMappingURL=timer.js.map\n\n/***/ },\n/* 746 */\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\"use strict\";\nvar Observable_1 = __webpack_require__(14);\nvar using_1 = __webpack_require__(886);\nObservable_1.Observable.using = using_1.using;\n//# sourceMappingURL=using.js.map\n\n/***/ },\n/* 747 */\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\"use strict\";\nvar Observable_1 = __webpack_require__(14);\nvar zip_1 = __webpack_require__(887);\nObservable_1.Observable.zip = zip_1.zip;\n//# sourceMappingURL=zip.js.map\n\n/***/ },\n/* 748 */\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\"use strict\";\nvar Observable_1 = __webpack_require__(14);\nvar audit_1 = __webpack_require__(888);\nObservable_1.Observable.prototype.audit = audit_1.audit;\n//# sourceMappingURL=audit.js.map\n\n/***/ },\n/* 749 */\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\"use strict\";\nvar Observable_1 = __webpack_require__(14);\nvar auditTime_1 = __webpack_require__(889);\nObservable_1.Observable.prototype.auditTime = auditTime_1.auditTime;\n//# sourceMappingURL=auditTime.js.map\n\n/***/ },\n/* 750 */\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\"use strict\";\nvar Observable_1 = __webpack_require__(14);\nvar buffer_1 = __webpack_require__(890);\nObservable_1.Observable.prototype.buffer = buffer_1.buffer;\n//# sourceMappingURL=buffer.js.map\n\n/***/ },\n/* 751 */\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\"use strict\";\nvar Observable_1 = __webpack_require__(14);\nvar bufferCount_1 = __webpack_require__(891);\nObservable_1.Observable.prototype.bufferCount = bufferCount_1.bufferCount;\n//# sourceMappingURL=bufferCount.js.map\n\n/***/ },\n/* 752 */\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\"use strict\";\nvar Observable_1 = __webpack_require__(14);\nvar bufferTime_1 = __webpack_require__(892);\nObservable_1.Observable.prototype.bufferTime = bufferTime_1.bufferTime;\n//# sourceMappingURL=bufferTime.js.map\n\n/***/ },\n/* 753 */\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\"use strict\";\nvar Observable_1 = __webpack_require__(14);\nvar bufferToggle_1 = __webpack_require__(893);\nObservable_1.Observable.prototype.bufferToggle = bufferToggle_1.bufferToggle;\n//# sourceMappingURL=bufferToggle.js.map\n\n/***/ },\n/* 754 */\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\"use strict\";\nvar Observable_1 = __webpack_require__(14);\nvar bufferWhen_1 = __webpack_require__(894);\nObservable_1.Observable.prototype.bufferWhen = bufferWhen_1.bufferWhen;\n//# sourceMappingURL=bufferWhen.js.map\n\n/***/ },\n/* 755 */\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\"use strict\";\nvar Observable_1 = __webpack_require__(14);\nvar cache_1 = __webpack_require__(895);\nObservable_1.Observable.prototype.cache = cache_1.cache;\n//# sourceMappingURL=cache.js.map\n\n/***/ },\n/* 756 */\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\"use strict\";\nvar Observable_1 = __webpack_require__(14);\nvar catch_1 = __webpack_require__(236);\nObservable_1.Observable.prototype.catch = catch_1._catch;\nObservable_1.Observable.prototype._catch = catch_1._catch;\n//# sourceMappingURL=catch.js.map\n\n/***/ },\n/* 757 */\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\"use strict\";\nvar Observable_1 = __webpack_require__(14);\nvar combineAll_1 = __webpack_require__(896);\nObservable_1.Observable.prototype.combineAll = combineAll_1.combineAll;\n//# sourceMappingURL=combineAll.js.map\n\n/***/ },\n/* 758 */\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\"use strict\";\nvar Observable_1 = __webpack_require__(14);\nvar combineLatest_1 = __webpack_require__(695);\nObservable_1.Observable.prototype.combineLatest = combineLatest_1.combineLatest;\n//# sourceMappingURL=combineLatest.js.map\n\n/***/ },\n/* 759 */\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\"use strict\";\nvar Observable_1 = __webpack_require__(14);\nvar concat_1 = __webpack_require__(696);\nObservable_1.Observable.prototype.concat = concat_1.concat;\n//# sourceMappingURL=concat.js.map\n\n/***/ },\n/* 760 */\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\"use strict\";\nvar Observable_1 = __webpack_require__(14);\nvar concatAll_1 = __webpack_require__(237);\nObservable_1.Observable.prototype.concatAll = concatAll_1.concatAll;\n//# sourceMappingURL=concatAll.js.map\n\n/***/ },\n/* 761 */\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\"use strict\";\nvar Observable_1 = __webpack_require__(14);\nvar concatMap_1 = __webpack_require__(238);\nObservable_1.Observable.prototype.concatMap = concatMap_1.concatMap;\n//# sourceMappingURL=concatMap.js.map\n\n/***/ },\n/* 762 */\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\"use strict\";\nvar Observable_1 = __webpack_require__(14);\nvar concatMapTo_1 = __webpack_require__(897);\nObservable_1.Observable.prototype.concatMapTo = concatMapTo_1.concatMapTo;\n//# sourceMappingURL=concatMapTo.js.map\n\n/***/ },\n/* 763 */\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\"use strict\";\nvar Observable_1 = __webpack_require__(14);\nvar count_1 = __webpack_require__(898);\nObservable_1.Observable.prototype.count = count_1.count;\n//# sourceMappingURL=count.js.map\n\n/***/ },\n/* 764 */\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\"use strict\";\nvar Observable_1 = __webpack_require__(14);\nvar debounce_1 = __webpack_require__(899);\nObservable_1.Observable.prototype.debounce = debounce_1.debounce;\n//# sourceMappingURL=debounce.js.map\n\n/***/ },\n/* 765 */\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\"use strict\";\nvar Observable_1 = __webpack_require__(14);\nvar debounceTime_1 = __webpack_require__(900);\nObservable_1.Observable.prototype.debounceTime = debounceTime_1.debounceTime;\n//# sourceMappingURL=debounceTime.js.map\n\n/***/ },\n/* 766 */\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\"use strict\";\nvar Observable_1 = __webpack_require__(14);\nvar defaultIfEmpty_1 = __webpack_require__(901);\nObservable_1.Observable.prototype.defaultIfEmpty = defaultIfEmpty_1.defaultIfEmpty;\n//# sourceMappingURL=defaultIfEmpty.js.map\n\n/***/ },\n/* 767 */\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\"use strict\";\nvar Observable_1 = __webpack_require__(14);\nvar delay_1 = __webpack_require__(902);\nObservable_1.Observable.prototype.delay = delay_1.delay;\n//# sourceMappingURL=delay.js.map\n\n/***/ },\n/* 768 */\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\"use strict\";\nvar Observable_1 = __webpack_require__(14);\nvar delayWhen_1 = __webpack_require__(903);\nObservable_1.Observable.prototype.delayWhen = delayWhen_1.delayWhen;\n//# sourceMappingURL=delayWhen.js.map\n\n/***/ },\n/* 769 */\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\"use strict\";\nvar Observable_1 = __webpack_require__(14);\nvar dematerialize_1 = __webpack_require__(904);\nObservable_1.Observable.prototype.dematerialize = dematerialize_1.dematerialize;\n//# sourceMappingURL=dematerialize.js.map\n\n/***/ },\n/* 770 */\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\"use strict\";\nvar Observable_1 = __webpack_require__(14);\nvar distinct_1 = __webpack_require__(702);\nObservable_1.Observable.prototype.distinct = distinct_1.distinct;\n//# sourceMappingURL=distinct.js.map\n\n/***/ },\n/* 771 */\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\"use strict\";\nvar Observable_1 = __webpack_require__(14);\nvar distinctKey_1 = __webpack_require__(905);\nObservable_1.Observable.prototype.distinctKey = distinctKey_1.distinctKey;\n//# sourceMappingURL=distinctKey.js.map\n\n/***/ },\n/* 772 */\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\"use strict\";\nvar Observable_1 = __webpack_require__(14);\nvar distinctUntilChanged_1 = __webpack_require__(703);\nObservable_1.Observable.prototype.distinctUntilChanged = distinctUntilChanged_1.distinctUntilChanged;\n//# sourceMappingURL=distinctUntilChanged.js.map\n\n/***/ },\n/* 773 */\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\"use strict\";\nvar Observable_1 = __webpack_require__(14);\nvar distinctUntilKeyChanged_1 = __webpack_require__(906);\nObservable_1.Observable.prototype.distinctUntilKeyChanged = distinctUntilKeyChanged_1.distinctUntilKeyChanged;\n//# sourceMappingURL=distinctUntilKeyChanged.js.map\n\n/***/ },\n/* 774 */\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\"use strict\";\nvar Observable_1 = __webpack_require__(14);\nvar do_1 = __webpack_require__(907);\nObservable_1.Observable.prototype.do = do_1._do;\nObservable_1.Observable.prototype._do = do_1._do;\n//# sourceMappingURL=do.js.map\n\n/***/ },\n/* 775 */\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\"use strict\";\nvar Observable_1 = __webpack_require__(14);\nvar elementAt_1 = __webpack_require__(908);\nObservable_1.Observable.prototype.elementAt = elementAt_1.elementAt;\n//# sourceMappingURL=elementAt.js.map\n\n/***/ },\n/* 776 */\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\"use strict\";\nvar Observable_1 = __webpack_require__(14);\nvar every_1 = __webpack_require__(239);\nObservable_1.Observable.prototype.every = every_1.every;\n//# sourceMappingURL=every.js.map\n\n/***/ },\n/* 777 */\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\"use strict\";\nvar Observable_1 = __webpack_require__(14);\nvar exhaust_1 = __webpack_require__(909);\nObservable_1.Observable.prototype.exhaust = exhaust_1.exhaust;\n//# sourceMappingURL=exhaust.js.map\n\n/***/ },\n/* 778 */\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\"use strict\";\nvar Observable_1 = __webpack_require__(14);\nvar exhaustMap_1 = __webpack_require__(910);\nObservable_1.Observable.prototype.exhaustMap = exhaustMap_1.exhaustMap;\n//# sourceMappingURL=exhaustMap.js.map\n\n/***/ },\n/* 779 */\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\"use strict\";\nvar Observable_1 = __webpack_require__(14);\nvar expand_1 = __webpack_require__(911);\nObservable_1.Observable.prototype.expand = expand_1.expand;\n//# sourceMappingURL=expand.js.map\n\n/***/ },\n/* 780 */\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\"use strict\";\nvar Observable_1 = __webpack_require__(14);\nvar filter_1 = __webpack_require__(385);\nObservable_1.Observable.prototype.filter = filter_1.filter;\n//# sourceMappingURL=filter.js.map\n\n/***/ },\n/* 781 */\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\"use strict\";\nvar Observable_1 = __webpack_require__(14);\nvar finally_1 = __webpack_require__(912);\nObservable_1.Observable.prototype.finally = finally_1._finally;\nObservable_1.Observable.prototype._finally = finally_1._finally;\n//# sourceMappingURL=finally.js.map\n\n/***/ },\n/* 782 */\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\"use strict\";\nvar Observable_1 = __webpack_require__(14);\nvar find_1 = __webpack_require__(704);\nObservable_1.Observable.prototype.find = find_1.find;\n//# sourceMappingURL=find.js.map\n\n/***/ },\n/* 783 */\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\"use strict\";\nvar Observable_1 = __webpack_require__(14);\nvar findIndex_1 = __webpack_require__(913);\nObservable_1.Observable.prototype.findIndex = findIndex_1.findIndex;\n//# sourceMappingURL=findIndex.js.map\n\n/***/ },\n/* 784 */\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\"use strict\";\nvar Observable_1 = __webpack_require__(14);\nvar first_1 = __webpack_require__(390);\nObservable_1.Observable.prototype.first = first_1.first;\n//# sourceMappingURL=first.js.map\n\n/***/ },\n/* 785 */\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\"use strict\";\nvar Observable_1 = __webpack_require__(14);\nvar groupBy_1 = __webpack_require__(914);\nObservable_1.Observable.prototype.groupBy = groupBy_1.groupBy;\n//# sourceMappingURL=groupBy.js.map\n\n/***/ },\n/* 786 */\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\"use strict\";\nvar Observable_1 = __webpack_require__(14);\nvar ignoreElements_1 = __webpack_require__(915);\nObservable_1.Observable.prototype.ignoreElements = ignoreElements_1.ignoreElements;\n//# sourceMappingURL=ignoreElements.js.map\n\n/***/ },\n/* 787 */\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\"use strict\";\nvar Observable_1 = __webpack_require__(14);\nvar isEmpty_1 = __webpack_require__(916);\nObservable_1.Observable.prototype.isEmpty = isEmpty_1.isEmpty;\n//# sourceMappingURL=isEmpty.js.map\n\n/***/ },\n/* 788 */\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\"use strict\";\nvar Observable_1 = __webpack_require__(14);\nvar last_1 = __webpack_require__(391);\nObservable_1.Observable.prototype.last = last_1.last;\n//# sourceMappingURL=last.js.map\n\n/***/ },\n/* 789 */\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\"use strict\";\nvar Observable_1 = __webpack_require__(14);\nvar let_1 = __webpack_require__(917);\nObservable_1.Observable.prototype.let = let_1.letProto;\nObservable_1.Observable.prototype.letBind = let_1.letProto;\n//# sourceMappingURL=let.js.map\n\n/***/ },\n/* 790 */\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\"use strict\";\nvar Observable_1 = __webpack_require__(14);\nvar map_1 = __webpack_require__(101);\nObservable_1.Observable.prototype.map = map_1.map;\n//# sourceMappingURL=map.js.map\n\n/***/ },\n/* 791 */\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\"use strict\";\nvar Observable_1 = __webpack_require__(14);\nvar mapTo_1 = __webpack_require__(918);\nObservable_1.Observable.prototype.mapTo = mapTo_1.mapTo;\n//# sourceMappingURL=mapTo.js.map\n\n/***/ },\n/* 792 */\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\"use strict\";\nvar Observable_1 = __webpack_require__(14);\nvar materialize_1 = __webpack_require__(919);\nObservable_1.Observable.prototype.materialize = materialize_1.materialize;\n//# sourceMappingURL=materialize.js.map\n\n/***/ },\n/* 793 */\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\"use strict\";\nvar Observable_1 = __webpack_require__(14);\nvar max_1 = __webpack_require__(920);\nObservable_1.Observable.prototype.max = max_1.max;\n//# sourceMappingURL=max.js.map\n\n/***/ },\n/* 794 */\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\"use strict\";\nvar Observable_1 = __webpack_require__(14);\nvar merge_1 = __webpack_require__(705);\nObservable_1.Observable.prototype.merge = merge_1.merge;\n//# sourceMappingURL=merge.js.map\n\n/***/ },\n/* 795 */\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\"use strict\";\nvar Observable_1 = __webpack_require__(14);\nvar mergeAll_1 = __webpack_require__(102);\nObservable_1.Observable.prototype.mergeAll = mergeAll_1.mergeAll;\n//# sourceMappingURL=mergeAll.js.map\n\n/***/ },\n/* 796 */\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\"use strict\";\nvar Observable_1 = __webpack_require__(14);\nvar mergeMap_1 = __webpack_require__(78);\nObservable_1.Observable.prototype.mergeMap = mergeMap_1.mergeMap;\nObservable_1.Observable.prototype.flatMap = mergeMap_1.mergeMap;\n//# sourceMappingURL=mergeMap.js.map\n\n/***/ },\n/* 797 */\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\"use strict\";\nvar Observable_1 = __webpack_require__(14);\nvar mergeMapTo_1 = __webpack_require__(706);\nObservable_1.Observable.prototype.flatMapTo = mergeMapTo_1.mergeMapTo;\nObservable_1.Observable.prototype.mergeMapTo = mergeMapTo_1.mergeMapTo;\n//# sourceMappingURL=mergeMapTo.js.map\n\n/***/ },\n/* 798 */\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\"use strict\";\nvar Observable_1 = __webpack_require__(14);\nvar mergeScan_1 = __webpack_require__(921);\nObservable_1.Observable.prototype.mergeScan = mergeScan_1.mergeScan;\n//# sourceMappingURL=mergeScan.js.map\n\n/***/ },\n/* 799 */\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\"use strict\";\nvar Observable_1 = __webpack_require__(14);\nvar min_1 = __webpack_require__(922);\nObservable_1.Observable.prototype.min = min_1.min;\n//# sourceMappingURL=min.js.map\n\n/***/ },\n/* 800 */\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\"use strict\";\nvar Observable_1 = __webpack_require__(14);\nvar multicast_1 = __webpack_require__(687);\nObservable_1.Observable.prototype.multicast = multicast_1.multicast;\n//# sourceMappingURL=multicast.js.map\n\n/***/ },\n/* 801 */\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\"use strict\";\nvar Observable_1 = __webpack_require__(14);\nvar observeOn_1 = __webpack_require__(386);\nObservable_1.Observable.prototype.observeOn = observeOn_1.observeOn;\n//# sourceMappingURL=observeOn.js.map\n\n/***/ },\n/* 802 */\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\"use strict\";\nvar Observable_1 = __webpack_require__(14);\nvar onErrorResumeNext_1 = __webpack_require__(707);\nObservable_1.Observable.prototype.onErrorResumeNext = onErrorResumeNext_1.onErrorResumeNext;\n//# sourceMappingURL=onErrorResumeNext.js.map\n\n/***/ },\n/* 803 */\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\"use strict\";\nvar Observable_1 = __webpack_require__(14);\nvar pairwise_1 = __webpack_require__(923);\nObservable_1.Observable.prototype.pairwise = pairwise_1.pairwise;\n//# sourceMappingURL=pairwise.js.map\n\n/***/ },\n/* 804 */\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\"use strict\";\nvar Observable_1 = __webpack_require__(14);\nvar partition_1 = __webpack_require__(924);\nObservable_1.Observable.prototype.partition = partition_1.partition;\n//# sourceMappingURL=partition.js.map\n\n/***/ },\n/* 805 */\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\"use strict\";\nvar Observable_1 = __webpack_require__(14);\nvar pluck_1 = __webpack_require__(925);\nObservable_1.Observable.prototype.pluck = pluck_1.pluck;\n//# sourceMappingURL=pluck.js.map\n\n/***/ },\n/* 806 */\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\"use strict\";\nvar Observable_1 = __webpack_require__(14);\nvar publish_1 = __webpack_require__(926);\nObservable_1.Observable.prototype.publish = publish_1.publish;\n//# sourceMappingURL=publish.js.map\n\n/***/ },\n/* 807 */\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\"use strict\";\nvar Observable_1 = __webpack_require__(14);\nvar publishBehavior_1 = __webpack_require__(927);\nObservable_1.Observable.prototype.publishBehavior = publishBehavior_1.publishBehavior;\n//# sourceMappingURL=publishBehavior.js.map\n\n/***/ },\n/* 808 */\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\"use strict\";\nvar Observable_1 = __webpack_require__(14);\nvar publishLast_1 = __webpack_require__(928);\nObservable_1.Observable.prototype.publishLast = publishLast_1.publishLast;\n//# sourceMappingURL=publishLast.js.map\n\n/***/ },\n/* 809 */\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\"use strict\";\nvar Observable_1 = __webpack_require__(14);\nvar publishReplay_1 = __webpack_require__(929);\nObservable_1.Observable.prototype.publishReplay = publishReplay_1.publishReplay;\n//# sourceMappingURL=publishReplay.js.map\n\n/***/ },\n/* 810 */\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\"use strict\";\nvar Observable_1 = __webpack_require__(14);\nvar race_1 = __webpack_require__(708);\nObservable_1.Observable.prototype.race = race_1.race;\n//# sourceMappingURL=race.js.map\n\n/***/ },\n/* 811 */\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\"use strict\";\nvar Observable_1 = __webpack_require__(14);\nvar reduce_1 = __webpack_require__(383);\nObservable_1.Observable.prototype.reduce = reduce_1.reduce;\n//# sourceMappingURL=reduce.js.map\n\n/***/ },\n/* 812 */\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\"use strict\";\nvar Observable_1 = __webpack_require__(14);\nvar repeat_1 = __webpack_require__(930);\nObservable_1.Observable.prototype.repeat = repeat_1.repeat;\n//# sourceMappingURL=repeat.js.map\n\n/***/ },\n/* 813 */\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\"use strict\";\nvar Observable_1 = __webpack_require__(14);\nvar repeatWhen_1 = __webpack_require__(931);\nObservable_1.Observable.prototype.repeatWhen = repeatWhen_1.repeatWhen;\n//# sourceMappingURL=repeatWhen.js.map\n\n/***/ },\n/* 814 */\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\"use strict\";\nvar Observable_1 = __webpack_require__(14);\nvar retry_1 = __webpack_require__(932);\nObservable_1.Observable.prototype.retry = retry_1.retry;\n//# sourceMappingURL=retry.js.map\n\n/***/ },\n/* 815 */\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\"use strict\";\nvar Observable_1 = __webpack_require__(14);\nvar retryWhen_1 = __webpack_require__(933);\nObservable_1.Observable.prototype.retryWhen = retryWhen_1.retryWhen;\n//# sourceMappingURL=retryWhen.js.map\n\n/***/ },\n/* 816 */\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\"use strict\";\nvar Observable_1 = __webpack_require__(14);\nvar sample_1 = __webpack_require__(934);\nObservable_1.Observable.prototype.sample = sample_1.sample;\n//# sourceMappingURL=sample.js.map\n\n/***/ },\n/* 817 */\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\"use strict\";\nvar Observable_1 = __webpack_require__(14);\nvar sampleTime_1 = __webpack_require__(935);\nObservable_1.Observable.prototype.sampleTime = sampleTime_1.sampleTime;\n//# sourceMappingURL=sampleTime.js.map\n\n/***/ },\n/* 818 */\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\"use strict\";\nvar Observable_1 = __webpack_require__(14);\nvar scan_1 = __webpack_require__(936);\nObservable_1.Observable.prototype.scan = scan_1.scan;\n//# sourceMappingURL=scan.js.map\n\n/***/ },\n/* 819 */\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\"use strict\";\nvar Observable_1 = __webpack_require__(14);\nvar sequenceEqual_1 = __webpack_require__(937);\nObservable_1.Observable.prototype.sequenceEqual = sequenceEqual_1.sequenceEqual;\n//# sourceMappingURL=sequenceEqual.js.map\n\n/***/ },\n/* 820 */\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\"use strict\";\nvar Observable_1 = __webpack_require__(14);\nvar share_1 = __webpack_require__(938);\nObservable_1.Observable.prototype.share = share_1.share;\n//# sourceMappingURL=share.js.map\n\n/***/ },\n/* 821 */\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\"use strict\";\nvar Observable_1 = __webpack_require__(14);\nvar single_1 = __webpack_require__(939);\nObservable_1.Observable.prototype.single = single_1.single;\n//# sourceMappingURL=single.js.map\n\n/***/ },\n/* 822 */\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\"use strict\";\nvar Observable_1 = __webpack_require__(14);\nvar skip_1 = __webpack_require__(940);\nObservable_1.Observable.prototype.skip = skip_1.skip;\n//# sourceMappingURL=skip.js.map\n\n/***/ },\n/* 823 */\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\"use strict\";\nvar Observable_1 = __webpack_require__(14);\nvar skipUntil_1 = __webpack_require__(941);\nObservable_1.Observable.prototype.skipUntil = skipUntil_1.skipUntil;\n//# sourceMappingURL=skipUntil.js.map\n\n/***/ },\n/* 824 */\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\"use strict\";\nvar Observable_1 = __webpack_require__(14);\nvar skipWhile_1 = __webpack_require__(942);\nObservable_1.Observable.prototype.skipWhile = skipWhile_1.skipWhile;\n//# sourceMappingURL=skipWhile.js.map\n\n/***/ },\n/* 825 */\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\"use strict\";\nvar Observable_1 = __webpack_require__(14);\nvar startWith_1 = __webpack_require__(943);\nObservable_1.Observable.prototype.startWith = startWith_1.startWith;\n//# sourceMappingURL=startWith.js.map\n\n/***/ },\n/* 826 */\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\"use strict\";\nvar Observable_1 = __webpack_require__(14);\nvar subscribeOn_1 = __webpack_require__(944);\nObservable_1.Observable.prototype.subscribeOn = subscribeOn_1.subscribeOn;\n//# sourceMappingURL=subscribeOn.js.map\n\n/***/ },\n/* 827 */\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\"use strict\";\nvar Observable_1 = __webpack_require__(14);\nvar switch_1 = __webpack_require__(945);\nObservable_1.Observable.prototype.switch = switch_1._switch;\nObservable_1.Observable.prototype._switch = switch_1._switch;\n//# sourceMappingURL=switch.js.map\n\n/***/ },\n/* 828 */\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\"use strict\";\nvar Observable_1 = __webpack_require__(14);\nvar switchMap_1 = __webpack_require__(946);\nObservable_1.Observable.prototype.switchMap = switchMap_1.switchMap;\n//# sourceMappingURL=switchMap.js.map\n\n/***/ },\n/* 829 */\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\"use strict\";\nvar Observable_1 = __webpack_require__(14);\nvar switchMapTo_1 = __webpack_require__(947);\nObservable_1.Observable.prototype.switchMapTo = switchMapTo_1.switchMapTo;\n//# sourceMappingURL=switchMapTo.js.map\n\n/***/ },\n/* 830 */\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\"use strict\";\nvar Observable_1 = __webpack_require__(14);\nvar take_1 = __webpack_require__(948);\nObservable_1.Observable.prototype.take = take_1.take;\n//# sourceMappingURL=take.js.map\n\n/***/ },\n/* 831 */\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\"use strict\";\nvar Observable_1 = __webpack_require__(14);\nvar takeLast_1 = __webpack_require__(949);\nObservable_1.Observable.prototype.takeLast = takeLast_1.takeLast;\n//# sourceMappingURL=takeLast.js.map\n\n/***/ },\n/* 832 */\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\"use strict\";\nvar Observable_1 = __webpack_require__(14);\nvar takeUntil_1 = __webpack_require__(950);\nObservable_1.Observable.prototype.takeUntil = takeUntil_1.takeUntil;\n//# sourceMappingURL=takeUntil.js.map\n\n/***/ },\n/* 833 */\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\"use strict\";\nvar Observable_1 = __webpack_require__(14);\nvar takeWhile_1 = __webpack_require__(951);\nObservable_1.Observable.prototype.takeWhile = takeWhile_1.takeWhile;\n//# sourceMappingURL=takeWhile.js.map\n\n/***/ },\n/* 834 */\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\"use strict\";\nvar Observable_1 = __webpack_require__(14);\nvar throttle_1 = __webpack_require__(952);\nObservable_1.Observable.prototype.throttle = throttle_1.throttle;\n//# sourceMappingURL=throttle.js.map\n\n/***/ },\n/* 835 */\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\"use strict\";\nvar Observable_1 = __webpack_require__(14);\nvar throttleTime_1 = __webpack_require__(953);\nObservable_1.Observable.prototype.throttleTime = throttleTime_1.throttleTime;\n//# sourceMappingURL=throttleTime.js.map\n\n/***/ },\n/* 836 */\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\"use strict\";\nvar Observable_1 = __webpack_require__(14);\nvar timeInterval_1 = __webpack_require__(709);\nObservable_1.Observable.prototype.timeInterval = timeInterval_1.timeInterval;\n//# sourceMappingURL=timeInterval.js.map\n\n/***/ },\n/* 837 */\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\"use strict\";\nvar Observable_1 = __webpack_require__(14);\nvar timeout_1 = __webpack_require__(954);\nObservable_1.Observable.prototype.timeout = timeout_1.timeout;\n//# sourceMappingURL=timeout.js.map\n\n/***/ },\n/* 838 */\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\"use strict\";\nvar Observable_1 = __webpack_require__(14);\nvar timeoutWith_1 = __webpack_require__(955);\nObservable_1.Observable.prototype.timeoutWith = timeoutWith_1.timeoutWith;\n//# sourceMappingURL=timeoutWith.js.map\n\n/***/ },\n/* 839 */\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\"use strict\";\nvar Observable_1 = __webpack_require__(14);\nvar timestamp_1 = __webpack_require__(710);\nObservable_1.Observable.prototype.timestamp = timestamp_1.timestamp;\n//# sourceMappingURL=timestamp.js.map\n\n/***/ },\n/* 840 */\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\"use strict\";\nvar Observable_1 = __webpack_require__(14);\nvar toArray_1 = __webpack_require__(956);\nObservable_1.Observable.prototype.toArray = toArray_1.toArray;\n//# sourceMappingURL=toArray.js.map\n\n/***/ },\n/* 841 */\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\"use strict\";\nvar Observable_1 = __webpack_require__(14);\nvar toPromise_1 = __webpack_require__(392);\nObservable_1.Observable.prototype.toPromise = toPromise_1.toPromise;\n//# sourceMappingURL=toPromise.js.map\n\n/***/ },\n/* 842 */\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\"use strict\";\nvar Observable_1 = __webpack_require__(14);\nvar window_1 = __webpack_require__(957);\nObservable_1.Observable.prototype.window = window_1.window;\n//# sourceMappingURL=window.js.map\n\n/***/ },\n/* 843 */\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\"use strict\";\nvar Observable_1 = __webpack_require__(14);\nvar windowCount_1 = __webpack_require__(958);\nObservable_1.Observable.prototype.windowCount = windowCount_1.windowCount;\n//# sourceMappingURL=windowCount.js.map\n\n/***/ },\n/* 844 */\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\"use strict\";\nvar Observable_1 = __webpack_require__(14);\nvar windowTime_1 = __webpack_require__(959);\nObservable_1.Observable.prototype.windowTime = windowTime_1.windowTime;\n//# sourceMappingURL=windowTime.js.map\n\n/***/ },\n/* 845 */\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\"use strict\";\nvar Observable_1 = __webpack_require__(14);\nvar windowToggle_1 = __webpack_require__(960);\nObservable_1.Observable.prototype.windowToggle = windowToggle_1.windowToggle;\n//# sourceMappingURL=windowToggle.js.map\n\n/***/ },\n/* 846 */\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\"use strict\";\nvar Observable_1 = __webpack_require__(14);\nvar windowWhen_1 = __webpack_require__(961);\nObservable_1.Observable.prototype.windowWhen = windowWhen_1.windowWhen;\n//# sourceMappingURL=windowWhen.js.map\n\n/***/ },\n/* 847 */\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\"use strict\";\nvar Observable_1 = __webpack_require__(14);\nvar withLatestFrom_1 = __webpack_require__(962);\nObservable_1.Observable.prototype.withLatestFrom = withLatestFrom_1.withLatestFrom;\n//# sourceMappingURL=withLatestFrom.js.map\n\n/***/ },\n/* 848 */\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\"use strict\";\nvar Observable_1 = __webpack_require__(14);\nvar zip_1 = __webpack_require__(697);\nObservable_1.Observable.prototype.zip = zip_1.zipProto;\n//# sourceMappingURL=zip.js.map\n\n/***/ },\n/* 849 */\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\"use strict\";\nvar Observable_1 = __webpack_require__(14);\nvar zipAll_1 = __webpack_require__(963);\nObservable_1.Observable.prototype.zipAll = zipAll_1.zipAll;\n//# sourceMappingURL=zipAll.js.map\n\n/***/ },\n/* 850 */\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Observable_1 = __webpack_require__(14);\nvar tryCatch_1 = __webpack_require__(380);\nvar errorObject_1 = __webpack_require__(231);\nvar AsyncSubject_1 = __webpack_require__(690);\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @extends {Ignored}\n * @hide true\n */\nvar BoundCallbackObservable = (function (_super) {\n    __extends(BoundCallbackObservable, _super);\n    function BoundCallbackObservable(callbackFunc, selector, args, scheduler) {\n        _super.call(this);\n        this.callbackFunc = callbackFunc;\n        this.selector = selector;\n        this.args = args;\n        this.scheduler = scheduler;\n    }\n    /* tslint:enable:max-line-length */\n    /**\n     * Converts a callback API to a function that returns an Observable.\n     *\n     * <span class=\"informal\">Give it a function `f` of type `f(x, callback)` and\n     * it will return a function `g` that when called as `g(x)` will output an\n     * Observable.</span>\n     *\n     * `bindCallback` is not an operator because its input and output are not\n     * Observables. The input is a function `func` with some parameters, but the\n     * last parameter must be a callback function that `func` calls when it is\n     * done. The output of `bindCallback` is a function that takes the same\n     * parameters as `func`, except the last one (the callback). When the output\n     * function is called with arguments, it will return an Observable where the\n     * results will be delivered to.\n     *\n     * @example <caption>Convert jQuery's getJSON to an Observable API</caption>\n     * // Suppose we have jQuery.getJSON('/my/url', callback)\n     * var getJSONAsObservable = Rx.Observable.bindCallback(jQuery.getJSON);\n     * var result = getJSONAsObservable('/my/url');\n     * result.subscribe(x => console.log(x), e => console.error(e));\n     *\n     * @see {@link bindNodeCallback}\n     * @see {@link from}\n     * @see {@link fromPromise}\n     *\n     * @param {function} func Function with a callback as the last parameter.\n     * @param {function} selector A function which takes the arguments from the\n     * callback and maps those a value to emit on the output Observable.\n     * @param {Scheduler} [scheduler] The scheduler on which to schedule the\n     * callbacks.\n     * @return {function(...params: *): Observable} A function which returns the\n     * Observable that delivers the same values the callback would deliver.\n     * @static true\n     * @name bindCallback\n     * @owner Observable\n     */\n    BoundCallbackObservable.create = function (func, selector, scheduler) {\n        if (selector === void 0) { selector = undefined; }\n        return function () {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i - 0] = arguments[_i];\n            }\n            return new BoundCallbackObservable(func, selector, args, scheduler);\n        };\n    };\n    BoundCallbackObservable.prototype._subscribe = function (subscriber) {\n        var callbackFunc = this.callbackFunc;\n        var args = this.args;\n        var scheduler = this.scheduler;\n        var subject = this.subject;\n        if (!scheduler) {\n            if (!subject) {\n                subject = this.subject = new AsyncSubject_1.AsyncSubject();\n                var handler = function handlerFn() {\n                    var innerArgs = [];\n                    for (var _i = 0; _i < arguments.length; _i++) {\n                        innerArgs[_i - 0] = arguments[_i];\n                    }\n                    var source = handlerFn.source;\n                    var selector = source.selector, subject = source.subject;\n                    if (selector) {\n                        var result_1 = tryCatch_1.tryCatch(selector).apply(this, innerArgs);\n                        if (result_1 === errorObject_1.errorObject) {\n                            subject.error(errorObject_1.errorObject.e);\n                        }\n                        else {\n                            subject.next(result_1);\n                            subject.complete();\n                        }\n                    }\n                    else {\n                        subject.next(innerArgs.length === 1 ? innerArgs[0] : innerArgs);\n                        subject.complete();\n                    }\n                };\n                // use named function instance to avoid closure.\n                handler.source = this;\n                var result = tryCatch_1.tryCatch(callbackFunc).apply(this, args.concat(handler));\n                if (result === errorObject_1.errorObject) {\n                    subject.error(errorObject_1.errorObject.e);\n                }\n            }\n            return subject.subscribe(subscriber);\n        }\n        else {\n            return scheduler.schedule(BoundCallbackObservable.dispatch, 0, { source: this, subscriber: subscriber });\n        }\n    };\n    BoundCallbackObservable.dispatch = function (state) {\n        var self = this;\n        var source = state.source, subscriber = state.subscriber;\n        var callbackFunc = source.callbackFunc, args = source.args, scheduler = source.scheduler;\n        var subject = source.subject;\n        if (!subject) {\n            subject = source.subject = new AsyncSubject_1.AsyncSubject();\n            var handler = function handlerFn() {\n                var innerArgs = [];\n                for (var _i = 0; _i < arguments.length; _i++) {\n                    innerArgs[_i - 0] = arguments[_i];\n                }\n                var source = handlerFn.source;\n                var selector = source.selector, subject = source.subject;\n                if (selector) {\n                    var result_2 = tryCatch_1.tryCatch(selector).apply(this, innerArgs);\n                    if (result_2 === errorObject_1.errorObject) {\n                        self.add(scheduler.schedule(dispatchError, 0, { err: errorObject_1.errorObject.e, subject: subject }));\n                    }\n                    else {\n                        self.add(scheduler.schedule(dispatchNext, 0, { value: result_2, subject: subject }));\n                    }\n                }\n                else {\n                    var value = innerArgs.length === 1 ? innerArgs[0] : innerArgs;\n                    self.add(scheduler.schedule(dispatchNext, 0, { value: value, subject: subject }));\n                }\n            };\n            // use named function to pass values in without closure\n            handler.source = source;\n            var result = tryCatch_1.tryCatch(callbackFunc).apply(this, args.concat(handler));\n            if (result === errorObject_1.errorObject) {\n                subject.error(errorObject_1.errorObject.e);\n            }\n        }\n        self.add(subject.subscribe(subscriber));\n    };\n    return BoundCallbackObservable;\n}(Observable_1.Observable));\nexports.BoundCallbackObservable = BoundCallbackObservable;\nfunction dispatchNext(arg) {\n    var value = arg.value, subject = arg.subject;\n    subject.next(value);\n    subject.complete();\n}\nfunction dispatchError(arg) {\n    var err = arg.err, subject = arg.subject;\n    subject.error(err);\n}\n//# sourceMappingURL=BoundCallbackObservable.js.map\n\n/***/ },\n/* 851 */\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Observable_1 = __webpack_require__(14);\nvar tryCatch_1 = __webpack_require__(380);\nvar errorObject_1 = __webpack_require__(231);\nvar AsyncSubject_1 = __webpack_require__(690);\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @extends {Ignored}\n * @hide true\n */\nvar BoundNodeCallbackObservable = (function (_super) {\n    __extends(BoundNodeCallbackObservable, _super);\n    function BoundNodeCallbackObservable(callbackFunc, selector, args, scheduler) {\n        _super.call(this);\n        this.callbackFunc = callbackFunc;\n        this.selector = selector;\n        this.args = args;\n        this.scheduler = scheduler;\n    }\n    /* tslint:enable:max-line-length */\n    /**\n     * Converts a Node.js-style callback API to a function that returns an\n     * Observable.\n     *\n     * <span class=\"informal\">It's just like {@link bindCallback}, but the\n     * callback is expected to be of type `callback(error, result)`.</span>\n     *\n     * `bindNodeCallback` is not an operator because its input and output are not\n     * Observables. The input is a function `func` with some parameters, but the\n     * last parameter must be a callback function that `func` calls when it is\n     * done. The callback function is expected to follow Node.js conventions,\n     * where the first argument to the callback is an error, while remaining\n     * arguments are the callback result. The output of `bindNodeCallback` is a\n     * function that takes the same parameters as `func`, except the last one (the\n     * callback). When the output function is called with arguments, it will\n     * return an Observable where the results will be delivered to.\n     *\n     * @example <caption>Read a file from the filesystem and get the data as an Observable</caption>\n     * import * as fs from 'fs';\n     * var readFileAsObservable = Rx.Observable.bindNodeCallback(fs.readFile);\n     * var result = readFileAsObservable('./roadNames.txt', 'utf8');\n     * result.subscribe(x => console.log(x), e => console.error(e));\n     *\n     * @see {@link bindCallback}\n     * @see {@link from}\n     * @see {@link fromPromise}\n     *\n     * @param {function} func Function with a callback as the last parameter.\n     * @param {function} selector A function which takes the arguments from the\n     * callback and maps those a value to emit on the output Observable.\n     * @param {Scheduler} [scheduler] The scheduler on which to schedule the\n     * callbacks.\n     * @return {function(...params: *): Observable} A function which returns the\n     * Observable that delivers the same values the Node.js callback would\n     * deliver.\n     * @static true\n     * @name bindNodeCallback\n     * @owner Observable\n     */\n    BoundNodeCallbackObservable.create = function (func, selector, scheduler) {\n        if (selector === void 0) { selector = undefined; }\n        return function () {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i - 0] = arguments[_i];\n            }\n            return new BoundNodeCallbackObservable(func, selector, args, scheduler);\n        };\n    };\n    BoundNodeCallbackObservable.prototype._subscribe = function (subscriber) {\n        var callbackFunc = this.callbackFunc;\n        var args = this.args;\n        var scheduler = this.scheduler;\n        var subject = this.subject;\n        if (!scheduler) {\n            if (!subject) {\n                subject = this.subject = new AsyncSubject_1.AsyncSubject();\n                var handler = function handlerFn() {\n                    var innerArgs = [];\n                    for (var _i = 0; _i < arguments.length; _i++) {\n                        innerArgs[_i - 0] = arguments[_i];\n                    }\n                    var source = handlerFn.source;\n                    var selector = source.selector, subject = source.subject;\n                    var err = innerArgs.shift();\n                    if (err) {\n                        subject.error(err);\n                    }\n                    else if (selector) {\n                        var result_1 = tryCatch_1.tryCatch(selector).apply(this, innerArgs);\n                        if (result_1 === errorObject_1.errorObject) {\n                            subject.error(errorObject_1.errorObject.e);\n                        }\n                        else {\n                            subject.next(result_1);\n                            subject.complete();\n                        }\n                    }\n                    else {\n                        subject.next(innerArgs.length === 1 ? innerArgs[0] : innerArgs);\n                        subject.complete();\n                    }\n                };\n                // use named function instance to avoid closure.\n                handler.source = this;\n                var result = tryCatch_1.tryCatch(callbackFunc).apply(this, args.concat(handler));\n                if (result === errorObject_1.errorObject) {\n                    subject.error(errorObject_1.errorObject.e);\n                }\n            }\n            return subject.subscribe(subscriber);\n        }\n        else {\n            return scheduler.schedule(dispatch, 0, { source: this, subscriber: subscriber });\n        }\n    };\n    return BoundNodeCallbackObservable;\n}(Observable_1.Observable));\nexports.BoundNodeCallbackObservable = BoundNodeCallbackObservable;\nfunction dispatch(state) {\n    var self = this;\n    var source = state.source, subscriber = state.subscriber;\n    // XXX: cast to `any` to access to the private field in `source`.\n    var _a = source, callbackFunc = _a.callbackFunc, args = _a.args, scheduler = _a.scheduler;\n    var subject = source.subject;\n    if (!subject) {\n        subject = source.subject = new AsyncSubject_1.AsyncSubject();\n        var handler = function handlerFn() {\n            var innerArgs = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                innerArgs[_i - 0] = arguments[_i];\n            }\n            var source = handlerFn.source;\n            var selector = source.selector, subject = source.subject;\n            var err = innerArgs.shift();\n            if (err) {\n                subject.error(err);\n            }\n            else if (selector) {\n                var result_2 = tryCatch_1.tryCatch(selector).apply(this, innerArgs);\n                if (result_2 === errorObject_1.errorObject) {\n                    self.add(scheduler.schedule(dispatchError, 0, { err: errorObject_1.errorObject.e, subject: subject }));\n                }\n                else {\n                    self.add(scheduler.schedule(dispatchNext, 0, { value: result_2, subject: subject }));\n                }\n            }\n            else {\n                var value = innerArgs.length === 1 ? innerArgs[0] : innerArgs;\n                self.add(scheduler.schedule(dispatchNext, 0, { value: value, subject: subject }));\n            }\n        };\n        // use named function to pass values in without closure\n        handler.source = source;\n        var result = tryCatch_1.tryCatch(callbackFunc).apply(this, args.concat(handler));\n        if (result === errorObject_1.errorObject) {\n            subject.error(errorObject_1.errorObject.e);\n        }\n    }\n    self.add(subject.subscribe(subscriber));\n}\nfunction dispatchNext(arg) {\n    var value = arg.value, subject = arg.subject;\n    subject.next(value);\n    subject.complete();\n}\nfunction dispatchError(arg) {\n    var err = arg.err, subject = arg.subject;\n    subject.error(err);\n}\n//# sourceMappingURL=BoundNodeCallbackObservable.js.map\n\n/***/ },\n/* 852 */\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Observable_1 = __webpack_require__(14);\nvar subscribeToResult_1 = __webpack_require__(146);\nvar OuterSubscriber_1 = __webpack_require__(145);\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @extends {Ignored}\n * @hide true\n */\nvar DeferObservable = (function (_super) {\n    __extends(DeferObservable, _super);\n    function DeferObservable(observableFactory) {\n        _super.call(this);\n        this.observableFactory = observableFactory;\n    }\n    /**\n     * Creates an Observable that, on subscribe, calls an Observable factory to\n     * make an Observable for each new Observer.\n     *\n     * <span class=\"informal\">Creates the Observable lazily, that is, only when it\n     * is subscribed.\n     * </span>\n     *\n     * <img src=\"./img/defer.png\" width=\"100%\">\n     *\n     * `defer` allows you to create the Observable only when the Observer\n     * subscribes, and create a fresh Observable for each Observer. It waits until\n     * an Observer subscribes to it, and then it generates an Observable,\n     * typically with an Observable factory function. It does this afresh for each\n     * subscriber, so although each subscriber may think it is subscribing to the\n     * same Observable, in fact each subscriber gets its own individual\n     * Observable.\n     *\n     * @example <caption>Subscribe to either an Observable of clicks or an Observable of interval, at random</caption>\n     * var clicksOrInterval = Rx.Observable.defer(function () {\n     *   if (Math.random() > 0.5) {\n     *     return Rx.Observable.fromEvent(document, 'click');\n     *   } else {\n     *     return Rx.Observable.interval(1000);\n     *   }\n     * });\n     * clicksOrInterval.subscribe(x => console.log(x));\n     *\n     * @see {@link create}\n     *\n     * @param {function(): Observable|Promise} observableFactory The Observable\n     * factory function to invoke for each Observer that subscribes to the output\n     * Observable. May also return a Promise, which will be converted on the fly\n     * to an Observable.\n     * @return {Observable} An Observable whose Observers' subscriptions trigger\n     * an invocation of the given Observable factory function.\n     * @static true\n     * @name defer\n     * @owner Observable\n     */\n    DeferObservable.create = function (observableFactory) {\n        return new DeferObservable(observableFactory);\n    };\n    DeferObservable.prototype._subscribe = function (subscriber) {\n        return new DeferSubscriber(subscriber, this.observableFactory);\n    };\n    return DeferObservable;\n}(Observable_1.Observable));\nexports.DeferObservable = DeferObservable;\nvar DeferSubscriber = (function (_super) {\n    __extends(DeferSubscriber, _super);\n    function DeferSubscriber(destination, factory) {\n        _super.call(this, destination);\n        this.factory = factory;\n        this.tryDefer();\n    }\n    DeferSubscriber.prototype.tryDefer = function () {\n        try {\n            this._callFactory();\n        }\n        catch (err) {\n            this._error(err);\n        }\n    };\n    DeferSubscriber.prototype._callFactory = function () {\n        var result = this.factory();\n        if (result) {\n            this.add(subscribeToResult_1.subscribeToResult(this, result));\n        }\n    };\n    return DeferSubscriber;\n}(OuterSubscriber_1.OuterSubscriber));\n//# sourceMappingURL=DeferObservable.js.map\n\n/***/ },\n/* 853 */\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Observable_1 = __webpack_require__(14);\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @extends {Ignored}\n * @hide true\n */\nvar ErrorObservable = (function (_super) {\n    __extends(ErrorObservable, _super);\n    function ErrorObservable(error, scheduler) {\n        _super.call(this);\n        this.error = error;\n        this.scheduler = scheduler;\n    }\n    /**\n     * Creates an Observable that emits no items to the Observer and immediately\n     * emits an error notification.\n     *\n     * <span class=\"informal\">Just emits 'error', and nothing else.\n     * </span>\n     *\n     * <img src=\"./img/throw.png\" width=\"100%\">\n     *\n     * This static operator is useful for creating a simple Observable that only\n     * emits the error notification. It can be used for composing with other\n     * Observables, such as in a {@link mergeMap}.\n     *\n     * @example <caption>Emit the number 7, then emit an error.</caption>\n     * var result = Rx.Observable.throw(new Error('oops!')).startWith(7);\n     * result.subscribe(x => console.log(x), e => console.error(e));\n     *\n     * @example <caption>Map and flattens numbers to the sequence 'a', 'b', 'c', but throw an error for 13</caption>\n     * var interval = Rx.Observable.interval(1000);\n     * var result = interval.mergeMap(x =>\n     *   x === 13 ?\n     *     Rx.Observable.throw('Thirteens are bad') :\n     *     Rx.Observable.of('a', 'b', 'c')\n     * );\n     * result.subscribe(x => console.log(x), e => console.error(e));\n     *\n     * @see {@link create}\n     * @see {@link empty}\n     * @see {@link never}\n     * @see {@link of}\n     *\n     * @param {any} error The particular Error to pass to the error notification.\n     * @param {Scheduler} [scheduler] A {@link Scheduler} to use for scheduling\n     * the emission of the error notification.\n     * @return {Observable} An error Observable: emits only the error notification\n     * using the given error argument.\n     * @static true\n     * @name throw\n     * @owner Observable\n     */\n    ErrorObservable.create = function (error, scheduler) {\n        return new ErrorObservable(error, scheduler);\n    };\n    ErrorObservable.dispatch = function (arg) {\n        var error = arg.error, subscriber = arg.subscriber;\n        subscriber.error(error);\n    };\n    ErrorObservable.prototype._subscribe = function (subscriber) {\n        var error = this.error;\n        var scheduler = this.scheduler;\n        if (scheduler) {\n            return scheduler.schedule(ErrorObservable.dispatch, 0, {\n                error: error, subscriber: subscriber\n            });\n        }\n        else {\n            subscriber.error(error);\n        }\n    };\n    return ErrorObservable;\n}(Observable_1.Observable));\nexports.ErrorObservable = ErrorObservable;\n//# sourceMappingURL=ErrorObservable.js.map\n\n/***/ },\n/* 854 */\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Observable_1 = __webpack_require__(14);\nvar EmptyObservable_1 = __webpack_require__(233);\nvar isArray_1 = __webpack_require__(148);\nvar subscribeToResult_1 = __webpack_require__(146);\nvar OuterSubscriber_1 = __webpack_require__(145);\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @extends {Ignored}\n * @hide true\n */\nvar ForkJoinObservable = (function (_super) {\n    __extends(ForkJoinObservable, _super);\n    function ForkJoinObservable(sources, resultSelector) {\n        _super.call(this);\n        this.sources = sources;\n        this.resultSelector = resultSelector;\n    }\n    /* tslint:enable:max-line-length */\n    /**\n     * @param sources\n     * @return {any}\n     * @static true\n     * @name forkJoin\n     * @owner Observable\n     */\n    ForkJoinObservable.create = function () {\n        var sources = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            sources[_i - 0] = arguments[_i];\n        }\n        if (sources === null || arguments.length === 0) {\n            return new EmptyObservable_1.EmptyObservable();\n        }\n        var resultSelector = null;\n        if (typeof sources[sources.length - 1] === 'function') {\n            resultSelector = sources.pop();\n        }\n        // if the first and only other argument besides the resultSelector is an array\n        // assume it's been called with `forkJoin([obs1, obs2, obs3], resultSelector)`\n        if (sources.length === 1 && isArray_1.isArray(sources[0])) {\n            sources = sources[0];\n        }\n        if (sources.length === 0) {\n            return new EmptyObservable_1.EmptyObservable();\n        }\n        return new ForkJoinObservable(sources, resultSelector);\n    };\n    ForkJoinObservable.prototype._subscribe = function (subscriber) {\n        return new ForkJoinSubscriber(subscriber, this.sources, this.resultSelector);\n    };\n    return ForkJoinObservable;\n}(Observable_1.Observable));\nexports.ForkJoinObservable = ForkJoinObservable;\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar ForkJoinSubscriber = (function (_super) {\n    __extends(ForkJoinSubscriber, _super);\n    function ForkJoinSubscriber(destination, sources, resultSelector) {\n        _super.call(this, destination);\n        this.sources = sources;\n        this.resultSelector = resultSelector;\n        this.completed = 0;\n        this.haveValues = 0;\n        var len = sources.length;\n        this.total = len;\n        this.values = new Array(len);\n        for (var i = 0; i < len; i++) {\n            var source = sources[i];\n            var innerSubscription = subscribeToResult_1.subscribeToResult(this, source, null, i);\n            if (innerSubscription) {\n                innerSubscription.outerIndex = i;\n                this.add(innerSubscription);\n            }\n        }\n    }\n    ForkJoinSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {\n        this.values[outerIndex] = innerValue;\n        if (!innerSub._hasValue) {\n            innerSub._hasValue = true;\n            this.haveValues++;\n        }\n    };\n    ForkJoinSubscriber.prototype.notifyComplete = function (innerSub) {\n        var destination = this.destination;\n        var _a = this, haveValues = _a.haveValues, resultSelector = _a.resultSelector, values = _a.values;\n        var len = values.length;\n        if (!innerSub._hasValue) {\n            destination.complete();\n            return;\n        }\n        this.completed++;\n        if (this.completed !== len) {\n            return;\n        }\n        if (haveValues === len) {\n            var value = resultSelector ? resultSelector.apply(this, values) : values;\n            destination.next(value);\n        }\n        destination.complete();\n    };\n    return ForkJoinSubscriber;\n}(OuterSubscriber_1.OuterSubscriber));\n//# sourceMappingURL=ForkJoinObservable.js.map\n\n/***/ },\n/* 855 */\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Observable_1 = __webpack_require__(14);\nvar tryCatch_1 = __webpack_require__(380);\nvar isFunction_1 = __webpack_require__(241);\nvar errorObject_1 = __webpack_require__(231);\nvar Subscription_1 = __webpack_require__(147);\nfunction isNodeStyleEventEmmitter(sourceObj) {\n    return !!sourceObj && typeof sourceObj.addListener === 'function' && typeof sourceObj.removeListener === 'function';\n}\nfunction isJQueryStyleEventEmitter(sourceObj) {\n    return !!sourceObj && typeof sourceObj.on === 'function' && typeof sourceObj.off === 'function';\n}\nfunction isNodeList(sourceObj) {\n    return !!sourceObj && sourceObj.toString() === '[object NodeList]';\n}\nfunction isHTMLCollection(sourceObj) {\n    return !!sourceObj && sourceObj.toString() === '[object HTMLCollection]';\n}\nfunction isEventTarget(sourceObj) {\n    return !!sourceObj && typeof sourceObj.addEventListener === 'function' && typeof sourceObj.removeEventListener === 'function';\n}\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @extends {Ignored}\n * @hide true\n */\nvar FromEventObservable = (function (_super) {\n    __extends(FromEventObservable, _super);\n    function FromEventObservable(sourceObj, eventName, selector, options) {\n        _super.call(this);\n        this.sourceObj = sourceObj;\n        this.eventName = eventName;\n        this.selector = selector;\n        this.options = options;\n    }\n    /* tslint:enable:max-line-length */\n    /**\n     * Creates an Observable that emits events of a specific type coming from the\n     * given event target.\n     *\n     * <span class=\"informal\">Creates an Observable from DOM events, or Node\n     * EventEmitter events or others.</span>\n     *\n     * <img src=\"./img/fromEvent.png\" width=\"100%\">\n     *\n     * Creates an Observable by attaching an event listener to an \"event target\",\n     * which may be an object with `addEventListener` and `removeEventListener`,\n     * a Node.js EventEmitter, a jQuery style EventEmitter, a NodeList from the\n     * DOM, or an HTMLCollection from the DOM. The event handler is attached when\n     * the output Observable is subscribed, and removed when the Subscription is\n     * unsubscribed.\n     *\n     * @example <caption>Emits clicks happening on the DOM document</caption>\n     * var clicks = Rx.Observable.fromEvent(document, 'click');\n     * clicks.subscribe(x => console.log(x));\n     *\n     * @see {@link from}\n     * @see {@link fromEventPattern}\n     *\n     * @param {EventTargetLike} target The DOMElement, event target, Node.js\n     * EventEmitter, NodeList or HTMLCollection to attach the event handler to.\n     * @param {string} eventName The event name of interest, being emitted by the\n     * `target`.\n     * @parm {EventListenerOptions} [options] Options to pass through to addEventListener\n     * @param {SelectorMethodSignature<T>} [selector] An optional function to\n     * post-process results. It takes the arguments from the event handler and\n     * should return a single value.\n     * @return {Observable<T>}\n     * @static true\n     * @name fromEvent\n     * @owner Observable\n     */\n    FromEventObservable.create = function (target, eventName, options, selector) {\n        if (isFunction_1.isFunction(options)) {\n            selector = options;\n            options = undefined;\n        }\n        return new FromEventObservable(target, eventName, selector, options);\n    };\n    FromEventObservable.setupSubscription = function (sourceObj, eventName, handler, subscriber, options) {\n        var unsubscribe;\n        if (isNodeList(sourceObj) || isHTMLCollection(sourceObj)) {\n            for (var i = 0, len = sourceObj.length; i < len; i++) {\n                FromEventObservable.setupSubscription(sourceObj[i], eventName, handler, subscriber, options);\n            }\n        }\n        else if (isEventTarget(sourceObj)) {\n            var source_1 = sourceObj;\n            sourceObj.addEventListener(eventName, handler, options);\n            unsubscribe = function () { return source_1.removeEventListener(eventName, handler); };\n        }\n        else if (isJQueryStyleEventEmitter(sourceObj)) {\n            var source_2 = sourceObj;\n            sourceObj.on(eventName, handler);\n            unsubscribe = function () { return source_2.off(eventName, handler); };\n        }\n        else if (isNodeStyleEventEmmitter(sourceObj)) {\n            var source_3 = sourceObj;\n            sourceObj.addListener(eventName, handler);\n            unsubscribe = function () { return source_3.removeListener(eventName, handler); };\n        }\n        subscriber.add(new Subscription_1.Subscription(unsubscribe));\n    };\n    FromEventObservable.prototype._subscribe = function (subscriber) {\n        var sourceObj = this.sourceObj;\n        var eventName = this.eventName;\n        var options = this.options;\n        var selector = this.selector;\n        var handler = selector ? function () {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i - 0] = arguments[_i];\n            }\n            var result = tryCatch_1.tryCatch(selector).apply(void 0, args);\n            if (result === errorObject_1.errorObject) {\n                subscriber.error(errorObject_1.errorObject.e);\n            }\n            else {\n                subscriber.next(result);\n            }\n        } : function (e) { return subscriber.next(e); };\n        FromEventObservable.setupSubscription(sourceObj, eventName, handler, subscriber, options);\n    };\n    return FromEventObservable;\n}(Observable_1.Observable));\nexports.FromEventObservable = FromEventObservable;\n//# sourceMappingURL=FromEventObservable.js.map\n\n/***/ },\n/* 856 */\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Observable_1 = __webpack_require__(14);\nvar Subscription_1 = __webpack_require__(147);\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @extends {Ignored}\n * @hide true\n */\nvar FromEventPatternObservable = (function (_super) {\n    __extends(FromEventPatternObservable, _super);\n    function FromEventPatternObservable(addHandler, removeHandler, selector) {\n        _super.call(this);\n        this.addHandler = addHandler;\n        this.removeHandler = removeHandler;\n        this.selector = selector;\n    }\n    /**\n     * Creates an Observable from an API based on addHandler/removeHandler\n     * functions.\n     *\n     * <span class=\"informal\">Converts any addHandler/removeHandler API to an\n     * Observable.</span>\n     *\n     * <img src=\"./img/fromEventPattern.png\" width=\"100%\">\n     *\n     * Creates an Observable by using the `addHandler` and `removeHandler`\n     * functions to add and remove the handlers, with an optional selector\n     * function to project the event arguments to a result. The `addHandler` is\n     * called when the output Observable is subscribed, and `removeHandler` is\n     * called when the Subscription is unsubscribed.\n     *\n     * @example <caption>Emits clicks happening on the DOM document</caption>\n     * function addClickHandler(handler) {\n     *   document.addEventListener('click', handler);\n     * }\n     *\n     * function removeClickHandler(handler) {\n     *   document.removeEventListener('click', handler);\n     * }\n     *\n     * var clicks = Rx.Observable.fromEventPattern(\n     *   addClickHandler,\n     *   removeClickHandler\n     * );\n     * clicks.subscribe(x => console.log(x));\n     *\n     * @see {@link from}\n     * @see {@link fromEvent}\n     *\n     * @param {function(handler: Function): any} addHandler A function that takes\n     * a `handler` function as argument and attaches it somehow to the actual\n     * source of events.\n     * @param {function(handler: Function): void} removeHandler A function that\n     * takes a `handler` function as argument and removes it in case it was\n     * previously attached using `addHandler`.\n     * @param {function(...args: any): T} [selector] An optional function to\n     * post-process results. It takes the arguments from the event handler and\n     * should return a single value.\n     * @return {Observable<T>}\n     * @static true\n     * @name fromEventPattern\n     * @owner Observable\n     */\n    FromEventPatternObservable.create = function (addHandler, removeHandler, selector) {\n        return new FromEventPatternObservable(addHandler, removeHandler, selector);\n    };\n    FromEventPatternObservable.prototype._subscribe = function (subscriber) {\n        var _this = this;\n        var removeHandler = this.removeHandler;\n        var handler = !!this.selector ? function () {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i - 0] = arguments[_i];\n            }\n            _this._callSelector(subscriber, args);\n        } : function (e) { subscriber.next(e); };\n        this._callAddHandler(handler, subscriber);\n        subscriber.add(new Subscription_1.Subscription(function () {\n            //TODO: determine whether or not to forward to error handler\n            removeHandler(handler);\n        }));\n    };\n    FromEventPatternObservable.prototype._callSelector = function (subscriber, args) {\n        try {\n            var result = this.selector.apply(this, args);\n            subscriber.next(result);\n        }\n        catch (e) {\n            subscriber.error(e);\n        }\n    };\n    FromEventPatternObservable.prototype._callAddHandler = function (handler, errorSubscriber) {\n        try {\n            this.addHandler(handler);\n        }\n        catch (e) {\n            errorSubscriber.error(e);\n        }\n    };\n    return FromEventPatternObservable;\n}(Observable_1.Observable));\nexports.FromEventPatternObservable = FromEventPatternObservable;\n//# sourceMappingURL=FromEventPatternObservable.js.map\n\n/***/ },\n/* 857 */\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Observable_1 = __webpack_require__(14);\nvar isScheduler_1 = __webpack_require__(381);\nvar selfSelector = function (value) { return value; };\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @extends {Ignored}\n * @hide true\n */\nvar GenerateObservable = (function (_super) {\n    __extends(GenerateObservable, _super);\n    function GenerateObservable(initialState, condition, iterate, resultSelector, scheduler) {\n        _super.call(this);\n        this.initialState = initialState;\n        this.condition = condition;\n        this.iterate = iterate;\n        this.resultSelector = resultSelector;\n        this.scheduler = scheduler;\n    }\n    GenerateObservable.create = function (initialStateOrOptions, condition, iterate, resultSelectorOrObservable, scheduler) {\n        if (arguments.length == 1) {\n            return new GenerateObservable(initialStateOrOptions.initialState, initialStateOrOptions.condition, initialStateOrOptions.iterate, initialStateOrOptions.resultSelector || selfSelector, initialStateOrOptions.scheduler);\n        }\n        if (resultSelectorOrObservable === undefined || isScheduler_1.isScheduler(resultSelectorOrObservable)) {\n            return new GenerateObservable(initialStateOrOptions, condition, iterate, selfSelector, resultSelectorOrObservable);\n        }\n        return new GenerateObservable(initialStateOrOptions, condition, iterate, resultSelectorOrObservable, scheduler);\n    };\n    GenerateObservable.prototype._subscribe = function (subscriber) {\n        var state = this.initialState;\n        if (this.scheduler) {\n            return this.scheduler.schedule(GenerateObservable.dispatch, 0, {\n                subscriber: subscriber,\n                iterate: this.iterate,\n                condition: this.condition,\n                resultSelector: this.resultSelector,\n                state: state });\n        }\n        var _a = this, condition = _a.condition, resultSelector = _a.resultSelector, iterate = _a.iterate;\n        do {\n            if (condition) {\n                var conditionResult = void 0;\n                try {\n                    conditionResult = condition(state);\n                }\n                catch (err) {\n                    subscriber.error(err);\n                    return;\n                }\n                if (!conditionResult) {\n                    subscriber.complete();\n                    break;\n                }\n            }\n            var value = void 0;\n            try {\n                value = resultSelector(state);\n            }\n            catch (err) {\n                subscriber.error(err);\n                return;\n            }\n            subscriber.next(value);\n            if (subscriber.closed) {\n                break;\n            }\n            try {\n                state = iterate(state);\n            }\n            catch (err) {\n                subscriber.error(err);\n                return;\n            }\n        } while (true);\n    };\n    GenerateObservable.dispatch = function (state) {\n        var subscriber = state.subscriber, condition = state.condition;\n        if (subscriber.closed) {\n            return;\n        }\n        if (state.needIterate) {\n            try {\n                state.state = state.iterate(state.state);\n            }\n            catch (err) {\n                subscriber.error(err);\n                return;\n            }\n        }\n        else {\n            state.needIterate = true;\n        }\n        if (condition) {\n            var conditionResult = void 0;\n            try {\n                conditionResult = condition(state.state);\n            }\n            catch (err) {\n                subscriber.error(err);\n                return;\n            }\n            if (!conditionResult) {\n                subscriber.complete();\n                return;\n            }\n            if (subscriber.closed) {\n                return;\n            }\n        }\n        var value;\n        try {\n            value = state.resultSelector(state.state);\n        }\n        catch (err) {\n            subscriber.error(err);\n            return;\n        }\n        if (subscriber.closed) {\n            return;\n        }\n        subscriber.next(value);\n        if (subscriber.closed) {\n            return;\n        }\n        return this.schedule(state);\n    };\n    return GenerateObservable;\n}(Observable_1.Observable));\nexports.GenerateObservable = GenerateObservable;\n//# sourceMappingURL=GenerateObservable.js.map\n\n/***/ },\n/* 858 */\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Observable_1 = __webpack_require__(14);\nvar subscribeToResult_1 = __webpack_require__(146);\nvar OuterSubscriber_1 = __webpack_require__(145);\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @extends {Ignored}\n * @hide true\n */\nvar IfObservable = (function (_super) {\n    __extends(IfObservable, _super);\n    function IfObservable(condition, thenSource, elseSource) {\n        _super.call(this);\n        this.condition = condition;\n        this.thenSource = thenSource;\n        this.elseSource = elseSource;\n    }\n    IfObservable.create = function (condition, thenSource, elseSource) {\n        return new IfObservable(condition, thenSource, elseSource);\n    };\n    IfObservable.prototype._subscribe = function (subscriber) {\n        var _a = this, condition = _a.condition, thenSource = _a.thenSource, elseSource = _a.elseSource;\n        return new IfSubscriber(subscriber, condition, thenSource, elseSource);\n    };\n    return IfObservable;\n}(Observable_1.Observable));\nexports.IfObservable = IfObservable;\nvar IfSubscriber = (function (_super) {\n    __extends(IfSubscriber, _super);\n    function IfSubscriber(destination, condition, thenSource, elseSource) {\n        _super.call(this, destination);\n        this.condition = condition;\n        this.thenSource = thenSource;\n        this.elseSource = elseSource;\n        this.tryIf();\n    }\n    IfSubscriber.prototype.tryIf = function () {\n        var _a = this, condition = _a.condition, thenSource = _a.thenSource, elseSource = _a.elseSource;\n        var result;\n        try {\n            result = condition();\n            var source = result ? thenSource : elseSource;\n            if (source) {\n                this.add(subscribeToResult_1.subscribeToResult(this, source));\n            }\n            else {\n                this._complete();\n            }\n        }\n        catch (err) {\n            this._error(err);\n        }\n    };\n    return IfSubscriber;\n}(OuterSubscriber_1.OuterSubscriber));\n//# sourceMappingURL=IfObservable.js.map\n\n/***/ },\n/* 859 */\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar isNumeric_1 = __webpack_require__(698);\nvar Observable_1 = __webpack_require__(14);\nvar async_1 = __webpack_require__(686);\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @extends {Ignored}\n * @hide true\n */\nvar IntervalObservable = (function (_super) {\n    __extends(IntervalObservable, _super);\n    function IntervalObservable(period, scheduler) {\n        if (period === void 0) { period = 0; }\n        if (scheduler === void 0) { scheduler = async_1.async; }\n        _super.call(this);\n        this.period = period;\n        this.scheduler = scheduler;\n        if (!isNumeric_1.isNumeric(period) || period < 0) {\n            this.period = 0;\n        }\n        if (!scheduler || typeof scheduler.schedule !== 'function') {\n            this.scheduler = async_1.async;\n        }\n    }\n    /**\n     * Creates an Observable that emits sequential numbers every specified\n     * interval of time, on a specified Scheduler.\n     *\n     * <span class=\"informal\">Emits incremental numbers periodically in time.\n     * </span>\n     *\n     * <img src=\"./img/interval.png\" width=\"100%\">\n     *\n     * `interval` returns an Observable that emits an infinite sequence of\n     * ascending integers, with a constant interval of time of your choosing\n     * between those emissions. The first emission is not sent immediately, but\n     * only after the first period has passed. By default, this operator uses the\n     * `async` Scheduler to provide a notion of time, but you may pass any\n     * Scheduler to it.\n     *\n     * @example <caption>Emits ascending numbers, one every second (1000ms)</caption>\n     * var numbers = Rx.Observable.interval(1000);\n     * numbers.subscribe(x => console.log(x));\n     *\n     * @see {@link timer}\n     * @see {@link delay}\n     *\n     * @param {number} [period=0] The interval size in milliseconds (by default)\n     * or the time unit determined by the scheduler's clock.\n     * @param {Scheduler} [scheduler=async] The Scheduler to use for scheduling\n     * the emission of values, and providing a notion of \"time\".\n     * @return {Observable} An Observable that emits a sequential number each time\n     * interval.\n     * @static true\n     * @name interval\n     * @owner Observable\n     */\n    IntervalObservable.create = function (period, scheduler) {\n        if (period === void 0) { period = 0; }\n        if (scheduler === void 0) { scheduler = async_1.async; }\n        return new IntervalObservable(period, scheduler);\n    };\n    IntervalObservable.dispatch = function (state) {\n        var index = state.index, subscriber = state.subscriber, period = state.period;\n        subscriber.next(index);\n        if (subscriber.closed) {\n            return;\n        }\n        state.index += 1;\n        this.schedule(state, period);\n    };\n    IntervalObservable.prototype._subscribe = function (subscriber) {\n        var index = 0;\n        var period = this.period;\n        var scheduler = this.scheduler;\n        subscriber.add(scheduler.schedule(IntervalObservable.dispatch, period, {\n            index: index, subscriber: subscriber, period: period\n        }));\n    };\n    return IntervalObservable;\n}(Observable_1.Observable));\nexports.IntervalObservable = IntervalObservable;\n//# sourceMappingURL=IntervalObservable.js.map\n\n/***/ },\n/* 860 */\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Observable_1 = __webpack_require__(14);\nvar noop_1 = __webpack_require__(717);\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @extends {Ignored}\n * @hide true\n */\nvar NeverObservable = (function (_super) {\n    __extends(NeverObservable, _super);\n    function NeverObservable() {\n        _super.call(this);\n    }\n    /**\n     * Creates an Observable that emits no items to the Observer.\n     *\n     * <span class=\"informal\">An Observable that never emits anything.</span>\n     *\n     * <img src=\"./img/never.png\" width=\"100%\">\n     *\n     * This static operator is useful for creating a simple Observable that emits\n     * neither values nor errors nor the completion notification. It can be used\n     * for testing purposes or for composing with other Observables. Please not\n     * that by never emitting a complete notification, this Observable keeps the\n     * subscription from being disposed automatically. Subscriptions need to be\n     * manually disposed.\n     *\n     * @example <caption>Emit the number 7, then never emit anything else (not even complete).</caption>\n     * function info() {\n     *   console.log('Will not be called');\n     * }\n     * var result = Rx.Observable.never().startWith(7);\n     * result.subscribe(x => console.log(x), info, info);\n     *\n     * @see {@link create}\n     * @see {@link empty}\n     * @see {@link of}\n     * @see {@link throw}\n     *\n     * @return {Observable} A \"never\" Observable: never emits anything.\n     * @static true\n     * @name never\n     * @owner Observable\n     */\n    NeverObservable.create = function () {\n        return new NeverObservable();\n    };\n    NeverObservable.prototype._subscribe = function (subscriber) {\n        noop_1.noop();\n    };\n    return NeverObservable;\n}(Observable_1.Observable));\nexports.NeverObservable = NeverObservable;\n//# sourceMappingURL=NeverObservable.js.map\n\n/***/ },\n/* 861 */\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Observable_1 = __webpack_require__(14);\nfunction dispatch(state) {\n    var obj = state.obj, keys = state.keys, length = state.length, index = state.index, subscriber = state.subscriber;\n    if (index === length) {\n        subscriber.complete();\n        return;\n    }\n    var key = keys[index];\n    subscriber.next([key, obj[key]]);\n    state.index = index + 1;\n    this.schedule(state);\n}\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @extends {Ignored}\n * @hide true\n */\nvar PairsObservable = (function (_super) {\n    __extends(PairsObservable, _super);\n    function PairsObservable(obj, scheduler) {\n        _super.call(this);\n        this.obj = obj;\n        this.scheduler = scheduler;\n        this.keys = Object.keys(obj);\n    }\n    /**\n     * Convert an object into an observable sequence of [key, value] pairs\n     * using an optional Scheduler to enumerate the object.\n     *\n     * @example <caption>Converts a javascript object to an Observable</caption>\n     * var obj = {\n     *   foo: 42,\n     *   bar: 56,\n     *   baz: 78\n     * };\n     *\n     * var source = Rx.Observable.pairs(obj);\n     *\n     * var subscription = source.subscribe(\n     *   function (x) {\n     *     console.log('Next: %s', x);\n     *   },\n     *   function (err) {\n     *     console.log('Error: %s', err);\n     *   },\n     *   function () {\n     *     console.log('Completed');\n     *   });\n     *\n     * @param {Object} obj The object to inspect and turn into an\n     * Observable sequence.\n     * @param {Scheduler} [scheduler] An optional Scheduler to run the\n     * enumeration of the input sequence on.\n     * @returns {(Observable<Array<string | T>>)} An observable sequence of\n     * [key, value] pairs from the object.\n     */\n    PairsObservable.create = function (obj, scheduler) {\n        return new PairsObservable(obj, scheduler);\n    };\n    PairsObservable.prototype._subscribe = function (subscriber) {\n        var _a = this, keys = _a.keys, scheduler = _a.scheduler;\n        var length = keys.length;\n        if (scheduler) {\n            return scheduler.schedule(dispatch, 0, {\n                obj: this.obj, keys: keys, length: length, index: 0, subscriber: subscriber\n            });\n        }\n        else {\n            for (var idx = 0; idx < length; idx++) {\n                var key = keys[idx];\n                subscriber.next([key, this.obj[key]]);\n            }\n            subscriber.complete();\n        }\n    };\n    return PairsObservable;\n}(Observable_1.Observable));\nexports.PairsObservable = PairsObservable;\n//# sourceMappingURL=PairsObservable.js.map\n\n/***/ },\n/* 862 */\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Observable_1 = __webpack_require__(14);\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @extends {Ignored}\n * @hide true\n */\nvar RangeObservable = (function (_super) {\n    __extends(RangeObservable, _super);\n    function RangeObservable(start, count, scheduler) {\n        _super.call(this);\n        this.start = start;\n        this._count = count;\n        this.scheduler = scheduler;\n    }\n    /**\n     * Creates an Observable that emits a sequence of numbers within a specified\n     * range.\n     *\n     * <span class=\"informal\">Emits a sequence of numbers in a range.</span>\n     *\n     * <img src=\"./img/range.png\" width=\"100%\">\n     *\n     * `range` operator emits a range of sequential integers, in order, where you\n     * select the `start` of the range and its `length`. By default, uses no\n     * Scheduler and just delivers the notifications synchronously, but may use\n     * an optional Scheduler to regulate those deliveries.\n     *\n     * @example <caption>Emits the numbers 1 to 10</caption>\n     * var numbers = Rx.Observable.range(1, 10);\n     * numbers.subscribe(x => console.log(x));\n     *\n     * @see {@link timer}\n     * @see {@link interval}\n     *\n     * @param {number} [start=0] The value of the first integer in the sequence.\n     * @param {number} [count=0] The number of sequential integers to generate.\n     * @param {Scheduler} [scheduler] A {@link Scheduler} to use for scheduling\n     * the emissions of the notifications.\n     * @return {Observable} An Observable of numbers that emits a finite range of\n     * sequential integers.\n     * @static true\n     * @name range\n     * @owner Observable\n     */\n    RangeObservable.create = function (start, count, scheduler) {\n        if (start === void 0) { start = 0; }\n        if (count === void 0) { count = 0; }\n        return new RangeObservable(start, count, scheduler);\n    };\n    RangeObservable.dispatch = function (state) {\n        var start = state.start, index = state.index, count = state.count, subscriber = state.subscriber;\n        if (index >= count) {\n            subscriber.complete();\n            return;\n        }\n        subscriber.next(start);\n        if (subscriber.closed) {\n            return;\n        }\n        state.index = index + 1;\n        state.start = start + 1;\n        this.schedule(state);\n    };\n    RangeObservable.prototype._subscribe = function (subscriber) {\n        var index = 0;\n        var start = this.start;\n        var count = this._count;\n        var scheduler = this.scheduler;\n        if (scheduler) {\n            return scheduler.schedule(RangeObservable.dispatch, 0, {\n                index: index, count: count, start: start, subscriber: subscriber\n            });\n        }\n        else {\n            do {\n                if (index++ >= count) {\n                    subscriber.complete();\n                    break;\n                }\n                subscriber.next(start++);\n                if (subscriber.closed) {\n                    break;\n                }\n            } while (true);\n        }\n    };\n    return RangeObservable;\n}(Observable_1.Observable));\nexports.RangeObservable = RangeObservable;\n//# sourceMappingURL=RangeObservable.js.map\n\n/***/ },\n/* 863 */\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Observable_1 = __webpack_require__(14);\nvar asap_1 = __webpack_require__(712);\nvar isNumeric_1 = __webpack_require__(698);\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @extends {Ignored}\n * @hide true\n */\nvar SubscribeOnObservable = (function (_super) {\n    __extends(SubscribeOnObservable, _super);\n    function SubscribeOnObservable(source, delayTime, scheduler) {\n        if (delayTime === void 0) { delayTime = 0; }\n        if (scheduler === void 0) { scheduler = asap_1.asap; }\n        _super.call(this);\n        this.source = source;\n        this.delayTime = delayTime;\n        this.scheduler = scheduler;\n        if (!isNumeric_1.isNumeric(delayTime) || delayTime < 0) {\n            this.delayTime = 0;\n        }\n        if (!scheduler || typeof scheduler.schedule !== 'function') {\n            this.scheduler = asap_1.asap;\n        }\n    }\n    SubscribeOnObservable.create = function (source, delay, scheduler) {\n        if (delay === void 0) { delay = 0; }\n        if (scheduler === void 0) { scheduler = asap_1.asap; }\n        return new SubscribeOnObservable(source, delay, scheduler);\n    };\n    SubscribeOnObservable.dispatch = function (arg) {\n        var source = arg.source, subscriber = arg.subscriber;\n        return source.subscribe(subscriber);\n    };\n    SubscribeOnObservable.prototype._subscribe = function (subscriber) {\n        var delay = this.delayTime;\n        var source = this.source;\n        var scheduler = this.scheduler;\n        return scheduler.schedule(SubscribeOnObservable.dispatch, delay, {\n            source: source, subscriber: subscriber\n        });\n    };\n    return SubscribeOnObservable;\n}(Observable_1.Observable));\nexports.SubscribeOnObservable = SubscribeOnObservable;\n//# sourceMappingURL=SubscribeOnObservable.js.map\n\n/***/ },\n/* 864 */\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar isNumeric_1 = __webpack_require__(698);\nvar Observable_1 = __webpack_require__(14);\nvar async_1 = __webpack_require__(686);\nvar isScheduler_1 = __webpack_require__(381);\nvar isDate_1 = __webpack_require__(693);\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @extends {Ignored}\n * @hide true\n */\nvar TimerObservable = (function (_super) {\n    __extends(TimerObservable, _super);\n    function TimerObservable(dueTime, period, scheduler) {\n        if (dueTime === void 0) { dueTime = 0; }\n        _super.call(this);\n        this.period = -1;\n        this.dueTime = 0;\n        if (isNumeric_1.isNumeric(period)) {\n            this.period = Number(period) < 1 && 1 || Number(period);\n        }\n        else if (isScheduler_1.isScheduler(period)) {\n            scheduler = period;\n        }\n        if (!isScheduler_1.isScheduler(scheduler)) {\n            scheduler = async_1.async;\n        }\n        this.scheduler = scheduler;\n        this.dueTime = isDate_1.isDate(dueTime) ?\n            (+dueTime - this.scheduler.now()) :\n            dueTime;\n    }\n    /**\n     * Creates an Observable that starts emitting after an `initialDelay` and\n     * emits ever increasing numbers after each `period` of time thereafter.\n     *\n     * <span class=\"informal\">Its like {@link interval}, but you can specify when\n     * should the emissions start.</span>\n     *\n     * <img src=\"./img/timer.png\" width=\"100%\">\n     *\n     * `timer` returns an Observable that emits an infinite sequence of ascending\n     * integers, with a constant interval of time, `period` of your choosing\n     * between those emissions. The first emission happens after the specified\n     * `initialDelay`. The initial delay may be a {@link Date}. By default, this\n     * operator uses the `async` Scheduler to provide a notion of time, but you\n     * may pass any Scheduler to it. If `period` is not specified, the output\n     * Observable emits only one value, `0`. Otherwise, it emits an infinite\n     * sequence.\n     *\n     * @example <caption>Emits ascending numbers, one every second (1000ms), starting after 3 seconds</caption>\n     * var numbers = Rx.Observable.timer(3000, 1000);\n     * numbers.subscribe(x => console.log(x));\n     *\n     * @example <caption>Emits one number after five seconds</caption>\n     * var numbers = Rx.Observable.timer(5000);\n     * numbers.subscribe(x => console.log(x));\n     *\n     * @see {@link interval}\n     * @see {@link delay}\n     *\n     * @param {number|Date} initialDelay The initial delay time to wait before\n     * emitting the first value of `0`.\n     * @param {number} [period] The period of time between emissions of the\n     * subsequent numbers.\n     * @param {Scheduler} [scheduler=async] The Scheduler to use for scheduling\n     * the emission of values, and providing a notion of \"time\".\n     * @return {Observable} An Observable that emits a `0` after the\n     * `initialDelay` and ever increasing numbers after each `period` of time\n     * thereafter.\n     * @static true\n     * @name timer\n     * @owner Observable\n     */\n    TimerObservable.create = function (initialDelay, period, scheduler) {\n        if (initialDelay === void 0) { initialDelay = 0; }\n        return new TimerObservable(initialDelay, period, scheduler);\n    };\n    TimerObservable.dispatch = function (state) {\n        var index = state.index, period = state.period, subscriber = state.subscriber;\n        var action = this;\n        subscriber.next(index);\n        if (subscriber.closed) {\n            return;\n        }\n        else if (period === -1) {\n            return subscriber.complete();\n        }\n        state.index = index + 1;\n        action.schedule(state, period);\n    };\n    TimerObservable.prototype._subscribe = function (subscriber) {\n        var index = 0;\n        var _a = this, period = _a.period, dueTime = _a.dueTime, scheduler = _a.scheduler;\n        return scheduler.schedule(TimerObservable.dispatch, dueTime, {\n            index: index, period: period, subscriber: subscriber\n        });\n    };\n    return TimerObservable;\n}(Observable_1.Observable));\nexports.TimerObservable = TimerObservable;\n//# sourceMappingURL=TimerObservable.js.map\n\n/***/ },\n/* 865 */\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Observable_1 = __webpack_require__(14);\nvar subscribeToResult_1 = __webpack_require__(146);\nvar OuterSubscriber_1 = __webpack_require__(145);\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @extends {Ignored}\n * @hide true\n */\nvar UsingObservable = (function (_super) {\n    __extends(UsingObservable, _super);\n    function UsingObservable(resourceFactory, observableFactory) {\n        _super.call(this);\n        this.resourceFactory = resourceFactory;\n        this.observableFactory = observableFactory;\n    }\n    UsingObservable.create = function (resourceFactory, observableFactory) {\n        return new UsingObservable(resourceFactory, observableFactory);\n    };\n    UsingObservable.prototype._subscribe = function (subscriber) {\n        var _a = this, resourceFactory = _a.resourceFactory, observableFactory = _a.observableFactory;\n        var resource;\n        try {\n            resource = resourceFactory();\n            return new UsingSubscriber(subscriber, resource, observableFactory);\n        }\n        catch (err) {\n            subscriber.error(err);\n        }\n    };\n    return UsingObservable;\n}(Observable_1.Observable));\nexports.UsingObservable = UsingObservable;\nvar UsingSubscriber = (function (_super) {\n    __extends(UsingSubscriber, _super);\n    function UsingSubscriber(destination, resource, observableFactory) {\n        _super.call(this, destination);\n        this.resource = resource;\n        this.observableFactory = observableFactory;\n        destination.add(resource);\n        this.tryUse();\n    }\n    UsingSubscriber.prototype.tryUse = function () {\n        try {\n            var source = this.observableFactory.call(this, this.resource);\n            if (source) {\n                this.add(subscribeToResult_1.subscribeToResult(this, source));\n            }\n        }\n        catch (err) {\n            this._error(err);\n        }\n    };\n    return UsingSubscriber;\n}(OuterSubscriber_1.OuterSubscriber));\n//# sourceMappingURL=UsingObservable.js.map\n\n/***/ },\n/* 866 */\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\"use strict\";\nvar BoundCallbackObservable_1 = __webpack_require__(850);\nexports.bindCallback = BoundCallbackObservable_1.BoundCallbackObservable.create;\n//# sourceMappingURL=bindCallback.js.map\n\n/***/ },\n/* 867 */\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\"use strict\";\nvar BoundNodeCallbackObservable_1 = __webpack_require__(851);\nexports.bindNodeCallback = BoundNodeCallbackObservable_1.BoundNodeCallbackObservable.create;\n//# sourceMappingURL=bindNodeCallback.js.map\n\n/***/ },\n/* 868 */\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\"use strict\";\nvar isScheduler_1 = __webpack_require__(381);\nvar isArray_1 = __webpack_require__(148);\nvar ArrayObservable_1 = __webpack_require__(232);\nvar combineLatest_1 = __webpack_require__(695);\n/* tslint:enable:max-line-length */\n/**\n * Combines multiple Observables to create an Observable whose values are\n * calculated from the latest values of each of its input Observables.\n *\n * <span class=\"informal\">Whenever any input Observable emits a value, it\n * computes a formula using the latest values from all the inputs, then emits\n * the output of that formula.</span>\n *\n * <img src=\"./img/combineLatest.png\" width=\"100%\">\n *\n * `combineLatest` combines the values from all the Observables passed as\n * arguments. This is done by subscribing to each Observable, in order, and\n * collecting an array of each of the most recent values any time any of the\n * input Observables emits, then either taking that array and passing it as\n * arguments to an optional `project` function and emitting the return value of\n * that, or just emitting the array of recent values directly if there is no\n * `project` function.\n *\n * @example <caption>Dynamically calculate the Body-Mass Index from an Observable of weight and one for height</caption>\n * var weight = Rx.Observable.of(70, 72, 76, 79, 75);\n * var height = Rx.Observable.of(1.76, 1.77, 1.78);\n * var bmi = Rx.Observable.combineLatest(weight, height, (w, h) => w / (h * h));\n * bmi.subscribe(x => console.log('BMI is ' + x));\n *\n * @see {@link combineAll}\n * @see {@link merge}\n * @see {@link withLatestFrom}\n *\n * @param {Observable} observable1 An input Observable to combine with the\n * source Observable.\n * @param {Observable} observable2 An input Observable to combine with the\n * source Observable. More than one input Observables may be given as argument.\n * @param {function} [project] An optional function to project the values from\n * the combined latest values into a new value on the output Observable.\n * @param {Scheduler} [scheduler=null] The Scheduler to use for subscribing to\n * each input Observable.\n * @return {Observable} An Observable of projected values from the most recent\n * values from each input Observable, or an array of the most recent values from\n * each input Observable.\n * @static true\n * @name combineLatest\n * @owner Observable\n */\nfunction combineLatest() {\n    var observables = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        observables[_i - 0] = arguments[_i];\n    }\n    var project = null;\n    var scheduler = null;\n    if (isScheduler_1.isScheduler(observables[observables.length - 1])) {\n        scheduler = observables.pop();\n    }\n    if (typeof observables[observables.length - 1] === 'function') {\n        project = observables.pop();\n    }\n    // if the first and only other argument besides the resultSelector is an array\n    // assume it's been called with `combineLatest([obs1, obs2, obs3], project)`\n    if (observables.length === 1 && isArray_1.isArray(observables[0])) {\n        observables = observables[0];\n    }\n    return new ArrayObservable_1.ArrayObservable(observables, scheduler).lift(new combineLatest_1.CombineLatestOperator(project));\n}\nexports.combineLatest = combineLatest;\n//# sourceMappingURL=combineLatest.js.map\n\n/***/ },\n/* 869 */\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\"use strict\";\nvar concat_1 = __webpack_require__(696);\nexports.concat = concat_1.concatStatic;\n//# sourceMappingURL=concat.js.map\n\n/***/ },\n/* 870 */\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\"use strict\";\nvar DeferObservable_1 = __webpack_require__(852);\nexports.defer = DeferObservable_1.DeferObservable.create;\n//# sourceMappingURL=defer.js.map\n\n/***/ },\n/* 871 */\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Subject_1 = __webpack_require__(66);\nvar Subscriber_1 = __webpack_require__(26);\nvar Observable_1 = __webpack_require__(14);\nvar Subscription_1 = __webpack_require__(147);\nvar root_1 = __webpack_require__(50);\nvar ReplaySubject_1 = __webpack_require__(691);\nvar tryCatch_1 = __webpack_require__(380);\nvar errorObject_1 = __webpack_require__(231);\nvar assign_1 = __webpack_require__(980);\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @extends {Ignored}\n * @hide true\n */\nvar WebSocketSubject = (function (_super) {\n    __extends(WebSocketSubject, _super);\n    function WebSocketSubject(urlConfigOrSource, destination) {\n        if (urlConfigOrSource instanceof Observable_1.Observable) {\n            _super.call(this, destination, urlConfigOrSource);\n        }\n        else {\n            _super.call(this);\n            this.WebSocketCtor = root_1.root.WebSocket;\n            this._output = new Subject_1.Subject();\n            if (typeof urlConfigOrSource === 'string') {\n                this.url = urlConfigOrSource;\n            }\n            else {\n                // WARNING: config object could override important members here.\n                assign_1.assign(this, urlConfigOrSource);\n            }\n            if (!this.WebSocketCtor) {\n                throw new Error('no WebSocket constructor can be found');\n            }\n            this.destination = new ReplaySubject_1.ReplaySubject();\n        }\n    }\n    WebSocketSubject.prototype.resultSelector = function (e) {\n        return JSON.parse(e.data);\n    };\n    /**\n     * @param urlConfigOrSource\n     * @return {WebSocketSubject}\n     * @static true\n     * @name webSocket\n     * @owner Observable\n     */\n    WebSocketSubject.create = function (urlConfigOrSource) {\n        return new WebSocketSubject(urlConfigOrSource);\n    };\n    WebSocketSubject.prototype.lift = function (operator) {\n        var sock = new WebSocketSubject(this, this.destination);\n        sock.operator = operator;\n        return sock;\n    };\n    // TODO: factor this out to be a proper Operator/Subscriber implementation and eliminate closures\n    WebSocketSubject.prototype.multiplex = function (subMsg, unsubMsg, messageFilter) {\n        var self = this;\n        return new Observable_1.Observable(function (observer) {\n            var result = tryCatch_1.tryCatch(subMsg)();\n            if (result === errorObject_1.errorObject) {\n                observer.error(errorObject_1.errorObject.e);\n            }\n            else {\n                self.next(result);\n            }\n            var subscription = self.subscribe(function (x) {\n                var result = tryCatch_1.tryCatch(messageFilter)(x);\n                if (result === errorObject_1.errorObject) {\n                    observer.error(errorObject_1.errorObject.e);\n                }\n                else if (result) {\n                    observer.next(x);\n                }\n            }, function (err) { return observer.error(err); }, function () { return observer.complete(); });\n            return function () {\n                var result = tryCatch_1.tryCatch(unsubMsg)();\n                if (result === errorObject_1.errorObject) {\n                    observer.error(errorObject_1.errorObject.e);\n                }\n                else {\n                    self.next(result);\n                }\n                subscription.unsubscribe();\n            };\n        });\n    };\n    WebSocketSubject.prototype._connectSocket = function () {\n        var _this = this;\n        var WebSocketCtor = this.WebSocketCtor;\n        var observer = this._output;\n        var socket = null;\n        try {\n            socket = this.protocol ?\n                new WebSocketCtor(this.url, this.protocol) :\n                new WebSocketCtor(this.url);\n            this.socket = socket;\n        }\n        catch (e) {\n            observer.error(e);\n            return;\n        }\n        var subscription = new Subscription_1.Subscription(function () {\n            _this.socket = null;\n            if (socket && socket.readyState === 1) {\n                socket.close();\n            }\n        });\n        socket.onopen = function (e) {\n            var openObserver = _this.openObserver;\n            if (openObserver) {\n                openObserver.next(e);\n            }\n            var queue = _this.destination;\n            _this.destination = Subscriber_1.Subscriber.create(function (x) { return socket.readyState === 1 && socket.send(x); }, function (e) {\n                var closingObserver = _this.closingObserver;\n                if (closingObserver) {\n                    closingObserver.next(undefined);\n                }\n                if (e && e.code) {\n                    socket.close(e.code, e.reason);\n                }\n                else {\n                    observer.error(new TypeError('WebSocketSubject.error must be called with an object with an error code, ' +\n                        'and an optional reason: { code: number, reason: string }'));\n                }\n                _this.destination = new ReplaySubject_1.ReplaySubject();\n                _this.socket = null;\n            }, function () {\n                var closingObserver = _this.closingObserver;\n                if (closingObserver) {\n                    closingObserver.next(undefined);\n                }\n                socket.close();\n                _this.destination = new ReplaySubject_1.ReplaySubject();\n                _this.socket = null;\n            });\n            if (queue && queue instanceof ReplaySubject_1.ReplaySubject) {\n                subscription.add(queue.subscribe(_this.destination));\n            }\n        };\n        socket.onerror = function (e) { return observer.error(e); };\n        socket.onclose = function (e) {\n            var closeObserver = _this.closeObserver;\n            if (closeObserver) {\n                closeObserver.next(e);\n            }\n            if (e.wasClean) {\n                observer.complete();\n            }\n            else {\n                observer.error(e);\n            }\n        };\n        socket.onmessage = function (e) {\n            var result = tryCatch_1.tryCatch(_this.resultSelector)(e);\n            if (result === errorObject_1.errorObject) {\n                observer.error(errorObject_1.errorObject.e);\n            }\n            else {\n                observer.next(result);\n            }\n        };\n    };\n    WebSocketSubject.prototype._subscribe = function (subscriber) {\n        var _this = this;\n        var source = this.source;\n        if (source) {\n            return source.subscribe(subscriber);\n        }\n        if (!this.socket) {\n            this._connectSocket();\n        }\n        var subscription = new Subscription_1.Subscription();\n        subscription.add(this._output.subscribe(subscriber));\n        subscription.add(function () {\n            var socket = _this.socket;\n            if (_this._output.observers.length === 0 && socket && socket.readyState === 1) {\n                socket.close();\n                _this.socket = null;\n            }\n        });\n        return subscription;\n    };\n    WebSocketSubject.prototype.unsubscribe = function () {\n        var _a = this, source = _a.source, socket = _a.socket;\n        if (socket && socket.readyState === 1) {\n            socket.close();\n            this.socket = null;\n        }\n        _super.prototype.unsubscribe.call(this);\n        if (!source) {\n            this.destination = new ReplaySubject_1.ReplaySubject();\n        }\n    };\n    return WebSocketSubject;\n}(Subject_1.AnonymousSubject));\nexports.WebSocketSubject = WebSocketSubject;\n//# sourceMappingURL=WebSocketSubject.js.map\n\n/***/ },\n/* 872 */\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\"use strict\";\nvar AjaxObservable_1 = __webpack_require__(701);\nexports.ajax = AjaxObservable_1.AjaxObservable.create;\n//# sourceMappingURL=ajax.js.map\n\n/***/ },\n/* 873 */\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\"use strict\";\nvar WebSocketSubject_1 = __webpack_require__(871);\nexports.webSocket = WebSocketSubject_1.WebSocketSubject.create;\n//# sourceMappingURL=webSocket.js.map\n\n/***/ },\n/* 874 */\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\"use strict\";\nvar EmptyObservable_1 = __webpack_require__(233);\nexports.empty = EmptyObservable_1.EmptyObservable.create;\n//# sourceMappingURL=empty.js.map\n\n/***/ },\n/* 875 */\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\"use strict\";\nvar ForkJoinObservable_1 = __webpack_require__(854);\nexports.forkJoin = ForkJoinObservable_1.ForkJoinObservable.create;\n//# sourceMappingURL=forkJoin.js.map\n\n/***/ },\n/* 876 */\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\"use strict\";\nvar FromEventObservable_1 = __webpack_require__(855);\nexports.fromEvent = FromEventObservable_1.FromEventObservable.create;\n//# sourceMappingURL=fromEvent.js.map\n\n/***/ },\n/* 877 */\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\"use strict\";\nvar FromEventPatternObservable_1 = __webpack_require__(856);\nexports.fromEventPattern = FromEventPatternObservable_1.FromEventPatternObservable.create;\n//# sourceMappingURL=fromEventPattern.js.map\n\n/***/ },\n/* 878 */\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\"use strict\";\nvar IfObservable_1 = __webpack_require__(858);\nexports._if = IfObservable_1.IfObservable.create;\n//# sourceMappingURL=if.js.map\n\n/***/ },\n/* 879 */\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\"use strict\";\nvar IntervalObservable_1 = __webpack_require__(859);\nexports.interval = IntervalObservable_1.IntervalObservable.create;\n//# sourceMappingURL=interval.js.map\n\n/***/ },\n/* 880 */\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\"use strict\";\nvar merge_1 = __webpack_require__(705);\nexports.merge = merge_1.mergeStatic;\n//# sourceMappingURL=merge.js.map\n\n/***/ },\n/* 881 */\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\"use strict\";\nvar NeverObservable_1 = __webpack_require__(860);\nexports.never = NeverObservable_1.NeverObservable.create;\n//# sourceMappingURL=never.js.map\n\n/***/ },\n/* 882 */\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\"use strict\";\nvar PairsObservable_1 = __webpack_require__(861);\nexports.pairs = PairsObservable_1.PairsObservable.create;\n//# sourceMappingURL=pairs.js.map\n\n/***/ },\n/* 883 */\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\"use strict\";\nvar RangeObservable_1 = __webpack_require__(862);\nexports.range = RangeObservable_1.RangeObservable.create;\n//# sourceMappingURL=range.js.map\n\n/***/ },\n/* 884 */\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\"use strict\";\nvar ErrorObservable_1 = __webpack_require__(853);\nexports._throw = ErrorObservable_1.ErrorObservable.create;\n//# sourceMappingURL=throw.js.map\n\n/***/ },\n/* 885 */\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\"use strict\";\nvar TimerObservable_1 = __webpack_require__(864);\nexports.timer = TimerObservable_1.TimerObservable.create;\n//# sourceMappingURL=timer.js.map\n\n/***/ },\n/* 886 */\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\"use strict\";\nvar UsingObservable_1 = __webpack_require__(865);\nexports.using = UsingObservable_1.UsingObservable.create;\n//# sourceMappingURL=using.js.map\n\n/***/ },\n/* 887 */\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\"use strict\";\nvar zip_1 = __webpack_require__(697);\nexports.zip = zip_1.zipStatic;\n//# sourceMappingURL=zip.js.map\n\n/***/ },\n/* 888 */\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar tryCatch_1 = __webpack_require__(380);\nvar errorObject_1 = __webpack_require__(231);\nvar OuterSubscriber_1 = __webpack_require__(145);\nvar subscribeToResult_1 = __webpack_require__(146);\n/**\n * Ignores source values for a duration determined by another Observable, then\n * emits the most recent value from the source Observable, then repeats this\n * process.\n *\n * <span class=\"informal\">It's like {@link auditTime}, but the silencing\n * duration is determined by a second Observable.</span>\n *\n * <img src=\"./img/audit.png\" width=\"100%\">\n *\n * `audit` is similar to `throttle`, but emits the last value from the silenced\n * time window, instead of the first value. `audit` emits the most recent value\n * from the source Observable on the output Observable as soon as its internal\n * timer becomes disabled, and ignores source values while the timer is enabled.\n * Initially, the timer is disabled. As soon as the first source value arrives,\n * the timer is enabled by calling the `durationSelector` function with the\n * source value, which returns the \"duration\" Observable. When the duration\n * Observable emits a value or completes, the timer is disabled, then the most\n * recent source value is emitted on the output Observable, and this process\n * repeats for the next source value.\n *\n * @example <caption>Emit clicks at a rate of at most one click per second</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.audit(ev => Rx.Observable.interval(1000));\n * result.subscribe(x => console.log(x));\n *\n * @see {@link auditTime}\n * @see {@link debounce}\n * @see {@link delayWhen}\n * @see {@link sample}\n * @see {@link throttle}\n *\n * @param {function(value: T): Observable|Promise} durationSelector A function\n * that receives a value from the source Observable, for computing the silencing\n * duration, returned as an Observable or a Promise.\n * @return {Observable<T>} An Observable that performs rate-limiting of\n * emissions from the source Observable.\n * @method audit\n * @owner Observable\n */\nfunction audit(durationSelector) {\n    return this.lift(new AuditOperator(durationSelector));\n}\nexports.audit = audit;\nvar AuditOperator = (function () {\n    function AuditOperator(durationSelector) {\n        this.durationSelector = durationSelector;\n    }\n    AuditOperator.prototype.call = function (subscriber, source) {\n        return source._subscribe(new AuditSubscriber(subscriber, this.durationSelector));\n    };\n    return AuditOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar AuditSubscriber = (function (_super) {\n    __extends(AuditSubscriber, _super);\n    function AuditSubscriber(destination, durationSelector) {\n        _super.call(this, destination);\n        this.durationSelector = durationSelector;\n        this.hasValue = false;\n    }\n    AuditSubscriber.prototype._next = function (value) {\n        this.value = value;\n        this.hasValue = true;\n        if (!this.throttled) {\n            var duration = tryCatch_1.tryCatch(this.durationSelector)(value);\n            if (duration === errorObject_1.errorObject) {\n                this.destination.error(errorObject_1.errorObject.e);\n            }\n            else {\n                this.add(this.throttled = subscribeToResult_1.subscribeToResult(this, duration));\n            }\n        }\n    };\n    AuditSubscriber.prototype.clearThrottle = function () {\n        var _a = this, value = _a.value, hasValue = _a.hasValue, throttled = _a.throttled;\n        if (throttled) {\n            this.remove(throttled);\n            this.throttled = null;\n            throttled.unsubscribe();\n        }\n        if (hasValue) {\n            this.value = null;\n            this.hasValue = false;\n            this.destination.next(value);\n        }\n    };\n    AuditSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex) {\n        this.clearThrottle();\n    };\n    AuditSubscriber.prototype.notifyComplete = function () {\n        this.clearThrottle();\n    };\n    return AuditSubscriber;\n}(OuterSubscriber_1.OuterSubscriber));\n//# sourceMappingURL=audit.js.map\n\n/***/ },\n/* 889 */\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar async_1 = __webpack_require__(686);\nvar Subscriber_1 = __webpack_require__(26);\n/**\n * Ignores source values for `duration` milliseconds, then emits the most recent\n * value from the source Observable, then repeats this process.\n *\n * <span class=\"informal\">When it sees a source values, it ignores that plus\n * the next ones for `duration` milliseconds, and then it emits the most recent\n * value from the source.</span>\n *\n * <img src=\"./img/auditTime.png\" width=\"100%\">\n *\n * `auditTime` is similar to `throttleTime`, but emits the last value from the\n * silenced time window, instead of the first value. `auditTime` emits the most\n * recent value from the source Observable on the output Observable as soon as\n * its internal timer becomes disabled, and ignores source values while the\n * timer is enabled. Initially, the timer is disabled. As soon as the first\n * source value arrives, the timer is enabled. After `duration` milliseconds (or\n * the time unit determined internally by the optional `scheduler`) has passed,\n * the timer is disabled, then the most recent source value is emitted on the\n * output Observable, and this process repeats for the next source value.\n * Optionally takes a {@link Scheduler} for managing timers.\n *\n * @example <caption>Emit clicks at a rate of at most one click per second</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.auditTime(1000);\n * result.subscribe(x => console.log(x));\n *\n * @see {@link audit}\n * @see {@link debounceTime}\n * @see {@link delay}\n * @see {@link sampleTime}\n * @see {@link throttleTime}\n *\n * @param {number} duration Time to wait before emitting the most recent source\n * value, measured in milliseconds or the time unit determined internally\n * by the optional `scheduler`.\n * @param {Scheduler} [scheduler=async] The {@link Scheduler} to use for\n * managing the timers that handle the rate-limiting behavior.\n * @return {Observable<T>} An Observable that performs rate-limiting of\n * emissions from the source Observable.\n * @method auditTime\n * @owner Observable\n */\nfunction auditTime(duration, scheduler) {\n    if (scheduler === void 0) { scheduler = async_1.async; }\n    return this.lift(new AuditTimeOperator(duration, scheduler));\n}\nexports.auditTime = auditTime;\nvar AuditTimeOperator = (function () {\n    function AuditTimeOperator(duration, scheduler) {\n        this.duration = duration;\n        this.scheduler = scheduler;\n    }\n    AuditTimeOperator.prototype.call = function (subscriber, source) {\n        return source._subscribe(new AuditTimeSubscriber(subscriber, this.duration, this.scheduler));\n    };\n    return AuditTimeOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar AuditTimeSubscriber = (function (_super) {\n    __extends(AuditTimeSubscriber, _super);\n    function AuditTimeSubscriber(destination, duration, scheduler) {\n        _super.call(this, destination);\n        this.duration = duration;\n        this.scheduler = scheduler;\n        this.hasValue = false;\n    }\n    AuditTimeSubscriber.prototype._next = function (value) {\n        this.value = value;\n        this.hasValue = true;\n        if (!this.throttled) {\n            this.add(this.throttled = this.scheduler.schedule(dispatchNext, this.duration, this));\n        }\n    };\n    AuditTimeSubscriber.prototype.clearThrottle = function () {\n        var _a = this, value = _a.value, hasValue = _a.hasValue, throttled = _a.throttled;\n        if (throttled) {\n            this.remove(throttled);\n            this.throttled = null;\n            throttled.unsubscribe();\n        }\n        if (hasValue) {\n            this.value = null;\n            this.hasValue = false;\n            this.destination.next(value);\n        }\n    };\n    return AuditTimeSubscriber;\n}(Subscriber_1.Subscriber));\nfunction dispatchNext(subscriber) {\n    subscriber.clearThrottle();\n}\n//# sourceMappingURL=auditTime.js.map\n\n/***/ },\n/* 890 */\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar OuterSubscriber_1 = __webpack_require__(145);\nvar subscribeToResult_1 = __webpack_require__(146);\n/**\n * Buffers the source Observable values until `closingNotifier` emits.\n *\n * <span class=\"informal\">Collects values from the past as an array, and emits\n * that array only when another Observable emits.</span>\n *\n * <img src=\"./img/buffer.png\" width=\"100%\">\n *\n * Buffers the incoming Observable values until the given `closingNotifier`\n * Observable emits a value, at which point it emits the buffer on the output\n * Observable and starts a new buffer internally, awaiting the next time\n * `closingNotifier` emits.\n *\n * @example <caption>On every click, emit array of most recent interval events</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var interval = Rx.Observable.interval(1000);\n * var buffered = interval.buffer(clicks);\n * buffered.subscribe(x => console.log(x));\n *\n * @see {@link bufferCount}\n * @see {@link bufferTime}\n * @see {@link bufferToggle}\n * @see {@link bufferWhen}\n * @see {@link window}\n *\n * @param {Observable<any>} closingNotifier An Observable that signals the\n * buffer to be emitted on the output Observable.\n * @return {Observable<T[]>} An Observable of buffers, which are arrays of\n * values.\n * @method buffer\n * @owner Observable\n */\nfunction buffer(closingNotifier) {\n    return this.lift(new BufferOperator(closingNotifier));\n}\nexports.buffer = buffer;\nvar BufferOperator = (function () {\n    function BufferOperator(closingNotifier) {\n        this.closingNotifier = closingNotifier;\n    }\n    BufferOperator.prototype.call = function (subscriber, source) {\n        return source._subscribe(new BufferSubscriber(subscriber, this.closingNotifier));\n    };\n    return BufferOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar BufferSubscriber = (function (_super) {\n    __extends(BufferSubscriber, _super);\n    function BufferSubscriber(destination, closingNotifier) {\n        _super.call(this, destination);\n        this.buffer = [];\n        this.add(subscribeToResult_1.subscribeToResult(this, closingNotifier));\n    }\n    BufferSubscriber.prototype._next = function (value) {\n        this.buffer.push(value);\n    };\n    BufferSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {\n        var buffer = this.buffer;\n        this.buffer = [];\n        this.destination.next(buffer);\n    };\n    return BufferSubscriber;\n}(OuterSubscriber_1.OuterSubscriber));\n//# sourceMappingURL=buffer.js.map\n\n/***/ },\n/* 891 */\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Subscriber_1 = __webpack_require__(26);\n/**\n * Buffers the source Observable values until the size hits the maximum\n * `bufferSize` given.\n *\n * <span class=\"informal\">Collects values from the past as an array, and emits\n * that array only when its size reaches `bufferSize`.</span>\n *\n * <img src=\"./img/bufferCount.png\" width=\"100%\">\n *\n * Buffers a number of values from the source Observable by `bufferSize` then\n * emits the buffer and clears it, and starts a new buffer each\n * `startBufferEvery` values. If `startBufferEvery` is not provided or is\n * `null`, then new buffers are started immediately at the start of the source\n * and when each buffer closes and is emitted.\n *\n * @example <caption>Emit the last two click events as an array</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var buffered = clicks.bufferCount(2);\n * buffered.subscribe(x => console.log(x));\n *\n * @example <caption>On every click, emit the last two click events as an array</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var buffered = clicks.bufferCount(2, 1);\n * buffered.subscribe(x => console.log(x));\n *\n * @see {@link buffer}\n * @see {@link bufferTime}\n * @see {@link bufferToggle}\n * @see {@link bufferWhen}\n * @see {@link pairwise}\n * @see {@link windowCount}\n *\n * @param {number} bufferSize The maximum size of the buffer emitted.\n * @param {number} [startBufferEvery] Interval at which to start a new buffer.\n * For example if `startBufferEvery` is `2`, then a new buffer will be started\n * on every other value from the source. A new buffer is started at the\n * beginning of the source by default.\n * @return {Observable<T[]>} An Observable of arrays of buffered values.\n * @method bufferCount\n * @owner Observable\n */\nfunction bufferCount(bufferSize, startBufferEvery) {\n    if (startBufferEvery === void 0) { startBufferEvery = null; }\n    return this.lift(new BufferCountOperator(bufferSize, startBufferEvery));\n}\nexports.bufferCount = bufferCount;\nvar BufferCountOperator = (function () {\n    function BufferCountOperator(bufferSize, startBufferEvery) {\n        this.bufferSize = bufferSize;\n        this.startBufferEvery = startBufferEvery;\n    }\n    BufferCountOperator.prototype.call = function (subscriber, source) {\n        return source._subscribe(new BufferCountSubscriber(subscriber, this.bufferSize, this.startBufferEvery));\n    };\n    return BufferCountOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar BufferCountSubscriber = (function (_super) {\n    __extends(BufferCountSubscriber, _super);\n    function BufferCountSubscriber(destination, bufferSize, startBufferEvery) {\n        _super.call(this, destination);\n        this.bufferSize = bufferSize;\n        this.startBufferEvery = startBufferEvery;\n        this.buffers = [[]];\n        this.count = 0;\n    }\n    BufferCountSubscriber.prototype._next = function (value) {\n        var count = (this.count += 1);\n        var destination = this.destination;\n        var bufferSize = this.bufferSize;\n        var startBufferEvery = (this.startBufferEvery == null) ? bufferSize : this.startBufferEvery;\n        var buffers = this.buffers;\n        var len = buffers.length;\n        var remove = -1;\n        if (count % startBufferEvery === 0) {\n            buffers.push([]);\n        }\n        for (var i = 0; i < len; i++) {\n            var buffer = buffers[i];\n            buffer.push(value);\n            if (buffer.length === bufferSize) {\n                remove = i;\n                destination.next(buffer);\n            }\n        }\n        if (remove !== -1) {\n            buffers.splice(remove, 1);\n        }\n    };\n    BufferCountSubscriber.prototype._complete = function () {\n        var destination = this.destination;\n        var buffers = this.buffers;\n        while (buffers.length > 0) {\n            var buffer = buffers.shift();\n            if (buffer.length > 0) {\n                destination.next(buffer);\n            }\n        }\n        _super.prototype._complete.call(this);\n    };\n    return BufferCountSubscriber;\n}(Subscriber_1.Subscriber));\n//# sourceMappingURL=bufferCount.js.map\n\n/***/ },\n/* 892 */\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar async_1 = __webpack_require__(686);\nvar Subscriber_1 = __webpack_require__(26);\nvar isScheduler_1 = __webpack_require__(381);\n/**\n * Buffers the source Observable values for a specific time period.\n *\n * <span class=\"informal\">Collects values from the past as an array, and emits\n * those arrays periodically in time.</span>\n *\n * <img src=\"./img/bufferTime.png\" width=\"100%\">\n *\n * Buffers values from the source for a specific time duration `bufferTimeSpan`.\n * Unless the optional argument `bufferCreationInterval` is given, it emits and\n * resets the buffer every `bufferTimeSpan` milliseconds. If\n * `bufferCreationInterval` is given, this operator opens the buffer every\n * `bufferCreationInterval` milliseconds and closes (emits and resets) the\n * buffer every `bufferTimeSpan` milliseconds. When the optional argument\n * `maxBufferSize` is specified, the buffer will be closed either after\n * `bufferTimeSpan` milliseconds or when it contains `maxBufferSize` elements.\n *\n * @example <caption>Every second, emit an array of the recent click events</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var buffered = clicks.bufferTime(1000);\n * buffered.subscribe(x => console.log(x));\n *\n * @example <caption>Every 5 seconds, emit the click events from the next 2 seconds</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var buffered = clicks.bufferTime(2000, 5000);\n * buffered.subscribe(x => console.log(x));\n *\n * @see {@link buffer}\n * @see {@link bufferCount}\n * @see {@link bufferToggle}\n * @see {@link bufferWhen}\n * @see {@link windowTime}\n *\n * @param {number} bufferTimeSpan The amount of time to fill each buffer array.\n * @param {number} [bufferCreationInterval] The interval at which to start new\n * buffers.\n * @param {number} [maxBufferSize] The maximum buffer size.\n * @param {Scheduler} [scheduler=async] The scheduler on which to schedule the\n * intervals that determine buffer boundaries.\n * @return {Observable<T[]>} An observable of arrays of buffered values.\n * @method bufferTime\n * @owner Observable\n */\nfunction bufferTime(bufferTimeSpan) {\n    var length = arguments.length;\n    var scheduler = async_1.async;\n    if (isScheduler_1.isScheduler(arguments[arguments.length - 1])) {\n        scheduler = arguments[arguments.length - 1];\n        length--;\n    }\n    var bufferCreationInterval = null;\n    if (length >= 2) {\n        bufferCreationInterval = arguments[1];\n    }\n    var maxBufferSize = Number.POSITIVE_INFINITY;\n    if (length >= 3) {\n        maxBufferSize = arguments[2];\n    }\n    return this.lift(new BufferTimeOperator(bufferTimeSpan, bufferCreationInterval, maxBufferSize, scheduler));\n}\nexports.bufferTime = bufferTime;\nvar BufferTimeOperator = (function () {\n    function BufferTimeOperator(bufferTimeSpan, bufferCreationInterval, maxBufferSize, scheduler) {\n        this.bufferTimeSpan = bufferTimeSpan;\n        this.bufferCreationInterval = bufferCreationInterval;\n        this.maxBufferSize = maxBufferSize;\n        this.scheduler = scheduler;\n    }\n    BufferTimeOperator.prototype.call = function (subscriber, source) {\n        return source._subscribe(new BufferTimeSubscriber(subscriber, this.bufferTimeSpan, this.bufferCreationInterval, this.maxBufferSize, this.scheduler));\n    };\n    return BufferTimeOperator;\n}());\nvar Context = (function () {\n    function Context() {\n        this.buffer = [];\n    }\n    return Context;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar BufferTimeSubscriber = (function (_super) {\n    __extends(BufferTimeSubscriber, _super);\n    function BufferTimeSubscriber(destination, bufferTimeSpan, bufferCreationInterval, maxBufferSize, scheduler) {\n        _super.call(this, destination);\n        this.bufferTimeSpan = bufferTimeSpan;\n        this.bufferCreationInterval = bufferCreationInterval;\n        this.maxBufferSize = maxBufferSize;\n        this.scheduler = scheduler;\n        this.contexts = [];\n        var context = this.openContext();\n        this.timespanOnly = bufferCreationInterval == null || bufferCreationInterval < 0;\n        if (this.timespanOnly) {\n            var timeSpanOnlyState = { subscriber: this, context: context, bufferTimeSpan: bufferTimeSpan };\n            this.add(context.closeAction = scheduler.schedule(dispatchBufferTimeSpanOnly, bufferTimeSpan, timeSpanOnlyState));\n        }\n        else {\n            var closeState = { subscriber: this, context: context };\n            var creationState = { bufferTimeSpan: bufferTimeSpan, bufferCreationInterval: bufferCreationInterval, subscriber: this, scheduler: scheduler };\n            this.add(context.closeAction = scheduler.schedule(dispatchBufferClose, bufferTimeSpan, closeState));\n            this.add(scheduler.schedule(dispatchBufferCreation, bufferCreationInterval, creationState));\n        }\n    }\n    BufferTimeSubscriber.prototype._next = function (value) {\n        var contexts = this.contexts;\n        var len = contexts.length;\n        var filledBufferContext;\n        for (var i = 0; i < len; i++) {\n            var context = contexts[i];\n            var buffer = context.buffer;\n            buffer.push(value);\n            if (buffer.length == this.maxBufferSize) {\n                filledBufferContext = context;\n            }\n        }\n        if (filledBufferContext) {\n            this.onBufferFull(filledBufferContext);\n        }\n    };\n    BufferTimeSubscriber.prototype._error = function (err) {\n        this.contexts.length = 0;\n        _super.prototype._error.call(this, err);\n    };\n    BufferTimeSubscriber.prototype._complete = function () {\n        var _a = this, contexts = _a.contexts, destination = _a.destination;\n        while (contexts.length > 0) {\n            var context = contexts.shift();\n            destination.next(context.buffer);\n        }\n        _super.prototype._complete.call(this);\n    };\n    BufferTimeSubscriber.prototype._unsubscribe = function () {\n        this.contexts = null;\n    };\n    BufferTimeSubscriber.prototype.onBufferFull = function (context) {\n        this.closeContext(context);\n        var closeAction = context.closeAction;\n        closeAction.unsubscribe();\n        this.remove(closeAction);\n        if (this.timespanOnly) {\n            context = this.openContext();\n            var bufferTimeSpan = this.bufferTimeSpan;\n            var timeSpanOnlyState = { subscriber: this, context: context, bufferTimeSpan: bufferTimeSpan };\n            this.add(context.closeAction = this.scheduler.schedule(dispatchBufferTimeSpanOnly, bufferTimeSpan, timeSpanOnlyState));\n        }\n    };\n    BufferTimeSubscriber.prototype.openContext = function () {\n        var context = new Context();\n        this.contexts.push(context);\n        return context;\n    };\n    BufferTimeSubscriber.prototype.closeContext = function (context) {\n        this.destination.next(context.buffer);\n        var contexts = this.contexts;\n        var spliceIndex = contexts ? contexts.indexOf(context) : -1;\n        if (spliceIndex >= 0) {\n            contexts.splice(contexts.indexOf(context), 1);\n        }\n    };\n    return BufferTimeSubscriber;\n}(Subscriber_1.Subscriber));\nfunction dispatchBufferTimeSpanOnly(state) {\n    var subscriber = state.subscriber;\n    var prevContext = state.context;\n    if (prevContext) {\n        subscriber.closeContext(prevContext);\n    }\n    if (!subscriber.closed) {\n        state.context = subscriber.openContext();\n        state.context.closeAction = this.schedule(state, state.bufferTimeSpan);\n    }\n}\nfunction dispatchBufferCreation(state) {\n    var bufferCreationInterval = state.bufferCreationInterval, bufferTimeSpan = state.bufferTimeSpan, subscriber = state.subscriber, scheduler = state.scheduler;\n    var context = subscriber.openContext();\n    var action = this;\n    if (!subscriber.closed) {\n        subscriber.add(context.closeAction = scheduler.schedule(dispatchBufferClose, bufferTimeSpan, { subscriber: subscriber, context: context }));\n        action.schedule(state, bufferCreationInterval);\n    }\n}\nfunction dispatchBufferClose(arg) {\n    var subscriber = arg.subscriber, context = arg.context;\n    subscriber.closeContext(context);\n}\n//# sourceMappingURL=bufferTime.js.map\n\n/***/ },\n/* 893 */\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Subscription_1 = __webpack_require__(147);\nvar subscribeToResult_1 = __webpack_require__(146);\nvar OuterSubscriber_1 = __webpack_require__(145);\n/**\n * Buffers the source Observable values starting from an emission from\n * `openings` and ending when the output of `closingSelector` emits.\n *\n * <span class=\"informal\">Collects values from the past as an array. Starts\n * collecting only when `opening` emits, and calls the `closingSelector`\n * function to get an Observable that tells when to close the buffer.</span>\n *\n * <img src=\"./img/bufferToggle.png\" width=\"100%\">\n *\n * Buffers values from the source by opening the buffer via signals from an\n * Observable provided to `openings`, and closing and sending the buffers when\n * a Subscribable or Promise returned by the `closingSelector` function emits.\n *\n * @example <caption>Every other second, emit the click events from the next 500ms</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var openings = Rx.Observable.interval(1000);\n * var buffered = clicks.bufferToggle(openings, i =>\n *   i % 2 ? Rx.Observable.interval(500) : Rx.Observable.empty()\n * );\n * buffered.subscribe(x => console.log(x));\n *\n * @see {@link buffer}\n * @see {@link bufferCount}\n * @see {@link bufferTime}\n * @see {@link bufferWhen}\n * @see {@link windowToggle}\n *\n * @param {SubscribableOrPromise<O>} openings A Subscribable or Promise of notifications to start new\n * buffers.\n * @param {function(value: O): SubscribableOrPromise} closingSelector A function that takes\n * the value emitted by the `openings` observable and returns a Subscribable or Promise,\n * which, when it emits, signals that the associated buffer should be emitted\n * and cleared.\n * @return {Observable<T[]>} An observable of arrays of buffered values.\n * @method bufferToggle\n * @owner Observable\n */\nfunction bufferToggle(openings, closingSelector) {\n    return this.lift(new BufferToggleOperator(openings, closingSelector));\n}\nexports.bufferToggle = bufferToggle;\nvar BufferToggleOperator = (function () {\n    function BufferToggleOperator(openings, closingSelector) {\n        this.openings = openings;\n        this.closingSelector = closingSelector;\n    }\n    BufferToggleOperator.prototype.call = function (subscriber, source) {\n        return source._subscribe(new BufferToggleSubscriber(subscriber, this.openings, this.closingSelector));\n    };\n    return BufferToggleOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar BufferToggleSubscriber = (function (_super) {\n    __extends(BufferToggleSubscriber, _super);\n    function BufferToggleSubscriber(destination, openings, closingSelector) {\n        _super.call(this, destination);\n        this.openings = openings;\n        this.closingSelector = closingSelector;\n        this.contexts = [];\n        this.add(subscribeToResult_1.subscribeToResult(this, openings));\n    }\n    BufferToggleSubscriber.prototype._next = function (value) {\n        var contexts = this.contexts;\n        var len = contexts.length;\n        for (var i = 0; i < len; i++) {\n            contexts[i].buffer.push(value);\n        }\n    };\n    BufferToggleSubscriber.prototype._error = function (err) {\n        var contexts = this.contexts;\n        while (contexts.length > 0) {\n            var context = contexts.shift();\n            context.subscription.unsubscribe();\n            context.buffer = null;\n            context.subscription = null;\n        }\n        this.contexts = null;\n        _super.prototype._error.call(this, err);\n    };\n    BufferToggleSubscriber.prototype._complete = function () {\n        var contexts = this.contexts;\n        while (contexts.length > 0) {\n            var context = contexts.shift();\n            this.destination.next(context.buffer);\n            context.subscription.unsubscribe();\n            context.buffer = null;\n            context.subscription = null;\n        }\n        this.contexts = null;\n        _super.prototype._complete.call(this);\n    };\n    BufferToggleSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {\n        outerValue ? this.closeBuffer(outerValue) : this.openBuffer(innerValue);\n    };\n    BufferToggleSubscriber.prototype.notifyComplete = function (innerSub) {\n        this.closeBuffer(innerSub.context);\n    };\n    BufferToggleSubscriber.prototype.openBuffer = function (value) {\n        try {\n            var closingSelector = this.closingSelector;\n            var closingNotifier = closingSelector.call(this, value);\n            if (closingNotifier) {\n                this.trySubscribe(closingNotifier);\n            }\n        }\n        catch (err) {\n            this._error(err);\n        }\n    };\n    BufferToggleSubscriber.prototype.closeBuffer = function (context) {\n        var contexts = this.contexts;\n        if (contexts && context) {\n            var buffer = context.buffer, subscription = context.subscription;\n            this.destination.next(buffer);\n            contexts.splice(contexts.indexOf(context), 1);\n            this.remove(subscription);\n            subscription.unsubscribe();\n        }\n    };\n    BufferToggleSubscriber.prototype.trySubscribe = function (closingNotifier) {\n        var contexts = this.contexts;\n        var buffer = [];\n        var subscription = new Subscription_1.Subscription();\n        var context = { buffer: buffer, subscription: subscription };\n        contexts.push(context);\n        var innerSubscription = subscribeToResult_1.subscribeToResult(this, closingNotifier, context);\n        if (!innerSubscription || innerSubscription.closed) {\n            this.closeBuffer(context);\n        }\n        else {\n            innerSubscription.context = context;\n            this.add(innerSubscription);\n            subscription.add(innerSubscription);\n        }\n    };\n    return BufferToggleSubscriber;\n}(OuterSubscriber_1.OuterSubscriber));\n//# sourceMappingURL=bufferToggle.js.map\n\n/***/ },\n/* 894 */\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Subscription_1 = __webpack_require__(147);\nvar tryCatch_1 = __webpack_require__(380);\nvar errorObject_1 = __webpack_require__(231);\nvar OuterSubscriber_1 = __webpack_require__(145);\nvar subscribeToResult_1 = __webpack_require__(146);\n/**\n * Buffers the source Observable values, using a factory function of closing\n * Observables to determine when to close, emit, and reset the buffer.\n *\n * <span class=\"informal\">Collects values from the past as an array. When it\n * starts collecting values, it calls a function that returns an Observable that\n * tells when to close the buffer and restart collecting.</span>\n *\n * <img src=\"./img/bufferWhen.png\" width=\"100%\">\n *\n * Opens a buffer immediately, then closes the buffer when the observable\n * returned by calling `closingSelector` function emits a value. When it closes\n * the buffer, it immediately opens a new buffer and repeats the process.\n *\n * @example <caption>Emit an array of the last clicks every [1-5] random seconds</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var buffered = clicks.bufferWhen(() =>\n *   Rx.Observable.interval(1000 + Math.random() * 4000)\n * );\n * buffered.subscribe(x => console.log(x));\n *\n * @see {@link buffer}\n * @see {@link bufferCount}\n * @see {@link bufferTime}\n * @see {@link bufferToggle}\n * @see {@link windowWhen}\n *\n * @param {function(): Observable} closingSelector A function that takes no\n * arguments and returns an Observable that signals buffer closure.\n * @return {Observable<T[]>} An observable of arrays of buffered values.\n * @method bufferWhen\n * @owner Observable\n */\nfunction bufferWhen(closingSelector) {\n    return this.lift(new BufferWhenOperator(closingSelector));\n}\nexports.bufferWhen = bufferWhen;\nvar BufferWhenOperator = (function () {\n    function BufferWhenOperator(closingSelector) {\n        this.closingSelector = closingSelector;\n    }\n    BufferWhenOperator.prototype.call = function (subscriber, source) {\n        return source._subscribe(new BufferWhenSubscriber(subscriber, this.closingSelector));\n    };\n    return BufferWhenOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar BufferWhenSubscriber = (function (_super) {\n    __extends(BufferWhenSubscriber, _super);\n    function BufferWhenSubscriber(destination, closingSelector) {\n        _super.call(this, destination);\n        this.closingSelector = closingSelector;\n        this.subscribing = false;\n        this.openBuffer();\n    }\n    BufferWhenSubscriber.prototype._next = function (value) {\n        this.buffer.push(value);\n    };\n    BufferWhenSubscriber.prototype._complete = function () {\n        var buffer = this.buffer;\n        if (buffer) {\n            this.destination.next(buffer);\n        }\n        _super.prototype._complete.call(this);\n    };\n    BufferWhenSubscriber.prototype._unsubscribe = function () {\n        this.buffer = null;\n        this.subscribing = false;\n    };\n    BufferWhenSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {\n        this.openBuffer();\n    };\n    BufferWhenSubscriber.prototype.notifyComplete = function () {\n        if (this.subscribing) {\n            this.complete();\n        }\n        else {\n            this.openBuffer();\n        }\n    };\n    BufferWhenSubscriber.prototype.openBuffer = function () {\n        var closingSubscription = this.closingSubscription;\n        if (closingSubscription) {\n            this.remove(closingSubscription);\n            closingSubscription.unsubscribe();\n        }\n        var buffer = this.buffer;\n        if (this.buffer) {\n            this.destination.next(buffer);\n        }\n        this.buffer = [];\n        var closingNotifier = tryCatch_1.tryCatch(this.closingSelector)();\n        if (closingNotifier === errorObject_1.errorObject) {\n            this.error(errorObject_1.errorObject.e);\n        }\n        else {\n            closingSubscription = new Subscription_1.Subscription();\n            this.closingSubscription = closingSubscription;\n            this.add(closingSubscription);\n            this.subscribing = true;\n            closingSubscription.add(subscribeToResult_1.subscribeToResult(this, closingNotifier));\n            this.subscribing = false;\n        }\n    };\n    return BufferWhenSubscriber;\n}(OuterSubscriber_1.OuterSubscriber));\n//# sourceMappingURL=bufferWhen.js.map\n\n/***/ },\n/* 895 */\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\"use strict\";\nvar Observable_1 = __webpack_require__(14);\nvar ReplaySubject_1 = __webpack_require__(691);\n/**\n * @param bufferSize\n * @param windowTime\n * @param scheduler\n * @return {Observable<any>}\n * @method cache\n * @owner Observable\n */\nfunction cache(bufferSize, windowTime, scheduler) {\n    if (bufferSize === void 0) { bufferSize = Number.POSITIVE_INFINITY; }\n    if (windowTime === void 0) { windowTime = Number.POSITIVE_INFINITY; }\n    var subject;\n    var source = this;\n    var refs = 0;\n    var outerSub;\n    var getSubject = function () {\n        subject = new ReplaySubject_1.ReplaySubject(bufferSize, windowTime, scheduler);\n        return subject;\n    };\n    return new Observable_1.Observable(function (observer) {\n        if (!subject) {\n            subject = getSubject();\n            outerSub = source.subscribe(function (value) { return subject.next(value); }, function (err) {\n                var s = subject;\n                subject = null;\n                s.error(err);\n            }, function () { return subject.complete(); });\n        }\n        refs++;\n        if (!subject) {\n            subject = getSubject();\n        }\n        var innerSub = subject.subscribe(observer);\n        return function () {\n            refs--;\n            if (innerSub) {\n                innerSub.unsubscribe();\n            }\n            if (refs === 0) {\n                outerSub.unsubscribe();\n            }\n        };\n    });\n}\nexports.cache = cache;\n//# sourceMappingURL=cache.js.map\n\n/***/ },\n/* 896 */\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\"use strict\";\nvar combineLatest_1 = __webpack_require__(695);\n/**\n * Converts a higher-order Observable into a first-order Observable by waiting\n * for the outer Observable to complete, then applying {@link combineLatest}.\n *\n * <span class=\"informal\">Flattens an Observable-of-Observables by applying\n * {@link combineLatest} when the Observable-of-Observables completes.</span>\n *\n * <img src=\"./img/combineAll.png\" width=\"100%\">\n *\n * Takes an Observable of Observables, and collects all Observables from it.\n * Once the outer Observable completes, it subscribes to all collected\n * Observables and combines their values using the {@link combineLatest}\n * strategy, such that:\n * - Every time an inner Observable emits, the output Observable emits.\n * - When the returned observable emits, it emits all of the latest values by:\n *   - If a `project` function is provided, it is called with each recent value\n *     from each inner Observable in whatever order they arrived, and the result\n *     of the `project` function is what is emitted by the output Observable.\n *   - If there is no `project` function, an array of all of the most recent\n *     values is emitted by the output Observable.\n *\n * @example <caption>Map two click events to a finite interval Observable, then apply combineAll</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var higherOrder = clicks.map(ev =>\n *   Rx.Observable.interval(Math.random()*2000).take(3)\n * ).take(2);\n * var result = higherOrder.combineAll();\n * result.subscribe(x => console.log(x));\n *\n * @see {@link combineLatest}\n * @see {@link mergeAll}\n *\n * @param {function} [project] An optional function to map the most recent\n * values from each inner Observable into a new result. Takes each of the most\n * recent values from each collected inner Observable as arguments, in order.\n * @return {Observable} An Observable of projected results or arrays of recent\n * values.\n * @method combineAll\n * @owner Observable\n */\nfunction combineAll(project) {\n    return this.lift(new combineLatest_1.CombineLatestOperator(project));\n}\nexports.combineAll = combineAll;\n//# sourceMappingURL=combineAll.js.map\n\n/***/ },\n/* 897 */\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\"use strict\";\nvar mergeMapTo_1 = __webpack_require__(706);\n/**\n * Projects each source value to the same Observable which is merged multiple\n * times in a serialized fashion on the output Observable.\n *\n * <span class=\"informal\">It's like {@link concatMap}, but maps each value\n * always to the same inner Observable.</span>\n *\n * <img src=\"./img/concatMapTo.png\" width=\"100%\">\n *\n * Maps each source value to the given Observable `innerObservable` regardless\n * of the source value, and then flattens those resulting Observables into one\n * single Observable, which is the output Observable. Each new `innerObservable`\n * instance emitted on the output Observable is concatenated with the previous\n * `innerObservable` instance.\n *\n * __Warning:__ if source values arrive endlessly and faster than their\n * corresponding inner Observables can complete, it will result in memory issues\n * as inner Observables amass in an unbounded buffer waiting for their turn to\n * be subscribed to.\n *\n * Note: `concatMapTo` is equivalent to `mergeMapTo` with concurrency parameter\n * set to `1`.\n *\n * @example <caption>For each click event, tick every second from 0 to 3, with no concurrency</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.concatMapTo(Rx.Observable.interval(1000).take(4));\n * result.subscribe(x => console.log(x));\n *\n * @see {@link concat}\n * @see {@link concatAll}\n * @see {@link concatMap}\n * @see {@link mergeMapTo}\n * @see {@link switchMapTo}\n *\n * @param {Observable} innerObservable An Observable to replace each value from\n * the source Observable.\n * @param {function(outerValue: T, innerValue: I, outerIndex: number, innerIndex: number): any} [resultSelector]\n * A function to produce the value on the output Observable based on the values\n * and the indices of the source (outer) emission and the inner Observable\n * emission. The arguments passed to this function are:\n * - `outerValue`: the value that came from the source\n * - `innerValue`: the value that came from the projected Observable\n * - `outerIndex`: the \"index\" of the value that came from the source\n * - `innerIndex`: the \"index\" of the value from the projected Observable\n * @return {Observable} An observable of values merged together by joining the\n * passed observable with itself, one after the other, for each value emitted\n * from the source.\n * @method concatMapTo\n * @owner Observable\n */\nfunction concatMapTo(innerObservable, resultSelector) {\n    return this.lift(new mergeMapTo_1.MergeMapToOperator(innerObservable, resultSelector, 1));\n}\nexports.concatMapTo = concatMapTo;\n//# sourceMappingURL=concatMapTo.js.map\n\n/***/ },\n/* 898 */\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Subscriber_1 = __webpack_require__(26);\n/**\n * Counts the number of emissions on the source and emits that number when the\n * source completes.\n *\n * <span class=\"informal\">Tells how many values were emitted, when the source\n * completes.</span>\n *\n * <img src=\"./img/count.png\" width=\"100%\">\n *\n * `count` transforms an Observable that emits values into an Observable that\n * emits a single value that represents the number of values emitted by the\n * source Observable. If the source Observable terminates with an error, `count`\n * will pass this error notification along without emitting an value first. If\n * the source Observable does not terminate at all, `count` will neither emit\n * a value nor terminate. This operator takes an optional `predicate` function\n * as argument, in which case the output emission will represent the number of\n * source values that matched `true` with the `predicate`.\n *\n * @example <caption>Counts how many seconds have passed before the first click happened</caption>\n * var seconds = Rx.Observable.interval(1000);\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var secondsBeforeClick = seconds.takeUntil(clicks);\n * var result = secondsBeforeClick.count();\n * result.subscribe(x => console.log(x));\n *\n * @example <caption>Counts how many odd numbers are there between 1 and 7</caption>\n * var numbers = Rx.Observable.range(1, 7);\n * var result = numbers.count(i => i % 2 === 1);\n * result.subscribe(x => console.log(x));\n *\n * @see {@link max}\n * @see {@link min}\n * @see {@link reduce}\n *\n * @param {function(value: T, i: number, source: Observable<T>): boolean} [predicate] A\n * boolean function to select what values are to be counted. It is provided with\n * arguments of:\n * - `value`: the value from the source Observable.\n * - `index`: the (zero-based) \"index\" of the value from the source Observable.\n * - `source`: the source Observable instance itself.\n * @return {Observable} An Observable of one number that represents the count as\n * described above.\n * @method count\n * @owner Observable\n */\nfunction count(predicate) {\n    return this.lift(new CountOperator(predicate, this));\n}\nexports.count = count;\nvar CountOperator = (function () {\n    function CountOperator(predicate, source) {\n        this.predicate = predicate;\n        this.source = source;\n    }\n    CountOperator.prototype.call = function (subscriber, source) {\n        return source._subscribe(new CountSubscriber(subscriber, this.predicate, this.source));\n    };\n    return CountOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar CountSubscriber = (function (_super) {\n    __extends(CountSubscriber, _super);\n    function CountSubscriber(destination, predicate, source) {\n        _super.call(this, destination);\n        this.predicate = predicate;\n        this.source = source;\n        this.count = 0;\n        this.index = 0;\n    }\n    CountSubscriber.prototype._next = function (value) {\n        if (this.predicate) {\n            this._tryPredicate(value);\n        }\n        else {\n            this.count++;\n        }\n    };\n    CountSubscriber.prototype._tryPredicate = function (value) {\n        var result;\n        try {\n            result = this.predicate(value, this.index++, this.source);\n        }\n        catch (err) {\n            this.destination.error(err);\n            return;\n        }\n        if (result) {\n            this.count++;\n        }\n    };\n    CountSubscriber.prototype._complete = function () {\n        this.destination.next(this.count);\n        this.destination.complete();\n    };\n    return CountSubscriber;\n}(Subscriber_1.Subscriber));\n//# sourceMappingURL=count.js.map\n\n/***/ },\n/* 899 */\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar OuterSubscriber_1 = __webpack_require__(145);\nvar subscribeToResult_1 = __webpack_require__(146);\n/**\n * Emits a value from the source Observable only after a particular time span\n * determined by another Observable has passed without another source emission.\n *\n * <span class=\"informal\">It's like {@link debounceTime}, but the time span of\n * emission silence is determined by a second Observable.</span>\n *\n * <img src=\"./img/debounce.png\" width=\"100%\">\n *\n * `debounce` delays values emitted by the source Observable, but drops previous\n * pending delayed emissions if a new value arrives on the source Observable.\n * This operator keeps track of the most recent value from the source\n * Observable, and spawns a duration Observable by calling the\n * `durationSelector` function. The value is emitted only when the duration\n * Observable emits a value or completes, and if no other value was emitted on\n * the source Observable since the duration Observable was spawned. If a new\n * value appears before the duration Observable emits, the previous value will\n * be dropped and will not be emitted on the output Observable.\n *\n * Like {@link debounceTime}, this is a rate-limiting operator, and also a\n * delay-like operator since output emissions do not necessarily occur at the\n * same time as they did on the source Observable.\n *\n * @example <caption>Emit the most recent click after a burst of clicks</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.debounce(() => Rx.Observable.interval(1000));\n * result.subscribe(x => console.log(x));\n *\n * @see {@link audit}\n * @see {@link debounceTime}\n * @see {@link delayWhen}\n * @see {@link throttle}\n *\n * @param {function(value: T): Observable|Promise} durationSelector A function\n * that receives a value from the source Observable, for computing the timeout\n * duration for each source value, returned as an Observable or a Promise.\n * @return {Observable} An Observable that delays the emissions of the source\n * Observable by the specified duration Observable returned by\n * `durationSelector`, and may drop some values if they occur too frequently.\n * @method debounce\n * @owner Observable\n */\nfunction debounce(durationSelector) {\n    return this.lift(new DebounceOperator(durationSelector));\n}\nexports.debounce = debounce;\nvar DebounceOperator = (function () {\n    function DebounceOperator(durationSelector) {\n        this.durationSelector = durationSelector;\n    }\n    DebounceOperator.prototype.call = function (subscriber, source) {\n        return source._subscribe(new DebounceSubscriber(subscriber, this.durationSelector));\n    };\n    return DebounceOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar DebounceSubscriber = (function (_super) {\n    __extends(DebounceSubscriber, _super);\n    function DebounceSubscriber(destination, durationSelector) {\n        _super.call(this, destination);\n        this.durationSelector = durationSelector;\n        this.hasValue = false;\n        this.durationSubscription = null;\n    }\n    DebounceSubscriber.prototype._next = function (value) {\n        try {\n            var result = this.durationSelector.call(this, value);\n            if (result) {\n                this._tryNext(value, result);\n            }\n        }\n        catch (err) {\n            this.destination.error(err);\n        }\n    };\n    DebounceSubscriber.prototype._complete = function () {\n        this.emitValue();\n        this.destination.complete();\n    };\n    DebounceSubscriber.prototype._tryNext = function (value, duration) {\n        var subscription = this.durationSubscription;\n        this.value = value;\n        this.hasValue = true;\n        if (subscription) {\n            subscription.unsubscribe();\n            this.remove(subscription);\n        }\n        subscription = subscribeToResult_1.subscribeToResult(this, duration);\n        if (!subscription.closed) {\n            this.add(this.durationSubscription = subscription);\n        }\n    };\n    DebounceSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {\n        this.emitValue();\n    };\n    DebounceSubscriber.prototype.notifyComplete = function () {\n        this.emitValue();\n    };\n    DebounceSubscriber.prototype.emitValue = function () {\n        if (this.hasValue) {\n            var value = this.value;\n            var subscription = this.durationSubscription;\n            if (subscription) {\n                this.durationSubscription = null;\n                subscription.unsubscribe();\n                this.remove(subscription);\n            }\n            this.value = null;\n            this.hasValue = false;\n            _super.prototype._next.call(this, value);\n        }\n    };\n    return DebounceSubscriber;\n}(OuterSubscriber_1.OuterSubscriber));\n//# sourceMappingURL=debounce.js.map\n\n/***/ },\n/* 900 */\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Subscriber_1 = __webpack_require__(26);\nvar async_1 = __webpack_require__(686);\n/**\n * Emits a value from the source Observable only after a particular time span\n * has passed without another source emission.\n *\n * <span class=\"informal\">It's like {@link delay}, but passes only the most\n * recent value from each burst of emissions.</span>\n *\n * <img src=\"./img/debounceTime.png\" width=\"100%\">\n *\n * `debounceTime` delays values emitted by the source Observable, but drops\n * previous pending delayed emissions if a new value arrives on the source\n * Observable. This operator keeps track of the most recent value from the\n * source Observable, and emits that only when `dueTime` enough time has passed\n * without any other value appearing on the source Observable. If a new value\n * appears before `dueTime` silence occurs, the previous value will be dropped\n * and will not be emitted on the output Observable.\n *\n * This is a rate-limiting operator, because it is impossible for more than one\n * value to be emitted in any time window of duration `dueTime`, but it is also\n * a delay-like operator since output emissions do not occur at the same time as\n * they did on the source Observable. Optionally takes a {@link Scheduler} for\n * managing timers.\n *\n * @example <caption>Emit the most recent click after a burst of clicks</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.debounceTime(1000);\n * result.subscribe(x => console.log(x));\n *\n * @see {@link auditTime}\n * @see {@link debounce}\n * @see {@link delay}\n * @see {@link sampleTime}\n * @see {@link throttleTime}\n *\n * @param {number} dueTime The timeout duration in milliseconds (or the time\n * unit determined internally by the optional `scheduler`) for the window of\n * time required to wait for emission silence before emitting the most recent\n * source value.\n * @param {Scheduler} [scheduler=async] The {@link Scheduler} to use for\n * managing the timers that handle the timeout for each value.\n * @return {Observable} An Observable that delays the emissions of the source\n * Observable by the specified `dueTime`, and may drop some values if they occur\n * too frequently.\n * @method debounceTime\n * @owner Observable\n */\nfunction debounceTime(dueTime, scheduler) {\n    if (scheduler === void 0) { scheduler = async_1.async; }\n    return this.lift(new DebounceTimeOperator(dueTime, scheduler));\n}\nexports.debounceTime = debounceTime;\nvar DebounceTimeOperator = (function () {\n    function DebounceTimeOperator(dueTime, scheduler) {\n        this.dueTime = dueTime;\n        this.scheduler = scheduler;\n    }\n    DebounceTimeOperator.prototype.call = function (subscriber, source) {\n        return source._subscribe(new DebounceTimeSubscriber(subscriber, this.dueTime, this.scheduler));\n    };\n    return DebounceTimeOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar DebounceTimeSubscriber = (function (_super) {\n    __extends(DebounceTimeSubscriber, _super);\n    function DebounceTimeSubscriber(destination, dueTime, scheduler) {\n        _super.call(this, destination);\n        this.dueTime = dueTime;\n        this.scheduler = scheduler;\n        this.debouncedSubscription = null;\n        this.lastValue = null;\n        this.hasValue = false;\n    }\n    DebounceTimeSubscriber.prototype._next = function (value) {\n        this.clearDebounce();\n        this.lastValue = value;\n        this.hasValue = true;\n        this.add(this.debouncedSubscription = this.scheduler.schedule(dispatchNext, this.dueTime, this));\n    };\n    DebounceTimeSubscriber.prototype._complete = function () {\n        this.debouncedNext();\n        this.destination.complete();\n    };\n    DebounceTimeSubscriber.prototype.debouncedNext = function () {\n        this.clearDebounce();\n        if (this.hasValue) {\n            this.destination.next(this.lastValue);\n            this.lastValue = null;\n            this.hasValue = false;\n        }\n    };\n    DebounceTimeSubscriber.prototype.clearDebounce = function () {\n        var debouncedSubscription = this.debouncedSubscription;\n        if (debouncedSubscription !== null) {\n            this.remove(debouncedSubscription);\n            debouncedSubscription.unsubscribe();\n            this.debouncedSubscription = null;\n        }\n    };\n    return DebounceTimeSubscriber;\n}(Subscriber_1.Subscriber));\nfunction dispatchNext(subscriber) {\n    subscriber.debouncedNext();\n}\n//# sourceMappingURL=debounceTime.js.map\n\n/***/ },\n/* 901 */\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Subscriber_1 = __webpack_require__(26);\n/**\n * Emits a given value if the source Observable completes without emitting any\n * `next` value, otherwise mirrors the source Observable.\n *\n * <span class=\"informal\">If the source Observable turns out to be empty, then\n * this operator will emit a default value.</span>\n *\n * <img src=\"./img/defaultIfEmpty.png\" width=\"100%\">\n *\n * `defaultIfEmpty` emits the values emitted by the source Observable or a\n * specified default value if the source Observable is empty (completes without\n * having emitted any `next` value).\n *\n * @example <caption>If no clicks happen in 5 seconds, then emit \"no clicks\"</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var clicksBeforeFive = clicks.takeUntil(Rx.Observable.interval(5000));\n * var result = clicksBeforeFive.defaultIfEmpty('no clicks');\n * result.subscribe(x => console.log(x));\n *\n * @see {@link empty}\n * @see {@link last}\n *\n * @param {any} [defaultValue=null] The default value used if the source\n * Observable is empty.\n * @return {Observable} An Observable that emits either the specified\n * `defaultValue` if the source Observable emits no items, or the values emitted\n * by the source Observable.\n * @method defaultIfEmpty\n * @owner Observable\n */\nfunction defaultIfEmpty(defaultValue) {\n    if (defaultValue === void 0) { defaultValue = null; }\n    return this.lift(new DefaultIfEmptyOperator(defaultValue));\n}\nexports.defaultIfEmpty = defaultIfEmpty;\nvar DefaultIfEmptyOperator = (function () {\n    function DefaultIfEmptyOperator(defaultValue) {\n        this.defaultValue = defaultValue;\n    }\n    DefaultIfEmptyOperator.prototype.call = function (subscriber, source) {\n        return source._subscribe(new DefaultIfEmptySubscriber(subscriber, this.defaultValue));\n    };\n    return DefaultIfEmptyOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar DefaultIfEmptySubscriber = (function (_super) {\n    __extends(DefaultIfEmptySubscriber, _super);\n    function DefaultIfEmptySubscriber(destination, defaultValue) {\n        _super.call(this, destination);\n        this.defaultValue = defaultValue;\n        this.isEmpty = true;\n    }\n    DefaultIfEmptySubscriber.prototype._next = function (value) {\n        this.isEmpty = false;\n        this.destination.next(value);\n    };\n    DefaultIfEmptySubscriber.prototype._complete = function () {\n        if (this.isEmpty) {\n            this.destination.next(this.defaultValue);\n        }\n        this.destination.complete();\n    };\n    return DefaultIfEmptySubscriber;\n}(Subscriber_1.Subscriber));\n//# sourceMappingURL=defaultIfEmpty.js.map\n\n/***/ },\n/* 902 */\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar async_1 = __webpack_require__(686);\nvar isDate_1 = __webpack_require__(693);\nvar Subscriber_1 = __webpack_require__(26);\nvar Notification_1 = __webpack_require__(382);\n/**\n * Delays the emission of items from the source Observable by a given timeout or\n * until a given Date.\n *\n * <span class=\"informal\">Time shifts each item by some specified amount of\n * milliseconds.</span>\n *\n * <img src=\"./img/delay.png\" width=\"100%\">\n *\n * If the delay argument is a Number, this operator time shifts the source\n * Observable by that amount of time expressed in milliseconds. The relative\n * time intervals between the values are preserved.\n *\n * If the delay argument is a Date, this operator time shifts the start of the\n * Observable execution until the given date occurs.\n *\n * @example <caption>Delay each click by one second</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var delayedClicks = clicks.delay(1000); // each click emitted after 1 second\n * delayedClicks.subscribe(x => console.log(x));\n *\n * @example <caption>Delay all clicks until a future date happens</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var date = new Date('March 15, 2050 12:00:00'); // in the future\n * var delayedClicks = clicks.delay(date); // click emitted only after that date\n * delayedClicks.subscribe(x => console.log(x));\n *\n * @see {@link debounceTime}\n * @see {@link delayWhen}\n *\n * @param {number|Date} delay The delay duration in milliseconds (a `number`) or\n * a `Date` until which the emission of the source items is delayed.\n * @param {Scheduler} [scheduler=async] The Scheduler to use for\n * managing the timers that handle the time-shift for each item.\n * @return {Observable} An Observable that delays the emissions of the source\n * Observable by the specified timeout or Date.\n * @method delay\n * @owner Observable\n */\nfunction delay(delay, scheduler) {\n    if (scheduler === void 0) { scheduler = async_1.async; }\n    var absoluteDelay = isDate_1.isDate(delay);\n    var delayFor = absoluteDelay ? (+delay - scheduler.now()) : Math.abs(delay);\n    return this.lift(new DelayOperator(delayFor, scheduler));\n}\nexports.delay = delay;\nvar DelayOperator = (function () {\n    function DelayOperator(delay, scheduler) {\n        this.delay = delay;\n        this.scheduler = scheduler;\n    }\n    DelayOperator.prototype.call = function (subscriber, source) {\n        return source._subscribe(new DelaySubscriber(subscriber, this.delay, this.scheduler));\n    };\n    return DelayOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar DelaySubscriber = (function (_super) {\n    __extends(DelaySubscriber, _super);\n    function DelaySubscriber(destination, delay, scheduler) {\n        _super.call(this, destination);\n        this.delay = delay;\n        this.scheduler = scheduler;\n        this.queue = [];\n        this.active = false;\n        this.errored = false;\n    }\n    DelaySubscriber.dispatch = function (state) {\n        var source = state.source;\n        var queue = source.queue;\n        var scheduler = state.scheduler;\n        var destination = state.destination;\n        while (queue.length > 0 && (queue[0].time - scheduler.now()) <= 0) {\n            queue.shift().notification.observe(destination);\n        }\n        if (queue.length > 0) {\n            var delay_1 = Math.max(0, queue[0].time - scheduler.now());\n            this.schedule(state, delay_1);\n        }\n        else {\n            source.active = false;\n        }\n    };\n    DelaySubscriber.prototype._schedule = function (scheduler) {\n        this.active = true;\n        this.add(scheduler.schedule(DelaySubscriber.dispatch, this.delay, {\n            source: this, destination: this.destination, scheduler: scheduler\n        }));\n    };\n    DelaySubscriber.prototype.scheduleNotification = function (notification) {\n        if (this.errored === true) {\n            return;\n        }\n        var scheduler = this.scheduler;\n        var message = new DelayMessage(scheduler.now() + this.delay, notification);\n        this.queue.push(message);\n        if (this.active === false) {\n            this._schedule(scheduler);\n        }\n    };\n    DelaySubscriber.prototype._next = function (value) {\n        this.scheduleNotification(Notification_1.Notification.createNext(value));\n    };\n    DelaySubscriber.prototype._error = function (err) {\n        this.errored = true;\n        this.queue = [];\n        this.destination.error(err);\n    };\n    DelaySubscriber.prototype._complete = function () {\n        this.scheduleNotification(Notification_1.Notification.createComplete());\n    };\n    return DelaySubscriber;\n}(Subscriber_1.Subscriber));\nvar DelayMessage = (function () {\n    function DelayMessage(time, notification) {\n        this.time = time;\n        this.notification = notification;\n    }\n    return DelayMessage;\n}());\n//# sourceMappingURL=delay.js.map\n\n/***/ },\n/* 903 */\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Subscriber_1 = __webpack_require__(26);\nvar Observable_1 = __webpack_require__(14);\nvar OuterSubscriber_1 = __webpack_require__(145);\nvar subscribeToResult_1 = __webpack_require__(146);\n/**\n * Delays the emission of items from the source Observable by a given time span\n * determined by the emissions of another Observable.\n *\n * <span class=\"informal\">It's like {@link delay}, but the time span of the\n * delay duration is determined by a second Observable.</span>\n *\n * <img src=\"./img/delayWhen.png\" width=\"100%\">\n *\n * `delayWhen` time shifts each emitted value from the source Observable by a\n * time span determined by another Observable. When the source emits a value,\n * the `delayDurationSelector` function is called with the source value as\n * argument, and should return an Observable, called the \"duration\" Observable.\n * The source value is emitted on the output Observable only when the duration\n * Observable emits a value or completes.\n *\n * Optionally, `delayWhen` takes a second argument, `subscriptionDelay`, which\n * is an Observable. When `subscriptionDelay` emits its first value or\n * completes, the source Observable is subscribed to and starts behaving like\n * described in the previous paragraph. If `subscriptionDelay` is not provided,\n * `delayWhen` will subscribe to the source Observable as soon as the output\n * Observable is subscribed.\n *\n * @example <caption>Delay each click by a random amount of time, between 0 and 5 seconds</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var delayedClicks = clicks.delayWhen(event =>\n *   Rx.Observable.interval(Math.random() * 5000)\n * );\n * delayedClicks.subscribe(x => console.log(x));\n *\n * @see {@link debounce}\n * @see {@link delay}\n *\n * @param {function(value: T): Observable} delayDurationSelector A function that\n * returns an Observable for each value emitted by the source Observable, which\n * is then used to delay the emission of that item on the output Observable\n * until the Observable returned from this function emits a value.\n * @param {Observable} subscriptionDelay An Observable that triggers the\n * subscription to the source Observable once it emits any value.\n * @return {Observable} An Observable that delays the emissions of the source\n * Observable by an amount of time specified by the Observable returned by\n * `delayDurationSelector`.\n * @method delayWhen\n * @owner Observable\n */\nfunction delayWhen(delayDurationSelector, subscriptionDelay) {\n    if (subscriptionDelay) {\n        return new SubscriptionDelayObservable(this, subscriptionDelay)\n            .lift(new DelayWhenOperator(delayDurationSelector));\n    }\n    return this.lift(new DelayWhenOperator(delayDurationSelector));\n}\nexports.delayWhen = delayWhen;\nvar DelayWhenOperator = (function () {\n    function DelayWhenOperator(delayDurationSelector) {\n        this.delayDurationSelector = delayDurationSelector;\n    }\n    DelayWhenOperator.prototype.call = function (subscriber, source) {\n        return source._subscribe(new DelayWhenSubscriber(subscriber, this.delayDurationSelector));\n    };\n    return DelayWhenOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar DelayWhenSubscriber = (function (_super) {\n    __extends(DelayWhenSubscriber, _super);\n    function DelayWhenSubscriber(destination, delayDurationSelector) {\n        _super.call(this, destination);\n        this.delayDurationSelector = delayDurationSelector;\n        this.completed = false;\n        this.delayNotifierSubscriptions = [];\n        this.values = [];\n    }\n    DelayWhenSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {\n        this.destination.next(outerValue);\n        this.removeSubscription(innerSub);\n        this.tryComplete();\n    };\n    DelayWhenSubscriber.prototype.notifyError = function (error, innerSub) {\n        this._error(error);\n    };\n    DelayWhenSubscriber.prototype.notifyComplete = function (innerSub) {\n        var value = this.removeSubscription(innerSub);\n        if (value) {\n            this.destination.next(value);\n        }\n        this.tryComplete();\n    };\n    DelayWhenSubscriber.prototype._next = function (value) {\n        try {\n            var delayNotifier = this.delayDurationSelector(value);\n            if (delayNotifier) {\n                this.tryDelay(delayNotifier, value);\n            }\n        }\n        catch (err) {\n            this.destination.error(err);\n        }\n    };\n    DelayWhenSubscriber.prototype._complete = function () {\n        this.completed = true;\n        this.tryComplete();\n    };\n    DelayWhenSubscriber.prototype.removeSubscription = function (subscription) {\n        subscription.unsubscribe();\n        var subscriptionIdx = this.delayNotifierSubscriptions.indexOf(subscription);\n        var value = null;\n        if (subscriptionIdx !== -1) {\n            value = this.values[subscriptionIdx];\n            this.delayNotifierSubscriptions.splice(subscriptionIdx, 1);\n            this.values.splice(subscriptionIdx, 1);\n        }\n        return value;\n    };\n    DelayWhenSubscriber.prototype.tryDelay = function (delayNotifier, value) {\n        var notifierSubscription = subscribeToResult_1.subscribeToResult(this, delayNotifier, value);\n        this.add(notifierSubscription);\n        this.delayNotifierSubscriptions.push(notifierSubscription);\n        this.values.push(value);\n    };\n    DelayWhenSubscriber.prototype.tryComplete = function () {\n        if (this.completed && this.delayNotifierSubscriptions.length === 0) {\n            this.destination.complete();\n        }\n    };\n    return DelayWhenSubscriber;\n}(OuterSubscriber_1.OuterSubscriber));\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar SubscriptionDelayObservable = (function (_super) {\n    __extends(SubscriptionDelayObservable, _super);\n    function SubscriptionDelayObservable(source, subscriptionDelay) {\n        _super.call(this);\n        this.source = source;\n        this.subscriptionDelay = subscriptionDelay;\n    }\n    SubscriptionDelayObservable.prototype._subscribe = function (subscriber) {\n        this.subscriptionDelay.subscribe(new SubscriptionDelaySubscriber(subscriber, this.source));\n    };\n    return SubscriptionDelayObservable;\n}(Observable_1.Observable));\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar SubscriptionDelaySubscriber = (function (_super) {\n    __extends(SubscriptionDelaySubscriber, _super);\n    function SubscriptionDelaySubscriber(parent, source) {\n        _super.call(this);\n        this.parent = parent;\n        this.source = source;\n        this.sourceSubscribed = false;\n    }\n    SubscriptionDelaySubscriber.prototype._next = function (unused) {\n        this.subscribeToSource();\n    };\n    SubscriptionDelaySubscriber.prototype._error = function (err) {\n        this.unsubscribe();\n        this.parent.error(err);\n    };\n    SubscriptionDelaySubscriber.prototype._complete = function () {\n        this.subscribeToSource();\n    };\n    SubscriptionDelaySubscriber.prototype.subscribeToSource = function () {\n        if (!this.sourceSubscribed) {\n            this.sourceSubscribed = true;\n            this.unsubscribe();\n            this.source.subscribe(this.parent);\n        }\n    };\n    return SubscriptionDelaySubscriber;\n}(Subscriber_1.Subscriber));\n//# sourceMappingURL=delayWhen.js.map\n\n/***/ },\n/* 904 */\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Subscriber_1 = __webpack_require__(26);\n/**\n * Converts an Observable of {@link Notification} objects into the emissions\n * that they represent.\n *\n * <span class=\"informal\">Unwraps {@link Notification} objects as actual `next`,\n * `error` and `complete` emissions. The opposite of {@link materialize}.</span>\n *\n * <img src=\"./img/dematerialize.png\" width=\"100%\">\n *\n * `dematerialize` is assumed to operate an Observable that only emits\n * {@link Notification} objects as `next` emissions, and does not emit any\n * `error`. Such Observable is the output of a `materialize` operation. Those\n * notifications are then unwrapped using the metadata they contain, and emitted\n * as `next`, `error`, and `complete` on the output Observable.\n *\n * Use this operator in conjunction with {@link materialize}.\n *\n * @example <caption>Convert an Observable of Notifications to an actual Observable</caption>\n * var notifA = new Rx.Notification('N', 'A');\n * var notifB = new Rx.Notification('N', 'B');\n * var notifE = new Rx.Notification('E', void 0,\n *   new TypeError('x.toUpperCase is not a function')\n * );\n * var materialized = Rx.Observable.of(notifA, notifB, notifE);\n * var upperCase = materialized.dematerialize();\n * upperCase.subscribe(x => console.log(x), e => console.error(e));\n *\n * @see {@link Notification}\n * @see {@link materialize}\n *\n * @return {Observable} An Observable that emits items and notifications\n * embedded in Notification objects emitted by the source Observable.\n * @method dematerialize\n * @owner Observable\n */\nfunction dematerialize() {\n    return this.lift(new DeMaterializeOperator());\n}\nexports.dematerialize = dematerialize;\nvar DeMaterializeOperator = (function () {\n    function DeMaterializeOperator() {\n    }\n    DeMaterializeOperator.prototype.call = function (subscriber, source) {\n        return source._subscribe(new DeMaterializeSubscriber(subscriber));\n    };\n    return DeMaterializeOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar DeMaterializeSubscriber = (function (_super) {\n    __extends(DeMaterializeSubscriber, _super);\n    function DeMaterializeSubscriber(destination) {\n        _super.call(this, destination);\n    }\n    DeMaterializeSubscriber.prototype._next = function (value) {\n        value.observe(this.destination);\n    };\n    return DeMaterializeSubscriber;\n}(Subscriber_1.Subscriber));\n//# sourceMappingURL=dematerialize.js.map\n\n/***/ },\n/* 905 */\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\"use strict\";\nvar distinct_1 = __webpack_require__(702);\n/**\n * Returns an Observable that emits all items emitted by the source Observable that are distinct by comparison from previous items,\n * using a property accessed by using the key provided to check if the two items are distinct.\n * If a comparator function is provided, then it will be called for each item to test for whether or not that value should be emitted.\n * If a comparator function is not provided, an equality check is used by default.\n * As the internal HashSet of this operator grows larger and larger, care should be taken in the domain of inputs this operator may see.\n * An optional parameter is also provided such that an Observable can be provided to queue the internal HashSet to flush the values it holds.\n * @param {string} key string key for object property lookup on each item.\n * @param {function} [compare] optional comparison function called to test if an item is distinct from previous items in the source.\n * @param {Observable} [flushes] optional Observable for flushing the internal HashSet of the operator.\n * @return {Observable} an Observable that emits items from the source Observable with distinct values.\n * @method distinctKey\n * @owner Observable\n */\nfunction distinctKey(key, compare, flushes) {\n    return distinct_1.distinct.call(this, function (x, y) {\n        if (compare) {\n            return compare(x[key], y[key]);\n        }\n        return x[key] === y[key];\n    }, flushes);\n}\nexports.distinctKey = distinctKey;\n//# sourceMappingURL=distinctKey.js.map\n\n/***/ },\n/* 906 */\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\"use strict\";\nvar distinctUntilChanged_1 = __webpack_require__(703);\n/**\n * Returns an Observable that emits all items emitted by the source Observable that are distinct by comparison from the previous item,\n * using a property accessed by using the key provided to check if the two items are distinct.\n * If a comparator function is provided, then it will be called for each item to test for whether or not that value should be emitted.\n * If a comparator function is not provided, an equality check is used by default.\n * @param {string} key string key for object property lookup on each item.\n * @param {function} [compare] optional comparison function called to test if an item is distinct from the previous item in the source.\n * @return {Observable} an Observable that emits items from the source Observable with distinct values based on the key specified.\n * @method distinctUntilKeyChanged\n * @owner Observable\n */\nfunction distinctUntilKeyChanged(key, compare) {\n    return distinctUntilChanged_1.distinctUntilChanged.call(this, function (x, y) {\n        if (compare) {\n            return compare(x[key], y[key]);\n        }\n        return x[key] === y[key];\n    });\n}\nexports.distinctUntilKeyChanged = distinctUntilKeyChanged;\n//# sourceMappingURL=distinctUntilKeyChanged.js.map\n\n/***/ },\n/* 907 */\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Subscriber_1 = __webpack_require__(26);\n/**\n * Perform a side effect for every emission on the source Observable, but return\n * an Observable that is identical to the source.\n *\n * <span class=\"informal\">Intercepts each emission on the source and runs a\n * function, but returns an output which is identical to the source.</span>\n *\n * <img src=\"./img/do.png\" width=\"100%\">\n *\n * Returns a mirrored Observable of the source Observable, but modified so that\n * the provided Observer is called to perform a side effect for every value,\n * error, and completion emitted by the source. Any errors that are thrown in\n * the aforementioned Observer or handlers are safely sent down the error path\n * of the output Observable.\n *\n * This operator is useful for debugging your Observables for the correct values\n * or performing other side effects.\n *\n * Note: this is different to a `subscribe` on the Observable. If the Observable\n * returned by `do` is not subscribed, the side effects specified by the\n * Observer will never happen. `do` therefore simply spies on existing\n * execution, it does not trigger an execution to happen like `subscribe` does.\n *\n * @example <caption>Map every every click to the clientX position of that click, while also logging the click event</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var positions = clicks\n *   .do(ev => console.log(ev))\n *   .map(ev => ev.clientX);\n * positions.subscribe(x => console.log(x));\n *\n * @see {@link map}\n * @see {@link subscribe}\n *\n * @param {Observer|function} [nextOrObserver] A normal Observer object or a\n * callback for `next`.\n * @param {function} [error] Callback for errors in the source.\n * @param {function} [complete] Callback for the completion of the source.\n * @return {Observable} An Observable identical to the source, but runs the\n * specified Observer or callback(s) for each item.\n * @method do\n * @name do\n * @owner Observable\n */\nfunction _do(nextOrObserver, error, complete) {\n    return this.lift(new DoOperator(nextOrObserver, error, complete));\n}\nexports._do = _do;\nvar DoOperator = (function () {\n    function DoOperator(nextOrObserver, error, complete) {\n        this.nextOrObserver = nextOrObserver;\n        this.error = error;\n        this.complete = complete;\n    }\n    DoOperator.prototype.call = function (subscriber, source) {\n        return source._subscribe(new DoSubscriber(subscriber, this.nextOrObserver, this.error, this.complete));\n    };\n    return DoOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar DoSubscriber = (function (_super) {\n    __extends(DoSubscriber, _super);\n    function DoSubscriber(destination, nextOrObserver, error, complete) {\n        _super.call(this, destination);\n        var safeSubscriber = new Subscriber_1.Subscriber(nextOrObserver, error, complete);\n        safeSubscriber.syncErrorThrowable = true;\n        this.add(safeSubscriber);\n        this.safeSubscriber = safeSubscriber;\n    }\n    DoSubscriber.prototype._next = function (value) {\n        var safeSubscriber = this.safeSubscriber;\n        safeSubscriber.next(value);\n        if (safeSubscriber.syncErrorThrown) {\n            this.destination.error(safeSubscriber.syncErrorValue);\n        }\n        else {\n            this.destination.next(value);\n        }\n    };\n    DoSubscriber.prototype._error = function (err) {\n        var safeSubscriber = this.safeSubscriber;\n        safeSubscriber.error(err);\n        if (safeSubscriber.syncErrorThrown) {\n            this.destination.error(safeSubscriber.syncErrorValue);\n        }\n        else {\n            this.destination.error(err);\n        }\n    };\n    DoSubscriber.prototype._complete = function () {\n        var safeSubscriber = this.safeSubscriber;\n        safeSubscriber.complete();\n        if (safeSubscriber.syncErrorThrown) {\n            this.destination.error(safeSubscriber.syncErrorValue);\n        }\n        else {\n            this.destination.complete();\n        }\n    };\n    return DoSubscriber;\n}(Subscriber_1.Subscriber));\n//# sourceMappingURL=do.js.map\n\n/***/ },\n/* 908 */\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Subscriber_1 = __webpack_require__(26);\nvar ArgumentOutOfRangeError_1 = __webpack_require__(692);\n/**\n * Emits the single value at the specified `index` in a sequence of emissions\n * from the source Observable.\n *\n * <span class=\"informal\">Emits only the i-th value, then completes.</span>\n *\n * <img src=\"./img/elementAt.png\" width=\"100%\">\n *\n * `elementAt` returns an Observable that emits the item at the specified\n * `index` in the source Observable, or a default value if that `index` is out\n * of range and the `default` argument is provided. If the `default` argument is\n * not given and the `index` is out of range, the output Observable will emit an\n * `ArgumentOutOfRangeError` error.\n *\n * @example <caption>Emit only the third click event</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.elementAt(2);\n * result.subscribe(x => console.log(x));\n *\n * @see {@link first}\n * @see {@link last}\n * @see {@link skip}\n * @see {@link single}\n * @see {@link take}\n *\n * @throws {ArgumentOutOfRangeError} When using `elementAt(i)`, it delivers an\n * ArgumentOutOrRangeError to the Observer's `error` callback if `i < 0` or the\n * Observable has completed before emitting the i-th `next` notification.\n *\n * @param {number} index Is the number `i` for the i-th source emission that has\n * happened since the subscription, starting from the number `0`.\n * @param {T} [defaultValue] The default value returned for missing indices.\n * @return {Observable} An Observable that emits a single item, if it is found.\n * Otherwise, will emit the default value if given. If not, then emits an error.\n * @method elementAt\n * @owner Observable\n */\nfunction elementAt(index, defaultValue) {\n    return this.lift(new ElementAtOperator(index, defaultValue));\n}\nexports.elementAt = elementAt;\nvar ElementAtOperator = (function () {\n    function ElementAtOperator(index, defaultValue) {\n        this.index = index;\n        this.defaultValue = defaultValue;\n        if (index < 0) {\n            throw new ArgumentOutOfRangeError_1.ArgumentOutOfRangeError;\n        }\n    }\n    ElementAtOperator.prototype.call = function (subscriber, source) {\n        return source._subscribe(new ElementAtSubscriber(subscriber, this.index, this.defaultValue));\n    };\n    return ElementAtOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar ElementAtSubscriber = (function (_super) {\n    __extends(ElementAtSubscriber, _super);\n    function ElementAtSubscriber(destination, index, defaultValue) {\n        _super.call(this, destination);\n        this.index = index;\n        this.defaultValue = defaultValue;\n    }\n    ElementAtSubscriber.prototype._next = function (x) {\n        if (this.index-- === 0) {\n            this.destination.next(x);\n            this.destination.complete();\n        }\n    };\n    ElementAtSubscriber.prototype._complete = function () {\n        var destination = this.destination;\n        if (this.index >= 0) {\n            if (typeof this.defaultValue !== 'undefined') {\n                destination.next(this.defaultValue);\n            }\n            else {\n                destination.error(new ArgumentOutOfRangeError_1.ArgumentOutOfRangeError);\n            }\n        }\n        destination.complete();\n    };\n    return ElementAtSubscriber;\n}(Subscriber_1.Subscriber));\n//# sourceMappingURL=elementAt.js.map\n\n/***/ },\n/* 909 */\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar OuterSubscriber_1 = __webpack_require__(145);\nvar subscribeToResult_1 = __webpack_require__(146);\n/**\n * Converts a higher-order Observable into a first-order Observable by dropping\n * inner Observables while the previous inner Observable has not yet completed.\n *\n * <span class=\"informal\">Flattens an Observable-of-Observables by dropping the\n * next inner Observables while the current inner is still executing.</span>\n *\n * <img src=\"./img/exhaust.png\" width=\"100%\">\n *\n * `exhaust` subscribes to an Observable that emits Observables, also known as a\n * higher-order Observable. Each time it observes one of these emitted inner\n * Observables, the output Observable begins emitting the items emitted by that\n * inner Observable. So far, it behaves like {@link mergeAll}. However,\n * `exhaust` ignores every new inner Observable if the previous Observable has\n * not yet completed. Once that one completes, it will accept and flatten the\n * next inner Observable and repeat this process.\n *\n * @example <caption>Run a finite timer for each click, only if there is no currently active timer</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var higherOrder = clicks.map((ev) => Rx.Observable.interval(1000));\n * var result = higherOrder.exhaust();\n * result.subscribe(x => console.log(x));\n *\n * @see {@link combineAll}\n * @see {@link concatAll}\n * @see {@link switch}\n * @see {@link mergeAll}\n * @see {@link exhaustMap}\n * @see {@link zipAll}\n *\n * @return {Observable} Returns an Observable that takes a source of Observables\n * and propagates the first observable exclusively until it completes before\n * subscribing to the next.\n * @method exhaust\n * @owner Observable\n */\nfunction exhaust() {\n    return this.lift(new SwitchFirstOperator());\n}\nexports.exhaust = exhaust;\nvar SwitchFirstOperator = (function () {\n    function SwitchFirstOperator() {\n    }\n    SwitchFirstOperator.prototype.call = function (subscriber, source) {\n        return source._subscribe(new SwitchFirstSubscriber(subscriber));\n    };\n    return SwitchFirstOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar SwitchFirstSubscriber = (function (_super) {\n    __extends(SwitchFirstSubscriber, _super);\n    function SwitchFirstSubscriber(destination) {\n        _super.call(this, destination);\n        this.hasCompleted = false;\n        this.hasSubscription = false;\n    }\n    SwitchFirstSubscriber.prototype._next = function (value) {\n        if (!this.hasSubscription) {\n            this.hasSubscription = true;\n            this.add(subscribeToResult_1.subscribeToResult(this, value));\n        }\n    };\n    SwitchFirstSubscriber.prototype._complete = function () {\n        this.hasCompleted = true;\n        if (!this.hasSubscription) {\n            this.destination.complete();\n        }\n    };\n    SwitchFirstSubscriber.prototype.notifyComplete = function (innerSub) {\n        this.remove(innerSub);\n        this.hasSubscription = false;\n        if (this.hasCompleted) {\n            this.destination.complete();\n        }\n    };\n    return SwitchFirstSubscriber;\n}(OuterSubscriber_1.OuterSubscriber));\n//# sourceMappingURL=exhaust.js.map\n\n/***/ },\n/* 910 */\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar OuterSubscriber_1 = __webpack_require__(145);\nvar subscribeToResult_1 = __webpack_require__(146);\n/**\n * Projects each source value to an Observable which is merged in the output\n * Observable only if the previous projected Observable has completed.\n *\n * <span class=\"informal\">Maps each value to an Observable, then flattens all of\n * these inner Observables using {@link exhaust}.</span>\n *\n * <img src=\"./img/exhaustMap.png\" width=\"100%\">\n *\n * Returns an Observable that emits items based on applying a function that you\n * supply to each item emitted by the source Observable, where that function\n * returns an (so-called \"inner\") Observable. When it projects a source value to\n * an Observable, the output Observable begins emitting the items emitted by\n * that projected Observable. However, `exhaustMap` ignores every new projected\n * Observable if the previous projected Observable has not yet completed. Once\n * that one completes, it will accept and flatten the next projected Observable\n * and repeat this process.\n *\n * @example <caption>Run a finite timer for each click, only if there is no currently active timer</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.exhaustMap((ev) => Rx.Observable.interval(1000));\n * result.subscribe(x => console.log(x));\n *\n * @see {@link concatMap}\n * @see {@link exhaust}\n * @see {@link mergeMap}\n * @see {@link switchMap}\n *\n * @param {function(value: T, ?index: number): Observable} project A function\n * that, when applied to an item emitted by the source Observable, returns an\n * Observable.\n * @param {function(outerValue: T, innerValue: I, outerIndex: number, innerIndex: number): any} [resultSelector]\n * A function to produce the value on the output Observable based on the values\n * and the indices of the source (outer) emission and the inner Observable\n * emission. The arguments passed to this function are:\n * - `outerValue`: the value that came from the source\n * - `innerValue`: the value that came from the projected Observable\n * - `outerIndex`: the \"index\" of the value that came from the source\n * - `innerIndex`: the \"index\" of the value from the projected Observable\n * @return {Observable} An Observable containing projected Observables\n * of each item of the source, ignoring projected Observables that start before\n * their preceding Observable has completed.\n * @method exhaustMap\n * @owner Observable\n */\nfunction exhaustMap(project, resultSelector) {\n    return this.lift(new SwitchFirstMapOperator(project, resultSelector));\n}\nexports.exhaustMap = exhaustMap;\nvar SwitchFirstMapOperator = (function () {\n    function SwitchFirstMapOperator(project, resultSelector) {\n        this.project = project;\n        this.resultSelector = resultSelector;\n    }\n    SwitchFirstMapOperator.prototype.call = function (subscriber, source) {\n        return source._subscribe(new SwitchFirstMapSubscriber(subscriber, this.project, this.resultSelector));\n    };\n    return SwitchFirstMapOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar SwitchFirstMapSubscriber = (function (_super) {\n    __extends(SwitchFirstMapSubscriber, _super);\n    function SwitchFirstMapSubscriber(destination, project, resultSelector) {\n        _super.call(this, destination);\n        this.project = project;\n        this.resultSelector = resultSelector;\n        this.hasSubscription = false;\n        this.hasCompleted = false;\n        this.index = 0;\n    }\n    SwitchFirstMapSubscriber.prototype._next = function (value) {\n        if (!this.hasSubscription) {\n            this.tryNext(value);\n        }\n    };\n    SwitchFirstMapSubscriber.prototype.tryNext = function (value) {\n        var index = this.index++;\n        var destination = this.destination;\n        try {\n            var result = this.project(value, index);\n            this.hasSubscription = true;\n            this.add(subscribeToResult_1.subscribeToResult(this, result, value, index));\n        }\n        catch (err) {\n            destination.error(err);\n        }\n    };\n    SwitchFirstMapSubscriber.prototype._complete = function () {\n        this.hasCompleted = true;\n        if (!this.hasSubscription) {\n            this.destination.complete();\n        }\n    };\n    SwitchFirstMapSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {\n        var _a = this, resultSelector = _a.resultSelector, destination = _a.destination;\n        if (resultSelector) {\n            this.trySelectResult(outerValue, innerValue, outerIndex, innerIndex);\n        }\n        else {\n            destination.next(innerValue);\n        }\n    };\n    SwitchFirstMapSubscriber.prototype.trySelectResult = function (outerValue, innerValue, outerIndex, innerIndex) {\n        var _a = this, resultSelector = _a.resultSelector, destination = _a.destination;\n        try {\n            var result = resultSelector(outerValue, innerValue, outerIndex, innerIndex);\n            destination.next(result);\n        }\n        catch (err) {\n            destination.error(err);\n        }\n    };\n    SwitchFirstMapSubscriber.prototype.notifyError = function (err) {\n        this.destination.error(err);\n    };\n    SwitchFirstMapSubscriber.prototype.notifyComplete = function (innerSub) {\n        this.remove(innerSub);\n        this.hasSubscription = false;\n        if (this.hasCompleted) {\n            this.destination.complete();\n        }\n    };\n    return SwitchFirstMapSubscriber;\n}(OuterSubscriber_1.OuterSubscriber));\n//# sourceMappingURL=exhaustMap.js.map\n\n/***/ },\n/* 911 */\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar tryCatch_1 = __webpack_require__(380);\nvar errorObject_1 = __webpack_require__(231);\nvar OuterSubscriber_1 = __webpack_require__(145);\nvar subscribeToResult_1 = __webpack_require__(146);\n/**\n * Recursively projects each source value to an Observable which is merged in\n * the output Observable.\n *\n * <span class=\"informal\">It's similar to {@link mergeMap}, but applies the\n * projection function to every source value as well as every output value.\n * It's recursive.</span>\n *\n * <img src=\"./img/expand.png\" width=\"100%\">\n *\n * Returns an Observable that emits items based on applying a function that you\n * supply to each item emitted by the source Observable, where that function\n * returns an Observable, and then merging those resulting Observables and\n * emitting the results of this merger. *Expand* will re-emit on the output\n * Observable every source value. Then, each output value is given to the\n * `project` function which returns an inner Observable to be merged on the\n * output Observable. Those output values resulting from the projection are also\n * given to the `project` function to produce new output values. This is how\n * *expand* behaves recursively.\n *\n * @example <caption>Start emitting the powers of two on every click, at most 10 of them</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var powersOfTwo = clicks\n *   .mapTo(1)\n *   .expand(x => Rx.Observable.of(2 * x).delay(1000))\n *   .take(10);\n * powersOfTwo.subscribe(x => console.log(x));\n *\n * @see {@link mergeMap}\n * @see {@link mergeScan}\n *\n * @param {function(value: T, index: number) => Observable} project A function\n * that, when applied to an item emitted by the source or the output Observable,\n * returns an Observable.\n * @param {number} [concurrent=Number.POSITIVE_INFINITY] Maximum number of input\n * Observables being subscribed to concurrently.\n * @param {Scheduler} [scheduler=null] The Scheduler to use for subscribing to\n * each projected inner Observable.\n * @return {Observable} An Observable that emits the source values and also\n * result of applying the projection function to each value emitted on the\n * output Observable and and merging the results of the Observables obtained\n * from this transformation.\n * @method expand\n * @owner Observable\n */\nfunction expand(project, concurrent, scheduler) {\n    if (concurrent === void 0) { concurrent = Number.POSITIVE_INFINITY; }\n    if (scheduler === void 0) { scheduler = undefined; }\n    concurrent = (concurrent || 0) < 1 ? Number.POSITIVE_INFINITY : concurrent;\n    return this.lift(new ExpandOperator(project, concurrent, scheduler));\n}\nexports.expand = expand;\nvar ExpandOperator = (function () {\n    function ExpandOperator(project, concurrent, scheduler) {\n        this.project = project;\n        this.concurrent = concurrent;\n        this.scheduler = scheduler;\n    }\n    ExpandOperator.prototype.call = function (subscriber, source) {\n        return source._subscribe(new ExpandSubscriber(subscriber, this.project, this.concurrent, this.scheduler));\n    };\n    return ExpandOperator;\n}());\nexports.ExpandOperator = ExpandOperator;\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar ExpandSubscriber = (function (_super) {\n    __extends(ExpandSubscriber, _super);\n    function ExpandSubscriber(destination, project, concurrent, scheduler) {\n        _super.call(this, destination);\n        this.project = project;\n        this.concurrent = concurrent;\n        this.scheduler = scheduler;\n        this.index = 0;\n        this.active = 0;\n        this.hasCompleted = false;\n        if (concurrent < Number.POSITIVE_INFINITY) {\n            this.buffer = [];\n        }\n    }\n    ExpandSubscriber.dispatch = function (arg) {\n        var subscriber = arg.subscriber, result = arg.result, value = arg.value, index = arg.index;\n        subscriber.subscribeToProjection(result, value, index);\n    };\n    ExpandSubscriber.prototype._next = function (value) {\n        var destination = this.destination;\n        if (destination.closed) {\n            this._complete();\n            return;\n        }\n        var index = this.index++;\n        if (this.active < this.concurrent) {\n            destination.next(value);\n            var result = tryCatch_1.tryCatch(this.project)(value, index);\n            if (result === errorObject_1.errorObject) {\n                destination.error(errorObject_1.errorObject.e);\n            }\n            else if (!this.scheduler) {\n                this.subscribeToProjection(result, value, index);\n            }\n            else {\n                var state = { subscriber: this, result: result, value: value, index: index };\n                this.add(this.scheduler.schedule(ExpandSubscriber.dispatch, 0, state));\n            }\n        }\n        else {\n            this.buffer.push(value);\n        }\n    };\n    ExpandSubscriber.prototype.subscribeToProjection = function (result, value, index) {\n        this.active++;\n        this.add(subscribeToResult_1.subscribeToResult(this, result, value, index));\n    };\n    ExpandSubscriber.prototype._complete = function () {\n        this.hasCompleted = true;\n        if (this.hasCompleted && this.active === 0) {\n            this.destination.complete();\n        }\n    };\n    ExpandSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {\n        this._next(innerValue);\n    };\n    ExpandSubscriber.prototype.notifyComplete = function (innerSub) {\n        var buffer = this.buffer;\n        this.remove(innerSub);\n        this.active--;\n        if (buffer && buffer.length > 0) {\n            this._next(buffer.shift());\n        }\n        if (this.hasCompleted && this.active === 0) {\n            this.destination.complete();\n        }\n    };\n    return ExpandSubscriber;\n}(OuterSubscriber_1.OuterSubscriber));\nexports.ExpandSubscriber = ExpandSubscriber;\n//# sourceMappingURL=expand.js.map\n\n/***/ },\n/* 912 */\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Subscriber_1 = __webpack_require__(26);\nvar Subscription_1 = __webpack_require__(147);\n/**\n * Returns an Observable that mirrors the source Observable, but will call a specified function when\n * the source terminates on complete or error.\n * @param {function} callback function to be called when source terminates.\n * @return {Observable} an Observable that mirrors the source, but will call the specified function on termination.\n * @method finally\n * @owner Observable\n */\nfunction _finally(callback) {\n    return this.lift(new FinallyOperator(callback));\n}\nexports._finally = _finally;\nvar FinallyOperator = (function () {\n    function FinallyOperator(callback) {\n        this.callback = callback;\n    }\n    FinallyOperator.prototype.call = function (subscriber, source) {\n        return source._subscribe(new FinallySubscriber(subscriber, this.callback));\n    };\n    return FinallyOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar FinallySubscriber = (function (_super) {\n    __extends(FinallySubscriber, _super);\n    function FinallySubscriber(destination, callback) {\n        _super.call(this, destination);\n        this.add(new Subscription_1.Subscription(callback));\n    }\n    return FinallySubscriber;\n}(Subscriber_1.Subscriber));\n//# sourceMappingURL=finally.js.map\n\n/***/ },\n/* 913 */\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\"use strict\";\nvar find_1 = __webpack_require__(704);\n/**\n * Emits only the index of the first value emitted by the source Observable that\n * meets some condition.\n *\n * <span class=\"informal\">It's like {@link find}, but emits the index of the\n * found value, not the value itself.</span>\n *\n * <img src=\"./img/findIndex.png\" width=\"100%\">\n *\n * `findIndex` searches for the first item in the source Observable that matches\n * the specified condition embodied by the `predicate`, and returns the\n * (zero-based) index of the first occurrence in the source. Unlike\n * {@link first}, the `predicate` is required in `findIndex`, and does not emit\n * an error if a valid value is not found.\n *\n * @example <caption>Emit the index of first click that happens on a DIV element</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.findIndex(ev => ev.target.tagName === 'DIV');\n * result.subscribe(x => console.log(x));\n *\n * @see {@link filter}\n * @see {@link find}\n * @see {@link first}\n * @see {@link take}\n *\n * @param {function(value: T, index: number, source: Observable<T>): boolean} predicate\n * A function called with each item to test for condition matching.\n * @param {any} [thisArg] An optional argument to determine the value of `this`\n * in the `predicate` function.\n * @return {Observable} An Observable of the index of the first item that\n * matches the condition.\n * @method find\n * @owner Observable\n */\nfunction findIndex(predicate, thisArg) {\n    return this.lift(new find_1.FindValueOperator(predicate, this, true, thisArg));\n}\nexports.findIndex = findIndex;\n//# sourceMappingURL=findIndex.js.map\n\n/***/ },\n/* 914 */\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Subscriber_1 = __webpack_require__(26);\nvar Subscription_1 = __webpack_require__(147);\nvar Observable_1 = __webpack_require__(14);\nvar Subject_1 = __webpack_require__(66);\nvar Map_1 = __webpack_require__(978);\nvar FastMap_1 = __webpack_require__(976);\n/**\n * Groups the items emitted by an Observable according to a specified criterion,\n * and emits these grouped items as `GroupedObservables`, one\n * {@link GroupedObservable} per group.\n *\n * <img src=\"./img/groupBy.png\" width=\"100%\">\n *\n * @param {function(value: T): K} keySelector a function that extracts the key\n * for each item.\n * @param {function(value: T): R} [elementSelector] a function that extracts the\n * return element for each item.\n * @param {function(grouped: GroupedObservable<K,R>): Observable<any>} [durationSelector]\n * a function that returns an Observable to determine how long each group should\n * exist.\n * @return {Observable<GroupedObservable<K,R>>} an Observable that emits\n * GroupedObservables, each of which corresponds to a unique key value and each\n * of which emits those items from the source Observable that share that key\n * value.\n * @method groupBy\n * @owner Observable\n */\nfunction groupBy(keySelector, elementSelector, durationSelector) {\n    return this.lift(new GroupByOperator(this, keySelector, elementSelector, durationSelector));\n}\nexports.groupBy = groupBy;\nvar GroupByOperator = (function () {\n    function GroupByOperator(source, keySelector, elementSelector, durationSelector) {\n        this.source = source;\n        this.keySelector = keySelector;\n        this.elementSelector = elementSelector;\n        this.durationSelector = durationSelector;\n    }\n    GroupByOperator.prototype.call = function (subscriber, source) {\n        return source._subscribe(new GroupBySubscriber(subscriber, this.keySelector, this.elementSelector, this.durationSelector));\n    };\n    return GroupByOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar GroupBySubscriber = (function (_super) {\n    __extends(GroupBySubscriber, _super);\n    function GroupBySubscriber(destination, keySelector, elementSelector, durationSelector) {\n        _super.call(this, destination);\n        this.keySelector = keySelector;\n        this.elementSelector = elementSelector;\n        this.durationSelector = durationSelector;\n        this.groups = null;\n        this.attemptedToUnsubscribe = false;\n        this.count = 0;\n    }\n    GroupBySubscriber.prototype._next = function (value) {\n        var key;\n        try {\n            key = this.keySelector(value);\n        }\n        catch (err) {\n            this.error(err);\n            return;\n        }\n        this._group(value, key);\n    };\n    GroupBySubscriber.prototype._group = function (value, key) {\n        var groups = this.groups;\n        if (!groups) {\n            groups = this.groups = typeof key === 'string' ? new FastMap_1.FastMap() : new Map_1.Map();\n        }\n        var group = groups.get(key);\n        var element;\n        if (this.elementSelector) {\n            try {\n                element = this.elementSelector(value);\n            }\n            catch (err) {\n                this.error(err);\n            }\n        }\n        else {\n            element = value;\n        }\n        if (!group) {\n            groups.set(key, group = new Subject_1.Subject());\n            var groupedObservable = new GroupedObservable(key, group, this);\n            this.destination.next(groupedObservable);\n            if (this.durationSelector) {\n                var duration = void 0;\n                try {\n                    duration = this.durationSelector(new GroupedObservable(key, group));\n                }\n                catch (err) {\n                    this.error(err);\n                    return;\n                }\n                this.add(duration.subscribe(new GroupDurationSubscriber(key, group, this)));\n            }\n        }\n        if (!group.closed) {\n            group.next(element);\n        }\n    };\n    GroupBySubscriber.prototype._error = function (err) {\n        var groups = this.groups;\n        if (groups) {\n            groups.forEach(function (group, key) {\n                group.error(err);\n            });\n            groups.clear();\n        }\n        this.destination.error(err);\n    };\n    GroupBySubscriber.prototype._complete = function () {\n        var groups = this.groups;\n        if (groups) {\n            groups.forEach(function (group, key) {\n                group.complete();\n            });\n            groups.clear();\n        }\n        this.destination.complete();\n    };\n    GroupBySubscriber.prototype.removeGroup = function (key) {\n        this.groups.delete(key);\n    };\n    GroupBySubscriber.prototype.unsubscribe = function () {\n        if (!this.closed && !this.attemptedToUnsubscribe) {\n            this.attemptedToUnsubscribe = true;\n            if (this.count === 0) {\n                _super.prototype.unsubscribe.call(this);\n            }\n        }\n    };\n    return GroupBySubscriber;\n}(Subscriber_1.Subscriber));\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar GroupDurationSubscriber = (function (_super) {\n    __extends(GroupDurationSubscriber, _super);\n    function GroupDurationSubscriber(key, group, parent) {\n        _super.call(this);\n        this.key = key;\n        this.group = group;\n        this.parent = parent;\n    }\n    GroupDurationSubscriber.prototype._next = function (value) {\n        this._complete();\n    };\n    GroupDurationSubscriber.prototype._error = function (err) {\n        var group = this.group;\n        if (!group.closed) {\n            group.error(err);\n        }\n        this.parent.removeGroup(this.key);\n    };\n    GroupDurationSubscriber.prototype._complete = function () {\n        var group = this.group;\n        if (!group.closed) {\n            group.complete();\n        }\n        this.parent.removeGroup(this.key);\n    };\n    return GroupDurationSubscriber;\n}(Subscriber_1.Subscriber));\n/**\n * An Observable representing values belonging to the same group represented by\n * a common key. The values emitted by a GroupedObservable come from the source\n * Observable. The common key is available as the field `key` on a\n * GroupedObservable instance.\n *\n * @class GroupedObservable<K, T>\n */\nvar GroupedObservable = (function (_super) {\n    __extends(GroupedObservable, _super);\n    function GroupedObservable(key, groupSubject, refCountSubscription) {\n        _super.call(this);\n        this.key = key;\n        this.groupSubject = groupSubject;\n        this.refCountSubscription = refCountSubscription;\n    }\n    GroupedObservable.prototype._subscribe = function (subscriber) {\n        var subscription = new Subscription_1.Subscription();\n        var _a = this, refCountSubscription = _a.refCountSubscription, groupSubject = _a.groupSubject;\n        if (refCountSubscription && !refCountSubscription.closed) {\n            subscription.add(new InnerRefCountSubscription(refCountSubscription));\n        }\n        subscription.add(groupSubject.subscribe(subscriber));\n        return subscription;\n    };\n    return GroupedObservable;\n}(Observable_1.Observable));\nexports.GroupedObservable = GroupedObservable;\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar InnerRefCountSubscription = (function (_super) {\n    __extends(InnerRefCountSubscription, _super);\n    function InnerRefCountSubscription(parent) {\n        _super.call(this);\n        this.parent = parent;\n        parent.count++;\n    }\n    InnerRefCountSubscription.prototype.unsubscribe = function () {\n        var parent = this.parent;\n        if (!parent.closed && !this.closed) {\n            _super.prototype.unsubscribe.call(this);\n            parent.count -= 1;\n            if (parent.count === 0 && parent.attemptedToUnsubscribe) {\n                parent.unsubscribe();\n            }\n        }\n    };\n    return InnerRefCountSubscription;\n}(Subscription_1.Subscription));\n//# sourceMappingURL=groupBy.js.map\n\n/***/ },\n/* 915 */\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Subscriber_1 = __webpack_require__(26);\nvar noop_1 = __webpack_require__(717);\n/**\n * Ignores all items emitted by the source Observable and only passes calls of `complete` or `error`.\n *\n * <img src=\"./img/ignoreElements.png\" width=\"100%\">\n *\n * @return {Observable} an empty Observable that only calls `complete`\n * or `error`, based on which one is called by the source Observable.\n * @method ignoreElements\n * @owner Observable\n */\nfunction ignoreElements() {\n    return this.lift(new IgnoreElementsOperator());\n}\nexports.ignoreElements = ignoreElements;\n;\nvar IgnoreElementsOperator = (function () {\n    function IgnoreElementsOperator() {\n    }\n    IgnoreElementsOperator.prototype.call = function (subscriber, source) {\n        return source._subscribe(new IgnoreElementsSubscriber(subscriber));\n    };\n    return IgnoreElementsOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar IgnoreElementsSubscriber = (function (_super) {\n    __extends(IgnoreElementsSubscriber, _super);\n    function IgnoreElementsSubscriber() {\n        _super.apply(this, arguments);\n    }\n    IgnoreElementsSubscriber.prototype._next = function (unused) {\n        noop_1.noop();\n    };\n    return IgnoreElementsSubscriber;\n}(Subscriber_1.Subscriber));\n//# sourceMappingURL=ignoreElements.js.map\n\n/***/ },\n/* 916 */\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Subscriber_1 = __webpack_require__(26);\n/**\n * If the source Observable is empty it returns an Observable that emits true, otherwise it emits false.\n *\n * <img src=\"./img/isEmpty.png\" width=\"100%\">\n *\n * @return {Observable} an Observable that emits a Boolean.\n * @method isEmpty\n * @owner Observable\n */\nfunction isEmpty() {\n    return this.lift(new IsEmptyOperator());\n}\nexports.isEmpty = isEmpty;\nvar IsEmptyOperator = (function () {\n    function IsEmptyOperator() {\n    }\n    IsEmptyOperator.prototype.call = function (observer, source) {\n        return source._subscribe(new IsEmptySubscriber(observer));\n    };\n    return IsEmptyOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar IsEmptySubscriber = (function (_super) {\n    __extends(IsEmptySubscriber, _super);\n    function IsEmptySubscriber(destination) {\n        _super.call(this, destination);\n    }\n    IsEmptySubscriber.prototype.notifyComplete = function (isEmpty) {\n        var destination = this.destination;\n        destination.next(isEmpty);\n        destination.complete();\n    };\n    IsEmptySubscriber.prototype._next = function (value) {\n        this.notifyComplete(false);\n    };\n    IsEmptySubscriber.prototype._complete = function () {\n        this.notifyComplete(true);\n    };\n    return IsEmptySubscriber;\n}(Subscriber_1.Subscriber));\n//# sourceMappingURL=isEmpty.js.map\n\n/***/ },\n/* 917 */\n/***/ function(module, exports) {\n\n\"use strict\";\n\"use strict\";\n/**\n * @param func\n * @return {Observable<R>}\n * @method let\n * @owner Observable\n */\nfunction letProto(func) {\n    return func(this);\n}\nexports.letProto = letProto;\n//# sourceMappingURL=let.js.map\n\n/***/ },\n/* 918 */\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Subscriber_1 = __webpack_require__(26);\n/**\n * Emits the given constant value on the output Observable every time the source\n * Observable emits a value.\n *\n * <span class=\"informal\">Like {@link map}, but it maps every source value to\n * the same output value every time.</span>\n *\n * <img src=\"./img/mapTo.png\" width=\"100%\">\n *\n * Takes a constant `value` as argument, and emits that whenever the source\n * Observable emits a value. In other words, ignores the actual source value,\n * and simply uses the emission moment to know when to emit the given `value`.\n *\n * @example <caption>Map every every click to the string 'Hi'</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var greetings = clicks.mapTo('Hi');\n * greetings.subscribe(x => console.log(x));\n *\n * @see {@link map}\n *\n * @param {any} value The value to map each source value to.\n * @return {Observable} An Observable that emits the given `value` every time\n * the source Observable emits something.\n * @method mapTo\n * @owner Observable\n */\nfunction mapTo(value) {\n    return this.lift(new MapToOperator(value));\n}\nexports.mapTo = mapTo;\nvar MapToOperator = (function () {\n    function MapToOperator(value) {\n        this.value = value;\n    }\n    MapToOperator.prototype.call = function (subscriber, source) {\n        return source._subscribe(new MapToSubscriber(subscriber, this.value));\n    };\n    return MapToOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar MapToSubscriber = (function (_super) {\n    __extends(MapToSubscriber, _super);\n    function MapToSubscriber(destination, value) {\n        _super.call(this, destination);\n        this.value = value;\n    }\n    MapToSubscriber.prototype._next = function (x) {\n        this.destination.next(this.value);\n    };\n    return MapToSubscriber;\n}(Subscriber_1.Subscriber));\n//# sourceMappingURL=mapTo.js.map\n\n/***/ },\n/* 919 */\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Subscriber_1 = __webpack_require__(26);\nvar Notification_1 = __webpack_require__(382);\n/**\n * Represents all of the notifications from the source Observable as `next`\n * emissions marked with their original types within {@link Notification}\n * objects.\n *\n * <span class=\"informal\">Wraps `next`, `error` and `complete` emissions in\n * {@link Notification} objects, emitted as `next` on the output Observable.\n * </span>\n *\n * <img src=\"./img/materialize.png\" width=\"100%\">\n *\n * `materialize` returns an Observable that emits a `next` notification for each\n * `next`, `error`, or `complete` emission of the source Observable. When the\n * source Observable emits `complete`, the output Observable will emit `next` as\n * a Notification of type \"complete\", and then it will emit `complete` as well.\n * When the source Observable emits `error`, the output will emit `next` as a\n * Notification of type \"error\", and then `complete`.\n *\n * This operator is useful for producing metadata of the source Observable, to\n * be consumed as `next` emissions. Use it in conjunction with\n * {@link dematerialize}.\n *\n * @example <caption>Convert a faulty Observable to an Observable of Notifications</caption>\n * var letters = Rx.Observable.of('a', 'b', 13, 'd');\n * var upperCase = letters.map(x => x.toUpperCase());\n * var materialized = upperCase.materialize();\n * materialized.subscribe(x => console.log(x));\n *\n * @see {@link Notification}\n * @see {@link dematerialize}\n *\n * @return {Observable<Notification<T>>} An Observable that emits\n * {@link Notification} objects that wrap the original emissions from the source\n * Observable with metadata.\n * @method materialize\n * @owner Observable\n */\nfunction materialize() {\n    return this.lift(new MaterializeOperator());\n}\nexports.materialize = materialize;\nvar MaterializeOperator = (function () {\n    function MaterializeOperator() {\n    }\n    MaterializeOperator.prototype.call = function (subscriber, source) {\n        return source._subscribe(new MaterializeSubscriber(subscriber));\n    };\n    return MaterializeOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar MaterializeSubscriber = (function (_super) {\n    __extends(MaterializeSubscriber, _super);\n    function MaterializeSubscriber(destination) {\n        _super.call(this, destination);\n    }\n    MaterializeSubscriber.prototype._next = function (value) {\n        this.destination.next(Notification_1.Notification.createNext(value));\n    };\n    MaterializeSubscriber.prototype._error = function (err) {\n        var destination = this.destination;\n        destination.next(Notification_1.Notification.createError(err));\n        destination.complete();\n    };\n    MaterializeSubscriber.prototype._complete = function () {\n        var destination = this.destination;\n        destination.next(Notification_1.Notification.createComplete());\n        destination.complete();\n    };\n    return MaterializeSubscriber;\n}(Subscriber_1.Subscriber));\n//# sourceMappingURL=materialize.js.map\n\n/***/ },\n/* 920 */\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\"use strict\";\nvar reduce_1 = __webpack_require__(383);\n/**\n * The Max operator operates on an Observable that emits numbers (or items that can be evaluated as numbers),\n * and when source Observable completes it emits a single item: the item with the largest number.\n *\n * <img src=\"./img/max.png\" width=\"100%\">\n *\n * @param {Function} optional comparer function that it will use instead of its default to compare the value of two\n * items.\n * @return {Observable} an Observable that emits item with the largest number.\n * @method max\n * @owner Observable\n */\nfunction max(comparer) {\n    var max = (typeof comparer === 'function')\n        ? function (x, y) { return comparer(x, y) > 0 ? x : y; }\n        : function (x, y) { return x > y ? x : y; };\n    return this.lift(new reduce_1.ReduceOperator(max));\n}\nexports.max = max;\n//# sourceMappingURL=max.js.map\n\n/***/ },\n/* 921 */\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar tryCatch_1 = __webpack_require__(380);\nvar errorObject_1 = __webpack_require__(231);\nvar subscribeToResult_1 = __webpack_require__(146);\nvar OuterSubscriber_1 = __webpack_require__(145);\n/**\n * @param project\n * @param seed\n * @param concurrent\n * @return {Observable<R>|WebSocketSubject<T>|Observable<T>}\n * @method mergeScan\n * @owner Observable\n */\nfunction mergeScan(project, seed, concurrent) {\n    if (concurrent === void 0) { concurrent = Number.POSITIVE_INFINITY; }\n    return this.lift(new MergeScanOperator(project, seed, concurrent));\n}\nexports.mergeScan = mergeScan;\nvar MergeScanOperator = (function () {\n    function MergeScanOperator(project, seed, concurrent) {\n        this.project = project;\n        this.seed = seed;\n        this.concurrent = concurrent;\n    }\n    MergeScanOperator.prototype.call = function (subscriber, source) {\n        return source._subscribe(new MergeScanSubscriber(subscriber, this.project, this.seed, this.concurrent));\n    };\n    return MergeScanOperator;\n}());\nexports.MergeScanOperator = MergeScanOperator;\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar MergeScanSubscriber = (function (_super) {\n    __extends(MergeScanSubscriber, _super);\n    function MergeScanSubscriber(destination, project, acc, concurrent) {\n        _super.call(this, destination);\n        this.project = project;\n        this.acc = acc;\n        this.concurrent = concurrent;\n        this.hasValue = false;\n        this.hasCompleted = false;\n        this.buffer = [];\n        this.active = 0;\n        this.index = 0;\n    }\n    MergeScanSubscriber.prototype._next = function (value) {\n        if (this.active < this.concurrent) {\n            var index = this.index++;\n            var ish = tryCatch_1.tryCatch(this.project)(this.acc, value);\n            var destination = this.destination;\n            if (ish === errorObject_1.errorObject) {\n                destination.error(errorObject_1.errorObject.e);\n            }\n            else {\n                this.active++;\n                this._innerSub(ish, value, index);\n            }\n        }\n        else {\n            this.buffer.push(value);\n        }\n    };\n    MergeScanSubscriber.prototype._innerSub = function (ish, value, index) {\n        this.add(subscribeToResult_1.subscribeToResult(this, ish, value, index));\n    };\n    MergeScanSubscriber.prototype._complete = function () {\n        this.hasCompleted = true;\n        if (this.active === 0 && this.buffer.length === 0) {\n            if (this.hasValue === false) {\n                this.destination.next(this.acc);\n            }\n            this.destination.complete();\n        }\n    };\n    MergeScanSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {\n        var destination = this.destination;\n        this.acc = innerValue;\n        this.hasValue = true;\n        destination.next(innerValue);\n    };\n    MergeScanSubscriber.prototype.notifyComplete = function (innerSub) {\n        var buffer = this.buffer;\n        this.remove(innerSub);\n        this.active--;\n        if (buffer.length > 0) {\n            this._next(buffer.shift());\n        }\n        else if (this.active === 0 && this.hasCompleted) {\n            if (this.hasValue === false) {\n                this.destination.next(this.acc);\n            }\n            this.destination.complete();\n        }\n    };\n    return MergeScanSubscriber;\n}(OuterSubscriber_1.OuterSubscriber));\nexports.MergeScanSubscriber = MergeScanSubscriber;\n//# sourceMappingURL=mergeScan.js.map\n\n/***/ },\n/* 922 */\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\"use strict\";\nvar reduce_1 = __webpack_require__(383);\n/**\n * The Min operator operates on an Observable that emits numbers (or items that can be evaluated as numbers),\n * and when source Observable completes it emits a single item: the item with the smallest number.\n *\n * <img src=\"./img/min.png\" width=\"100%\">\n *\n * @param {Function} optional comparer function that it will use instead of its default to compare the value of two items.\n * @return {Observable<R>} an Observable that emits item with the smallest number.\n * @method min\n * @owner Observable\n */\nfunction min(comparer) {\n    var min = (typeof comparer === 'function')\n        ? function (x, y) { return comparer(x, y) < 0 ? x : y; }\n        : function (x, y) { return x < y ? x : y; };\n    return this.lift(new reduce_1.ReduceOperator(min));\n}\nexports.min = min;\n//# sourceMappingURL=min.js.map\n\n/***/ },\n/* 923 */\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Subscriber_1 = __webpack_require__(26);\n/**\n * Groups pairs of consecutive emissions together and emits them as an array of\n * two values.\n *\n * <span class=\"informal\">Puts the current value and previous value together as\n * an array, and emits that.</span>\n *\n * <img src=\"./img/pairwise.png\" width=\"100%\">\n *\n * The Nth emission from the source Observable will cause the output Observable\n * to emit an array [(N-1)th, Nth] of the previous and the current value, as a\n * pair. For this reason, `pairwise` emits on the second and subsequent\n * emissions from the source Observable, but not on the first emission, because\n * there is no previous value in that case.\n *\n * @example <caption>On every click (starting from the second), emit the relative distance to the previous click</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var pairs = clicks.pairwise();\n * var distance = pairs.map(pair => {\n *   var x0 = pair[0].clientX;\n *   var y0 = pair[0].clientY;\n *   var x1 = pair[1].clientX;\n *   var y1 = pair[1].clientY;\n *   return Math.sqrt(Math.pow(x0 - x1, 2) + Math.pow(y0 - y1, 2));\n * });\n * distance.subscribe(x => console.log(x));\n *\n * @see {@link buffer}\n * @see {@link bufferCount}\n *\n * @return {Observable<Array<T>>} An Observable of pairs (as arrays) of\n * consecutive values from the source Observable.\n * @method pairwise\n * @owner Observable\n */\nfunction pairwise() {\n    return this.lift(new PairwiseOperator());\n}\nexports.pairwise = pairwise;\nvar PairwiseOperator = (function () {\n    function PairwiseOperator() {\n    }\n    PairwiseOperator.prototype.call = function (subscriber, source) {\n        return source._subscribe(new PairwiseSubscriber(subscriber));\n    };\n    return PairwiseOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar PairwiseSubscriber = (function (_super) {\n    __extends(PairwiseSubscriber, _super);\n    function PairwiseSubscriber(destination) {\n        _super.call(this, destination);\n        this.hasPrev = false;\n    }\n    PairwiseSubscriber.prototype._next = function (value) {\n        if (this.hasPrev) {\n            this.destination.next([this.prev, value]);\n        }\n        else {\n            this.hasPrev = true;\n        }\n        this.prev = value;\n    };\n    return PairwiseSubscriber;\n}(Subscriber_1.Subscriber));\n//# sourceMappingURL=pairwise.js.map\n\n/***/ },\n/* 924 */\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\"use strict\";\nvar not_1 = __webpack_require__(981);\nvar filter_1 = __webpack_require__(385);\n/**\n * Splits the source Observable into two, one with values that satisfy a\n * predicate, and another with values that don't satisfy the predicate.\n *\n * <span class=\"informal\">It's like {@link filter}, but returns two Observables:\n * one like the output of {@link filter}, and the other with values that did not\n * pass the condition.</span>\n *\n * <img src=\"./img/partition.png\" width=\"100%\">\n *\n * `partition` outputs an array with two Observables that partition the values\n * from the source Observable through the given `predicate` function. The first\n * Observable in that array emits source values for which the predicate argument\n * returns true. The second Observable emits source values for which the\n * predicate returns false. The first behaves like {@link filter} and the second\n * behaves like {@link filter} with the predicate negated.\n *\n * @example <caption>Partition click events into those on DIV elements and those elsewhere</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var parts = clicks.partition(ev => ev.target.tagName === 'DIV');\n * var clicksOnDivs = parts[0];\n * var clicksElsewhere = parts[1];\n * clicksOnDivs.subscribe(x => console.log('DIV clicked: ', x));\n * clicksElsewhere.subscribe(x => console.log('Other clicked: ', x));\n *\n * @see {@link filter}\n *\n * @param {function(value: T, index: number): boolean} predicate A function that\n * evaluates each value emitted by the source Observable. If it returns `true`,\n * the value is emitted on the first Observable in the returned array, if\n * `false` the value is emitted on the second Observable in the array. The\n * `index` parameter is the number `i` for the i-th source emission that has\n * happened since the subscription, starting from the number `0`.\n * @param {any} [thisArg] An optional argument to determine the value of `this`\n * in the `predicate` function.\n * @return {[Observable<T>, Observable<T>]} An array with two Observables: one\n * with values that passed the predicate, and another with values that did not\n * pass the predicate.\n * @method partition\n * @owner Observable\n */\nfunction partition(predicate, thisArg) {\n    return [\n        filter_1.filter.call(this, predicate),\n        filter_1.filter.call(this, not_1.not(predicate, thisArg))\n    ];\n}\nexports.partition = partition;\n//# sourceMappingURL=partition.js.map\n\n/***/ },\n/* 925 */\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\"use strict\";\nvar map_1 = __webpack_require__(101);\n/**\n * Maps each source value (an object) to its specified nested property.\n *\n * <span class=\"informal\">Like {@link map}, but meant only for picking one of\n * the nested properties of every emitted object.</span>\n *\n * <img src=\"./img/pluck.png\" width=\"100%\">\n *\n * Given a list of strings describing a path to an object property, retrieves\n * the value of a specified nested property from all values in the source\n * Observable. If a property can't be resolved, it will return `undefined` for\n * that value.\n *\n * @example <caption>Map every every click to the tagName of the clicked target element</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var tagNames = clicks.pluck('target', 'tagName');\n * tagNames.subscribe(x => console.log(x));\n *\n * @see {@link map}\n *\n * @param {...string} properties The nested properties to pluck from each source\n * value (an object).\n * @return {Observable} Returns a new Observable of property values from the\n * source values.\n * @method pluck\n * @owner Observable\n */\nfunction pluck() {\n    var properties = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        properties[_i - 0] = arguments[_i];\n    }\n    var length = properties.length;\n    if (length === 0) {\n        throw new Error('list of properties cannot be empty.');\n    }\n    return map_1.map.call(this, plucker(properties, length));\n}\nexports.pluck = pluck;\nfunction plucker(props, length) {\n    var mapper = function (x) {\n        var currentProp = x;\n        for (var i = 0; i < length; i++) {\n            var p = currentProp[props[i]];\n            if (typeof p !== 'undefined') {\n                currentProp = p;\n            }\n            else {\n                return undefined;\n            }\n        }\n        return currentProp;\n    };\n    return mapper;\n}\n//# sourceMappingURL=pluck.js.map\n\n/***/ },\n/* 926 */\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\"use strict\";\nvar Subject_1 = __webpack_require__(66);\nvar multicast_1 = __webpack_require__(687);\n/**\n * Returns a ConnectableObservable, which is a variety of Observable that waits until its connect method is called\n * before it begins emitting items to those Observers that have subscribed to it.\n *\n * <img src=\"./img/publish.png\" width=\"100%\">\n *\n * @param {Function} Optional selector function which can use the multicasted source sequence as many times as needed,\n * without causing multiple subscriptions to the source sequence.\n * Subscribers to the given source will receive all notifications of the source from the time of the subscription on.\n * @return a ConnectableObservable that upon connection causes the source Observable to emit items to its Observers.\n * @method publish\n * @owner Observable\n */\nfunction publish(selector) {\n    return selector ? multicast_1.multicast.call(this, function () { return new Subject_1.Subject(); }, selector) :\n        multicast_1.multicast.call(this, new Subject_1.Subject());\n}\nexports.publish = publish;\n//# sourceMappingURL=publish.js.map\n\n/***/ },\n/* 927 */\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\"use strict\";\nvar BehaviorSubject_1 = __webpack_require__(234);\nvar multicast_1 = __webpack_require__(687);\n/**\n * @param value\n * @return {ConnectableObservable<T>}\n * @method publishBehavior\n * @owner Observable\n */\nfunction publishBehavior(value) {\n    return multicast_1.multicast.call(this, new BehaviorSubject_1.BehaviorSubject(value));\n}\nexports.publishBehavior = publishBehavior;\n//# sourceMappingURL=publishBehavior.js.map\n\n/***/ },\n/* 928 */\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\"use strict\";\nvar AsyncSubject_1 = __webpack_require__(690);\nvar multicast_1 = __webpack_require__(687);\n/**\n * @return {ConnectableObservable<T>}\n * @method publishLast\n * @owner Observable\n */\nfunction publishLast() {\n    return multicast_1.multicast.call(this, new AsyncSubject_1.AsyncSubject());\n}\nexports.publishLast = publishLast;\n//# sourceMappingURL=publishLast.js.map\n\n/***/ },\n/* 929 */\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\"use strict\";\nvar ReplaySubject_1 = __webpack_require__(691);\nvar multicast_1 = __webpack_require__(687);\n/**\n * @param bufferSize\n * @param windowTime\n * @param scheduler\n * @return {ConnectableObservable<T>}\n * @method publishReplay\n * @owner Observable\n */\nfunction publishReplay(bufferSize, windowTime, scheduler) {\n    if (bufferSize === void 0) { bufferSize = Number.POSITIVE_INFINITY; }\n    if (windowTime === void 0) { windowTime = Number.POSITIVE_INFINITY; }\n    return multicast_1.multicast.call(this, new ReplaySubject_1.ReplaySubject(bufferSize, windowTime, scheduler));\n}\nexports.publishReplay = publishReplay;\n//# sourceMappingURL=publishReplay.js.map\n\n/***/ },\n/* 930 */\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Subscriber_1 = __webpack_require__(26);\nvar EmptyObservable_1 = __webpack_require__(233);\n/**\n * Returns an Observable that repeats the stream of items emitted by the source Observable at most count times,\n * on a particular Scheduler.\n *\n * <img src=\"./img/repeat.png\" width=\"100%\">\n *\n * @param {Scheduler} [scheduler] the Scheduler to emit the items on.\n * @param {number} [count] the number of times the source Observable items are repeated, a count of 0 will yield\n * an empty Observable.\n * @return {Observable} an Observable that repeats the stream of items emitted by the source Observable at most\n * count times.\n * @method repeat\n * @owner Observable\n */\nfunction repeat(count) {\n    if (count === void 0) { count = -1; }\n    if (count === 0) {\n        return new EmptyObservable_1.EmptyObservable();\n    }\n    else if (count < 0) {\n        return this.lift(new RepeatOperator(-1, this));\n    }\n    else {\n        return this.lift(new RepeatOperator(count - 1, this));\n    }\n}\nexports.repeat = repeat;\nvar RepeatOperator = (function () {\n    function RepeatOperator(count, source) {\n        this.count = count;\n        this.source = source;\n    }\n    RepeatOperator.prototype.call = function (subscriber, source) {\n        return source._subscribe(new RepeatSubscriber(subscriber, this.count, this.source));\n    };\n    return RepeatOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar RepeatSubscriber = (function (_super) {\n    __extends(RepeatSubscriber, _super);\n    function RepeatSubscriber(destination, count, source) {\n        _super.call(this, destination);\n        this.count = count;\n        this.source = source;\n    }\n    RepeatSubscriber.prototype.complete = function () {\n        if (!this.isStopped) {\n            var _a = this, source = _a.source, count = _a.count;\n            if (count === 0) {\n                return _super.prototype.complete.call(this);\n            }\n            else if (count > -1) {\n                this.count = count - 1;\n            }\n            this.unsubscribe();\n            this.isStopped = false;\n            this.closed = false;\n            source.subscribe(this);\n        }\n    };\n    return RepeatSubscriber;\n}(Subscriber_1.Subscriber));\n//# sourceMappingURL=repeat.js.map\n\n/***/ },\n/* 931 */\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Subject_1 = __webpack_require__(66);\nvar tryCatch_1 = __webpack_require__(380);\nvar errorObject_1 = __webpack_require__(231);\nvar OuterSubscriber_1 = __webpack_require__(145);\nvar subscribeToResult_1 = __webpack_require__(146);\n/**\n * Returns an Observable that emits the same values as the source observable with the exception of a `complete`.\n * A `complete` will cause the emission of the Throwable that cause the complete to the Observable returned from\n * notificationHandler. If that Observable calls onComplete or `complete` then retry will call `complete` or `error`\n * on the child subscription. Otherwise, this Observable will resubscribe to the source observable, on a particular\n * Scheduler.\n *\n * <img src=\"./img/repeatWhen.png\" width=\"100%\">\n *\n * @param {notificationHandler} receives an Observable of notifications with which a user can `complete` or `error`,\n * aborting the retry.\n * @param {scheduler} the Scheduler on which to subscribe to the source Observable.\n * @return {Observable} the source Observable modified with retry logic.\n * @method repeatWhen\n * @owner Observable\n */\nfunction repeatWhen(notifier) {\n    return this.lift(new RepeatWhenOperator(notifier, this));\n}\nexports.repeatWhen = repeatWhen;\nvar RepeatWhenOperator = (function () {\n    function RepeatWhenOperator(notifier, source) {\n        this.notifier = notifier;\n        this.source = source;\n    }\n    RepeatWhenOperator.prototype.call = function (subscriber, source) {\n        return source._subscribe(new RepeatWhenSubscriber(subscriber, this.notifier, this.source));\n    };\n    return RepeatWhenOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar RepeatWhenSubscriber = (function (_super) {\n    __extends(RepeatWhenSubscriber, _super);\n    function RepeatWhenSubscriber(destination, notifier, source) {\n        _super.call(this, destination);\n        this.notifier = notifier;\n        this.source = source;\n    }\n    RepeatWhenSubscriber.prototype.complete = function () {\n        if (!this.isStopped) {\n            var notifications = this.notifications;\n            var retries = this.retries;\n            var retriesSubscription = this.retriesSubscription;\n            if (!retries) {\n                notifications = new Subject_1.Subject();\n                retries = tryCatch_1.tryCatch(this.notifier)(notifications);\n                if (retries === errorObject_1.errorObject) {\n                    return _super.prototype.complete.call(this);\n                }\n                retriesSubscription = subscribeToResult_1.subscribeToResult(this, retries);\n            }\n            else {\n                this.notifications = null;\n                this.retriesSubscription = null;\n            }\n            this.unsubscribe();\n            this.closed = false;\n            this.notifications = notifications;\n            this.retries = retries;\n            this.retriesSubscription = retriesSubscription;\n            notifications.next();\n        }\n    };\n    RepeatWhenSubscriber.prototype._unsubscribe = function () {\n        var _a = this, notifications = _a.notifications, retriesSubscription = _a.retriesSubscription;\n        if (notifications) {\n            notifications.unsubscribe();\n            this.notifications = null;\n        }\n        if (retriesSubscription) {\n            retriesSubscription.unsubscribe();\n            this.retriesSubscription = null;\n        }\n        this.retries = null;\n    };\n    RepeatWhenSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {\n        var _a = this, notifications = _a.notifications, retries = _a.retries, retriesSubscription = _a.retriesSubscription;\n        this.notifications = null;\n        this.retries = null;\n        this.retriesSubscription = null;\n        this.unsubscribe();\n        this.isStopped = false;\n        this.closed = false;\n        this.notifications = notifications;\n        this.retries = retries;\n        this.retriesSubscription = retriesSubscription;\n        this.source.subscribe(this);\n    };\n    return RepeatWhenSubscriber;\n}(OuterSubscriber_1.OuterSubscriber));\n//# sourceMappingURL=repeatWhen.js.map\n\n/***/ },\n/* 932 */\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Subscriber_1 = __webpack_require__(26);\n/**\n * Returns an Observable that mirrors the source Observable, resubscribing to it if it calls `error` and the\n * predicate returns true for that specific exception and retry count.\n * If the source Observable calls `error`, this method will resubscribe to the source Observable for a maximum of\n * count resubscriptions (given as a number parameter) rather than propagating the `error` call.\n *\n * <img src=\"./img/retry.png\" width=\"100%\">\n *\n * Any and all items emitted by the source Observable will be emitted by the resulting Observable, even those emitted\n * during failed subscriptions. For example, if an Observable fails at first but emits [1, 2] then succeeds the second\n * time and emits: [1, 2, 3, 4, 5] then the complete stream of emissions and notifications\n * would be: [1, 2, 1, 2, 3, 4, 5, `complete`].\n * @param {number} number of retry attempts before failing.\n * @return {Observable} the source Observable modified with the retry logic.\n * @method retry\n * @owner Observable\n */\nfunction retry(count) {\n    if (count === void 0) { count = -1; }\n    return this.lift(new RetryOperator(count, this));\n}\nexports.retry = retry;\nvar RetryOperator = (function () {\n    function RetryOperator(count, source) {\n        this.count = count;\n        this.source = source;\n    }\n    RetryOperator.prototype.call = function (subscriber, source) {\n        return source._subscribe(new RetrySubscriber(subscriber, this.count, this.source));\n    };\n    return RetryOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar RetrySubscriber = (function (_super) {\n    __extends(RetrySubscriber, _super);\n    function RetrySubscriber(destination, count, source) {\n        _super.call(this, destination);\n        this.count = count;\n        this.source = source;\n    }\n    RetrySubscriber.prototype.error = function (err) {\n        if (!this.isStopped) {\n            var _a = this, source = _a.source, count = _a.count;\n            if (count === 0) {\n                return _super.prototype.error.call(this, err);\n            }\n            else if (count > -1) {\n                this.count = count - 1;\n            }\n            this.unsubscribe();\n            this.isStopped = false;\n            this.closed = false;\n            source.subscribe(this);\n        }\n    };\n    return RetrySubscriber;\n}(Subscriber_1.Subscriber));\n//# sourceMappingURL=retry.js.map\n\n/***/ },\n/* 933 */\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Subject_1 = __webpack_require__(66);\nvar tryCatch_1 = __webpack_require__(380);\nvar errorObject_1 = __webpack_require__(231);\nvar OuterSubscriber_1 = __webpack_require__(145);\nvar subscribeToResult_1 = __webpack_require__(146);\n/**\n * Returns an Observable that emits the same values as the source observable with the exception of an `error`.\n * An `error` will cause the emission of the Throwable that cause the error to the Observable returned from\n * notificationHandler. If that Observable calls onComplete or `error` then retry will call `complete` or `error`\n * on the child subscription. Otherwise, this Observable will resubscribe to the source observable, on a particular\n * Scheduler.\n *\n * <img src=\"./img/retryWhen.png\" width=\"100%\">\n *\n * @param {notificationHandler} receives an Observable of notifications with which a user can `complete` or `error`,\n * aborting the retry.\n * @param {scheduler} the Scheduler on which to subscribe to the source Observable.\n * @return {Observable} the source Observable modified with retry logic.\n * @method retryWhen\n * @owner Observable\n */\nfunction retryWhen(notifier) {\n    return this.lift(new RetryWhenOperator(notifier, this));\n}\nexports.retryWhen = retryWhen;\nvar RetryWhenOperator = (function () {\n    function RetryWhenOperator(notifier, source) {\n        this.notifier = notifier;\n        this.source = source;\n    }\n    RetryWhenOperator.prototype.call = function (subscriber, source) {\n        return source._subscribe(new RetryWhenSubscriber(subscriber, this.notifier, this.source));\n    };\n    return RetryWhenOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar RetryWhenSubscriber = (function (_super) {\n    __extends(RetryWhenSubscriber, _super);\n    function RetryWhenSubscriber(destination, notifier, source) {\n        _super.call(this, destination);\n        this.notifier = notifier;\n        this.source = source;\n    }\n    RetryWhenSubscriber.prototype.error = function (err) {\n        if (!this.isStopped) {\n            var errors = this.errors;\n            var retries = this.retries;\n            var retriesSubscription = this.retriesSubscription;\n            if (!retries) {\n                errors = new Subject_1.Subject();\n                retries = tryCatch_1.tryCatch(this.notifier)(errors);\n                if (retries === errorObject_1.errorObject) {\n                    return _super.prototype.error.call(this, errorObject_1.errorObject.e);\n                }\n                retriesSubscription = subscribeToResult_1.subscribeToResult(this, retries);\n            }\n            else {\n                this.errors = null;\n                this.retriesSubscription = null;\n            }\n            this.unsubscribe();\n            this.closed = false;\n            this.errors = errors;\n            this.retries = retries;\n            this.retriesSubscription = retriesSubscription;\n            errors.next(err);\n        }\n    };\n    RetryWhenSubscriber.prototype._unsubscribe = function () {\n        var _a = this, errors = _a.errors, retriesSubscription = _a.retriesSubscription;\n        if (errors) {\n            errors.unsubscribe();\n            this.errors = null;\n        }\n        if (retriesSubscription) {\n            retriesSubscription.unsubscribe();\n            this.retriesSubscription = null;\n        }\n        this.retries = null;\n    };\n    RetryWhenSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {\n        var _a = this, errors = _a.errors, retries = _a.retries, retriesSubscription = _a.retriesSubscription;\n        this.errors = null;\n        this.retries = null;\n        this.retriesSubscription = null;\n        this.unsubscribe();\n        this.isStopped = false;\n        this.closed = false;\n        this.errors = errors;\n        this.retries = retries;\n        this.retriesSubscription = retriesSubscription;\n        this.source.subscribe(this);\n    };\n    return RetryWhenSubscriber;\n}(OuterSubscriber_1.OuterSubscriber));\n//# sourceMappingURL=retryWhen.js.map\n\n/***/ },\n/* 934 */\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar OuterSubscriber_1 = __webpack_require__(145);\nvar subscribeToResult_1 = __webpack_require__(146);\n/**\n * Emits the most recently emitted value from the source Observable whenever\n * another Observable, the `notifier`, emits.\n *\n * <span class=\"informal\">It's like {@link sampleTime}, but samples whenever\n * the `notifier` Observable emits something.</span>\n *\n * <img src=\"./img/sample.png\" width=\"100%\">\n *\n * Whenever the `notifier` Observable emits a value or completes, `sample`\n * looks at the source Observable and emits whichever value it has most recently\n * emitted since the previous sampling, unless the source has not emitted\n * anything since the previous sampling. The `notifier` is subscribed to as soon\n * as the output Observable is subscribed.\n *\n * @example <caption>On every click, sample the most recent \"seconds\" timer</caption>\n * var seconds = Rx.Observable.interval(1000);\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = seconds.sample(clicks);\n * result.subscribe(x => console.log(x));\n *\n * @see {@link audit}\n * @see {@link debounce}\n * @see {@link sampleTime}\n * @see {@link throttle}\n *\n * @param {Observable<any>} notifier The Observable to use for sampling the\n * source Observable.\n * @return {Observable<T>} An Observable that emits the results of sampling the\n * values emitted by the source Observable whenever the notifier Observable\n * emits value or completes.\n * @method sample\n * @owner Observable\n */\nfunction sample(notifier) {\n    return this.lift(new SampleOperator(notifier));\n}\nexports.sample = sample;\nvar SampleOperator = (function () {\n    function SampleOperator(notifier) {\n        this.notifier = notifier;\n    }\n    SampleOperator.prototype.call = function (subscriber, source) {\n        return source._subscribe(new SampleSubscriber(subscriber, this.notifier));\n    };\n    return SampleOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar SampleSubscriber = (function (_super) {\n    __extends(SampleSubscriber, _super);\n    function SampleSubscriber(destination, notifier) {\n        _super.call(this, destination);\n        this.hasValue = false;\n        this.add(subscribeToResult_1.subscribeToResult(this, notifier));\n    }\n    SampleSubscriber.prototype._next = function (value) {\n        this.value = value;\n        this.hasValue = true;\n    };\n    SampleSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {\n        this.emitValue();\n    };\n    SampleSubscriber.prototype.notifyComplete = function () {\n        this.emitValue();\n    };\n    SampleSubscriber.prototype.emitValue = function () {\n        if (this.hasValue) {\n            this.hasValue = false;\n            this.destination.next(this.value);\n        }\n    };\n    return SampleSubscriber;\n}(OuterSubscriber_1.OuterSubscriber));\n//# sourceMappingURL=sample.js.map\n\n/***/ },\n/* 935 */\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Subscriber_1 = __webpack_require__(26);\nvar async_1 = __webpack_require__(686);\n/**\n * Emits the most recently emitted value from the source Observable within\n * periodic time intervals.\n *\n * <span class=\"informal\">Samples the source Observable at periodic time\n * intervals, emitting what it samples.</span>\n *\n * <img src=\"./img/sampleTime.png\" width=\"100%\">\n *\n * `sampleTime` periodically looks at the source Observable and emits whichever\n * value it has most recently emitted since the previous sampling, unless the\n * source has not emitted anything since the previous sampling. The sampling\n * happens periodically in time every `period` milliseconds (or the time unit\n * defined by the optional `scheduler` argument). The sampling starts as soon as\n * the output Observable is subscribed.\n *\n * @example <caption>Every second, emit the most recent click at most once</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.sampleTime(1000);\n * result.subscribe(x => console.log(x));\n *\n * @see {@link auditTime}\n * @see {@link debounceTime}\n * @see {@link delay}\n * @see {@link sample}\n * @see {@link throttleTime}\n *\n * @param {number} period The sampling period expressed in milliseconds or the\n * time unit determined internally by the optional `scheduler`.\n * @param {Scheduler} [scheduler=async] The {@link Scheduler} to use for\n * managing the timers that handle the sampling.\n * @return {Observable<T>} An Observable that emits the results of sampling the\n * values emitted by the source Observable at the specified time interval.\n * @method sampleTime\n * @owner Observable\n */\nfunction sampleTime(period, scheduler) {\n    if (scheduler === void 0) { scheduler = async_1.async; }\n    return this.lift(new SampleTimeOperator(period, scheduler));\n}\nexports.sampleTime = sampleTime;\nvar SampleTimeOperator = (function () {\n    function SampleTimeOperator(period, scheduler) {\n        this.period = period;\n        this.scheduler = scheduler;\n    }\n    SampleTimeOperator.prototype.call = function (subscriber, source) {\n        return source._subscribe(new SampleTimeSubscriber(subscriber, this.period, this.scheduler));\n    };\n    return SampleTimeOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar SampleTimeSubscriber = (function (_super) {\n    __extends(SampleTimeSubscriber, _super);\n    function SampleTimeSubscriber(destination, period, scheduler) {\n        _super.call(this, destination);\n        this.period = period;\n        this.scheduler = scheduler;\n        this.hasValue = false;\n        this.add(scheduler.schedule(dispatchNotification, period, { subscriber: this, period: period }));\n    }\n    SampleTimeSubscriber.prototype._next = function (value) {\n        this.lastValue = value;\n        this.hasValue = true;\n    };\n    SampleTimeSubscriber.prototype.notifyNext = function () {\n        if (this.hasValue) {\n            this.hasValue = false;\n            this.destination.next(this.lastValue);\n        }\n    };\n    return SampleTimeSubscriber;\n}(Subscriber_1.Subscriber));\nfunction dispatchNotification(state) {\n    var subscriber = state.subscriber, period = state.period;\n    subscriber.notifyNext();\n    this.schedule(state, period);\n}\n//# sourceMappingURL=sampleTime.js.map\n\n/***/ },\n/* 936 */\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Subscriber_1 = __webpack_require__(26);\n/**\n * Applies an accumulator function over the source Observable, and returns each\n * intermediate result, with an optional seed value.\n *\n * <span class=\"informal\">It's like {@link reduce}, but emits the current\n * accumulation whenever the source emits a value.</span>\n *\n * <img src=\"./img/scan.png\" width=\"100%\">\n *\n * Combines together all values emitted on the source, using an accumulator\n * function that knows how to join a new source value into the accumulation from\n * the past. Is similar to {@link reduce}, but emits the intermediate\n * accumulations.\n *\n * Returns an Observable that applies a specified `accumulator` function to each\n * item emitted by the source Observable. If a `seed` value is specified, then\n * that value will be used as the initial value for the accumulator. If no seed\n * value is specified, the first item of the source is used as the seed.\n *\n * @example <caption>Count the number of click events</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var ones = clicks.mapTo(1);\n * var seed = 0;\n * var count = ones.scan((acc, one) => acc + one, seed);\n * count.subscribe(x => console.log(x));\n *\n * @see {@link expand}\n * @see {@link mergeScan}\n * @see {@link reduce}\n *\n * @param {function(acc: R, value: T, index: number): R} accumulator\n * The accumulator function called on each source value.\n * @param {T|R} [seed] The initial accumulation value.\n * @return {Observable<R>} An observable of the accumulated values.\n * @method scan\n * @owner Observable\n */\nfunction scan(accumulator, seed) {\n    return this.lift(new ScanOperator(accumulator, seed));\n}\nexports.scan = scan;\nvar ScanOperator = (function () {\n    function ScanOperator(accumulator, seed) {\n        this.accumulator = accumulator;\n        this.seed = seed;\n    }\n    ScanOperator.prototype.call = function (subscriber, source) {\n        return source._subscribe(new ScanSubscriber(subscriber, this.accumulator, this.seed));\n    };\n    return ScanOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar ScanSubscriber = (function (_super) {\n    __extends(ScanSubscriber, _super);\n    function ScanSubscriber(destination, accumulator, seed) {\n        _super.call(this, destination);\n        this.accumulator = accumulator;\n        this.index = 0;\n        this.accumulatorSet = false;\n        this.seed = seed;\n        this.accumulatorSet = typeof seed !== 'undefined';\n    }\n    Object.defineProperty(ScanSubscriber.prototype, \"seed\", {\n        get: function () {\n            return this._seed;\n        },\n        set: function (value) {\n            this.accumulatorSet = true;\n            this._seed = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    ScanSubscriber.prototype._next = function (value) {\n        if (!this.accumulatorSet) {\n            this.seed = value;\n            this.destination.next(value);\n        }\n        else {\n            return this._tryNext(value);\n        }\n    };\n    ScanSubscriber.prototype._tryNext = function (value) {\n        var index = this.index++;\n        var result;\n        try {\n            result = this.accumulator(this.seed, value, index);\n        }\n        catch (err) {\n            this.destination.error(err);\n        }\n        this.seed = result;\n        this.destination.next(result);\n    };\n    return ScanSubscriber;\n}(Subscriber_1.Subscriber));\n//# sourceMappingURL=scan.js.map\n\n/***/ },\n/* 937 */\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Subscriber_1 = __webpack_require__(26);\nvar tryCatch_1 = __webpack_require__(380);\nvar errorObject_1 = __webpack_require__(231);\n/**\n * Compares all values of two observables in sequence using an optional comparor function\n * and returns an observable of a single boolean value representing whether or not the two sequences\n * are equal.\n *\n * <span class=\"informal\">Checks to see of all values emitted by both observables are equal, in order.</span>\n *\n * <img src=\"./img/sequenceEqual.png\" width=\"100%\">\n *\n * `sequenceEqual` subscribes to two observables and buffers incoming values from each observable. Whenever either\n * observable emits a value, the value is buffered and the buffers are shifted and compared from the bottom\n * up; If any value pair doesn't match, the returned observable will emit `false` and complete. If one of the\n * observables completes, the operator will wait for the other observable to complete; If the other\n * observable emits before completing, the returned observable will emit `false` and complete. If one observable never\n * completes or emits after the other complets, the returned observable will never complete.\n *\n * @example <caption>figure out if the Konami code matches</caption>\n * var code = Observable.from([\n *  \"ArrowUp\",\n *  \"ArrowUp\",\n *  \"ArrowDown\",\n *  \"ArrowDown\",\n *  \"ArrowLeft\",\n *  \"ArrowRight\",\n *  \"ArrowLeft\",\n *  \"ArrowRight\",\n *  \"KeyB\",\n *  \"KeyA\",\n *  \"Enter\" // no start key, clearly.\n * ]);\n *\n * var keys = Rx.Observable.fromEvent(document, 'keyup')\n *  .map(e => e.code);\n * var matches = keys.bufferCount(11, 1)\n *  .mergeMap(\n *    last11 =>\n *      Rx.Observable.from(last11)\n *        .sequenceEqual(code)\n *   );\n * matches.subscribe(matched => console.log('Successful cheat at Contra? ', matched));\n *\n * @see {@link combineLatest}\n * @see {@link zip}\n * @see {@link withLatestFrom}\n *\n * @param {Observable} compareTo the observable sequence to compare the source sequence to.\n * @param {function} [comparor] An optional function to compare each value pair\n * @return {Observable} An Observable of a single boolean value representing whether or not\n * the values emitted by both observables were equal in sequence\n * @method sequenceEqual\n * @owner Observable\n */\nfunction sequenceEqual(compareTo, comparor) {\n    return this.lift(new SequenceEqualOperator(compareTo, comparor));\n}\nexports.sequenceEqual = sequenceEqual;\nvar SequenceEqualOperator = (function () {\n    function SequenceEqualOperator(compareTo, comparor) {\n        this.compareTo = compareTo;\n        this.comparor = comparor;\n    }\n    SequenceEqualOperator.prototype.call = function (subscriber, source) {\n        return source._subscribe(new SequenceEqualSubscriber(subscriber, this.compareTo, this.comparor));\n    };\n    return SequenceEqualOperator;\n}());\nexports.SequenceEqualOperator = SequenceEqualOperator;\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar SequenceEqualSubscriber = (function (_super) {\n    __extends(SequenceEqualSubscriber, _super);\n    function SequenceEqualSubscriber(destination, compareTo, comparor) {\n        _super.call(this, destination);\n        this.compareTo = compareTo;\n        this.comparor = comparor;\n        this._a = [];\n        this._b = [];\n        this._oneComplete = false;\n        this.add(compareTo.subscribe(new SequenceEqualCompareToSubscriber(destination, this)));\n    }\n    SequenceEqualSubscriber.prototype._next = function (value) {\n        if (this._oneComplete && this._b.length === 0) {\n            this.emit(false);\n        }\n        else {\n            this._a.push(value);\n            this.checkValues();\n        }\n    };\n    SequenceEqualSubscriber.prototype._complete = function () {\n        if (this._oneComplete) {\n            this.emit(this._a.length === 0 && this._b.length === 0);\n        }\n        else {\n            this._oneComplete = true;\n        }\n    };\n    SequenceEqualSubscriber.prototype.checkValues = function () {\n        var _c = this, _a = _c._a, _b = _c._b, comparor = _c.comparor;\n        while (_a.length > 0 && _b.length > 0) {\n            var a = _a.shift();\n            var b = _b.shift();\n            var areEqual = false;\n            if (comparor) {\n                areEqual = tryCatch_1.tryCatch(comparor)(a, b);\n                if (areEqual === errorObject_1.errorObject) {\n                    this.destination.error(errorObject_1.errorObject.e);\n                }\n            }\n            else {\n                areEqual = a === b;\n            }\n            if (!areEqual) {\n                this.emit(false);\n            }\n        }\n    };\n    SequenceEqualSubscriber.prototype.emit = function (value) {\n        var destination = this.destination;\n        destination.next(value);\n        destination.complete();\n    };\n    SequenceEqualSubscriber.prototype.nextB = function (value) {\n        if (this._oneComplete && this._a.length === 0) {\n            this.emit(false);\n        }\n        else {\n            this._b.push(value);\n            this.checkValues();\n        }\n    };\n    return SequenceEqualSubscriber;\n}(Subscriber_1.Subscriber));\nexports.SequenceEqualSubscriber = SequenceEqualSubscriber;\nvar SequenceEqualCompareToSubscriber = (function (_super) {\n    __extends(SequenceEqualCompareToSubscriber, _super);\n    function SequenceEqualCompareToSubscriber(destination, parent) {\n        _super.call(this, destination);\n        this.parent = parent;\n    }\n    SequenceEqualCompareToSubscriber.prototype._next = function (value) {\n        this.parent.nextB(value);\n    };\n    SequenceEqualCompareToSubscriber.prototype._error = function (err) {\n        this.parent.error(err);\n    };\n    SequenceEqualCompareToSubscriber.prototype._complete = function () {\n        this.parent._complete();\n    };\n    return SequenceEqualCompareToSubscriber;\n}(Subscriber_1.Subscriber));\n//# sourceMappingURL=sequenceEqual.js.map\n\n/***/ },\n/* 938 */\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\"use strict\";\nvar multicast_1 = __webpack_require__(687);\nvar Subject_1 = __webpack_require__(66);\nfunction shareSubjectFactory() {\n    return new Subject_1.Subject();\n}\n/**\n * Returns a new Observable that multicasts (shares) the original Observable. As long as there is at least one\n * Subscriber this Observable will be subscribed and emitting data. When all subscribers have unsubscribed it will\n * unsubscribe from the source Observable. Because the Observable is multicasting it makes the stream `hot`.\n * This is an alias for .publish().refCount().\n *\n * <img src=\"./img/share.png\" width=\"100%\">\n *\n * @return {Observable<T>} an Observable that upon connection causes the source Observable to emit items to its Observers\n * @method share\n * @owner Observable\n */\nfunction share() {\n    return multicast_1.multicast.call(this, shareSubjectFactory).refCount();\n}\nexports.share = share;\n;\n//# sourceMappingURL=share.js.map\n\n/***/ },\n/* 939 */\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Subscriber_1 = __webpack_require__(26);\nvar EmptyError_1 = __webpack_require__(150);\n/**\n * Returns an Observable that emits the single item emitted by the source Observable that matches a specified\n * predicate, if that Observable emits one such item. If the source Observable emits more than one such item or no\n * such items, notify of an IllegalArgumentException or NoSuchElementException respectively.\n *\n * <img src=\"./img/single.png\" width=\"100%\">\n *\n * @throws {EmptyError} Delivers an EmptyError to the Observer's `error`\n * callback if the Observable completes before any `next` notification was sent.\n * @param {Function} a predicate function to evaluate items emitted by the source Observable.\n * @return {Observable<T>} an Observable that emits the single item emitted by the source Observable that matches\n * the predicate.\n .\n * @method single\n * @owner Observable\n */\nfunction single(predicate) {\n    return this.lift(new SingleOperator(predicate, this));\n}\nexports.single = single;\nvar SingleOperator = (function () {\n    function SingleOperator(predicate, source) {\n        this.predicate = predicate;\n        this.source = source;\n    }\n    SingleOperator.prototype.call = function (subscriber, source) {\n        return source._subscribe(new SingleSubscriber(subscriber, this.predicate, this.source));\n    };\n    return SingleOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar SingleSubscriber = (function (_super) {\n    __extends(SingleSubscriber, _super);\n    function SingleSubscriber(destination, predicate, source) {\n        _super.call(this, destination);\n        this.predicate = predicate;\n        this.source = source;\n        this.seenValue = false;\n        this.index = 0;\n    }\n    SingleSubscriber.prototype.applySingleValue = function (value) {\n        if (this.seenValue) {\n            this.destination.error('Sequence contains more than one element');\n        }\n        else {\n            this.seenValue = true;\n            this.singleValue = value;\n        }\n    };\n    SingleSubscriber.prototype._next = function (value) {\n        var predicate = this.predicate;\n        this.index++;\n        if (predicate) {\n            this.tryNext(value);\n        }\n        else {\n            this.applySingleValue(value);\n        }\n    };\n    SingleSubscriber.prototype.tryNext = function (value) {\n        try {\n            var result = this.predicate(value, this.index, this.source);\n            if (result) {\n                this.applySingleValue(value);\n            }\n        }\n        catch (err) {\n            this.destination.error(err);\n        }\n    };\n    SingleSubscriber.prototype._complete = function () {\n        var destination = this.destination;\n        if (this.index > 0) {\n            destination.next(this.seenValue ? this.singleValue : undefined);\n            destination.complete();\n        }\n        else {\n            destination.error(new EmptyError_1.EmptyError);\n        }\n    };\n    return SingleSubscriber;\n}(Subscriber_1.Subscriber));\n//# sourceMappingURL=single.js.map\n\n/***/ },\n/* 940 */\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Subscriber_1 = __webpack_require__(26);\n/**\n * Returns an Observable that skips `n` items emitted by an Observable.\n *\n * <img src=\"./img/skip.png\" width=\"100%\">\n *\n * @param {Number} the `n` of times, items emitted by source Observable should be skipped.\n * @return {Observable} an Observable that skips values emitted by the source Observable.\n *\n * @method skip\n * @owner Observable\n */\nfunction skip(total) {\n    return this.lift(new SkipOperator(total));\n}\nexports.skip = skip;\nvar SkipOperator = (function () {\n    function SkipOperator(total) {\n        this.total = total;\n    }\n    SkipOperator.prototype.call = function (subscriber, source) {\n        return source._subscribe(new SkipSubscriber(subscriber, this.total));\n    };\n    return SkipOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar SkipSubscriber = (function (_super) {\n    __extends(SkipSubscriber, _super);\n    function SkipSubscriber(destination, total) {\n        _super.call(this, destination);\n        this.total = total;\n        this.count = 0;\n    }\n    SkipSubscriber.prototype._next = function (x) {\n        if (++this.count > this.total) {\n            this.destination.next(x);\n        }\n    };\n    return SkipSubscriber;\n}(Subscriber_1.Subscriber));\n//# sourceMappingURL=skip.js.map\n\n/***/ },\n/* 941 */\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar OuterSubscriber_1 = __webpack_require__(145);\nvar subscribeToResult_1 = __webpack_require__(146);\n/**\n * Returns an Observable that skips items emitted by the source Observable until a second Observable emits an item.\n *\n * <img src=\"./img/skipUntil.png\" width=\"100%\">\n *\n * @param {Observable} the second Observable that has to emit an item before the source Observable's elements begin to\n * be mirrored by the resulting Observable.\n * @return {Observable<T>} an Observable that skips items from the source Observable until the second Observable emits\n * an item, then emits the remaining items.\n * @method skipUntil\n * @owner Observable\n */\nfunction skipUntil(notifier) {\n    return this.lift(new SkipUntilOperator(notifier));\n}\nexports.skipUntil = skipUntil;\nvar SkipUntilOperator = (function () {\n    function SkipUntilOperator(notifier) {\n        this.notifier = notifier;\n    }\n    SkipUntilOperator.prototype.call = function (subscriber, source) {\n        return source._subscribe(new SkipUntilSubscriber(subscriber, this.notifier));\n    };\n    return SkipUntilOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar SkipUntilSubscriber = (function (_super) {\n    __extends(SkipUntilSubscriber, _super);\n    function SkipUntilSubscriber(destination, notifier) {\n        _super.call(this, destination);\n        this.hasValue = false;\n        this.isInnerStopped = false;\n        this.add(subscribeToResult_1.subscribeToResult(this, notifier));\n    }\n    SkipUntilSubscriber.prototype._next = function (value) {\n        if (this.hasValue) {\n            _super.prototype._next.call(this, value);\n        }\n    };\n    SkipUntilSubscriber.prototype._complete = function () {\n        if (this.isInnerStopped) {\n            _super.prototype._complete.call(this);\n        }\n        else {\n            this.unsubscribe();\n        }\n    };\n    SkipUntilSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {\n        this.hasValue = true;\n    };\n    SkipUntilSubscriber.prototype.notifyComplete = function () {\n        this.isInnerStopped = true;\n        if (this.isStopped) {\n            _super.prototype._complete.call(this);\n        }\n    };\n    return SkipUntilSubscriber;\n}(OuterSubscriber_1.OuterSubscriber));\n//# sourceMappingURL=skipUntil.js.map\n\n/***/ },\n/* 942 */\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Subscriber_1 = __webpack_require__(26);\n/**\n * Returns an Observable that skips all items emitted by the source Observable as long as a specified condition holds\n * true, but emits all further source items as soon as the condition becomes false.\n *\n * <img src=\"./img/skipWhile.png\" width=\"100%\">\n *\n * @param {Function} predicate - a function to test each item emitted from the source Observable.\n * @return {Observable<T>} an Observable that begins emitting items emitted by the source Observable when the\n * specified predicate becomes false.\n * @method skipWhile\n * @owner Observable\n */\nfunction skipWhile(predicate) {\n    return this.lift(new SkipWhileOperator(predicate));\n}\nexports.skipWhile = skipWhile;\nvar SkipWhileOperator = (function () {\n    function SkipWhileOperator(predicate) {\n        this.predicate = predicate;\n    }\n    SkipWhileOperator.prototype.call = function (subscriber, source) {\n        return source._subscribe(new SkipWhileSubscriber(subscriber, this.predicate));\n    };\n    return SkipWhileOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar SkipWhileSubscriber = (function (_super) {\n    __extends(SkipWhileSubscriber, _super);\n    function SkipWhileSubscriber(destination, predicate) {\n        _super.call(this, destination);\n        this.predicate = predicate;\n        this.skipping = true;\n        this.index = 0;\n    }\n    SkipWhileSubscriber.prototype._next = function (value) {\n        var destination = this.destination;\n        if (this.skipping) {\n            this.tryCallPredicate(value);\n        }\n        if (!this.skipping) {\n            destination.next(value);\n        }\n    };\n    SkipWhileSubscriber.prototype.tryCallPredicate = function (value) {\n        try {\n            var result = this.predicate(value, this.index++);\n            this.skipping = Boolean(result);\n        }\n        catch (err) {\n            this.destination.error(err);\n        }\n    };\n    return SkipWhileSubscriber;\n}(Subscriber_1.Subscriber));\n//# sourceMappingURL=skipWhile.js.map\n\n/***/ },\n/* 943 */\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\"use strict\";\nvar ArrayObservable_1 = __webpack_require__(232);\nvar ScalarObservable_1 = __webpack_require__(235);\nvar EmptyObservable_1 = __webpack_require__(233);\nvar concat_1 = __webpack_require__(696);\nvar isScheduler_1 = __webpack_require__(381);\n/**\n * Returns an Observable that emits the items in a specified Iterable before it begins to emit items emitted by the\n * source Observable.\n *\n * <img src=\"./img/startWith.png\" width=\"100%\">\n *\n * @param {Values} an Iterable that contains the items you want the modified Observable to emit first.\n * @return {Observable} an Observable that emits the items in the specified Iterable and then emits the items\n * emitted by the source Observable.\n * @method startWith\n * @owner Observable\n */\nfunction startWith() {\n    var array = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        array[_i - 0] = arguments[_i];\n    }\n    var scheduler = array[array.length - 1];\n    if (isScheduler_1.isScheduler(scheduler)) {\n        array.pop();\n    }\n    else {\n        scheduler = null;\n    }\n    var len = array.length;\n    if (len === 1) {\n        return concat_1.concatStatic(new ScalarObservable_1.ScalarObservable(array[0], scheduler), this);\n    }\n    else if (len > 1) {\n        return concat_1.concatStatic(new ArrayObservable_1.ArrayObservable(array, scheduler), this);\n    }\n    else {\n        return concat_1.concatStatic(new EmptyObservable_1.EmptyObservable(scheduler), this);\n    }\n}\nexports.startWith = startWith;\n//# sourceMappingURL=startWith.js.map\n\n/***/ },\n/* 944 */\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\"use strict\";\nvar SubscribeOnObservable_1 = __webpack_require__(863);\n/**\n * Asynchronously subscribes Observers to this Observable on the specified Scheduler.\n *\n * <img src=\"./img/subscribeOn.png\" width=\"100%\">\n *\n * @param {Scheduler} the Scheduler to perform subscription actions on.\n * @return {Observable<T>} the source Observable modified so that its subscriptions happen on the specified Scheduler\n .\n * @method subscribeOn\n * @owner Observable\n */\nfunction subscribeOn(scheduler, delay) {\n    if (delay === void 0) { delay = 0; }\n    return new SubscribeOnObservable_1.SubscribeOnObservable(this, delay, scheduler);\n}\nexports.subscribeOn = subscribeOn;\n//# sourceMappingURL=subscribeOn.js.map\n\n/***/ },\n/* 945 */\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar OuterSubscriber_1 = __webpack_require__(145);\nvar subscribeToResult_1 = __webpack_require__(146);\n/**\n * Converts a higher-order Observable into a first-order Observable by\n * subscribing to only the most recently emitted of those inner Observables.\n *\n * <span class=\"informal\">Flattens an Observable-of-Observables by dropping the\n * previous inner Observable once a new one appears.</span>\n *\n * <img src=\"./img/switch.png\" width=\"100%\">\n *\n * `switch` subscribes to an Observable that emits Observables, also known as a\n * higher-order Observable. Each time it observes one of these emitted inner\n * Observables, the output Observable subscribes to the inner Observable and\n * begins emitting the items emitted by that. So far, it behaves\n * like {@link mergeAll}. However, when a new inner Observable is emitted,\n * `switch` unsubscribes from the earlier-emitted inner Observable and\n * subscribes to the new inner Observable and begins emitting items from it. It\n * continues to behave like this for subsequent inner Observables.\n *\n * @example <caption>Rerun an interval Observable on every click event</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * // Each click event is mapped to an Observable that ticks every second\n * var higherOrder = clicks.map((ev) => Rx.Observable.interval(1000));\n * var switched = higherOrder.switch();\n * // The outcome is that `switched` is essentially a timer that restarts\n * // on every click. The interval Observables from older clicks do not merge\n * // with the current interval Observable.\n * switched.subscribe(x => console.log(x));\n *\n * @see {@link combineAll}\n * @see {@link concatAll}\n * @see {@link exhaust}\n * @see {@link mergeAll}\n * @see {@link switchMap}\n * @see {@link switchMapTo}\n * @see {@link zipAll}\n *\n * @return {Observable<T>} An Observable that emits the items emitted by the\n * Observable most recently emitted by the source Observable.\n * @method switch\n * @name switch\n * @owner Observable\n */\nfunction _switch() {\n    return this.lift(new SwitchOperator());\n}\nexports._switch = _switch;\nvar SwitchOperator = (function () {\n    function SwitchOperator() {\n    }\n    SwitchOperator.prototype.call = function (subscriber, source) {\n        return source._subscribe(new SwitchSubscriber(subscriber));\n    };\n    return SwitchOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar SwitchSubscriber = (function (_super) {\n    __extends(SwitchSubscriber, _super);\n    function SwitchSubscriber(destination) {\n        _super.call(this, destination);\n        this.active = 0;\n        this.hasCompleted = false;\n    }\n    SwitchSubscriber.prototype._next = function (value) {\n        this.unsubscribeInner();\n        this.active++;\n        this.add(this.innerSubscription = subscribeToResult_1.subscribeToResult(this, value));\n    };\n    SwitchSubscriber.prototype._complete = function () {\n        this.hasCompleted = true;\n        if (this.active === 0) {\n            this.destination.complete();\n        }\n    };\n    SwitchSubscriber.prototype.unsubscribeInner = function () {\n        this.active = this.active > 0 ? this.active - 1 : 0;\n        var innerSubscription = this.innerSubscription;\n        if (innerSubscription) {\n            innerSubscription.unsubscribe();\n            this.remove(innerSubscription);\n        }\n    };\n    SwitchSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {\n        this.destination.next(innerValue);\n    };\n    SwitchSubscriber.prototype.notifyError = function (err) {\n        this.destination.error(err);\n    };\n    SwitchSubscriber.prototype.notifyComplete = function () {\n        this.unsubscribeInner();\n        if (this.hasCompleted && this.active === 0) {\n            this.destination.complete();\n        }\n    };\n    return SwitchSubscriber;\n}(OuterSubscriber_1.OuterSubscriber));\n//# sourceMappingURL=switch.js.map\n\n/***/ },\n/* 946 */\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar OuterSubscriber_1 = __webpack_require__(145);\nvar subscribeToResult_1 = __webpack_require__(146);\n/**\n * Projects each source value to an Observable which is merged in the output\n * Observable, emitting values only from the most recently projected Observable.\n *\n * <span class=\"informal\">Maps each value to an Observable, then flattens all of\n * these inner Observables using {@link switch}.</span>\n *\n * <img src=\"./img/switchMap.png\" width=\"100%\">\n *\n * Returns an Observable that emits items based on applying a function that you\n * supply to each item emitted by the source Observable, where that function\n * returns an (so-called \"inner\") Observable. Each time it observes one of these\n * inner Observables, the output Observable begins emitting the items emitted by\n * that inner Observable. When a new inner Observable is emitted, `switchMap`\n * stops emitting items from the earlier-emitted inner Observable and begins\n * emitting items from the new one. It continues to behave like this for\n * subsequent inner Observables.\n *\n * @example <caption>Rerun an interval Observable on every click event</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.switchMap((ev) => Rx.Observable.interval(1000));\n * result.subscribe(x => console.log(x));\n *\n * @see {@link concatMap}\n * @see {@link exhaustMap}\n * @see {@link mergeMap}\n * @see {@link switch}\n * @see {@link switchMapTo}\n *\n * @param {function(value: T, ?index: number): Observable} project A function\n * that, when applied to an item emitted by the source Observable, returns an\n * Observable.\n * @param {function(outerValue: T, innerValue: I, outerIndex: number, innerIndex: number): any} [resultSelector]\n * A function to produce the value on the output Observable based on the values\n * and the indices of the source (outer) emission and the inner Observable\n * emission. The arguments passed to this function are:\n * - `outerValue`: the value that came from the source\n * - `innerValue`: the value that came from the projected Observable\n * - `outerIndex`: the \"index\" of the value that came from the source\n * - `innerIndex`: the \"index\" of the value from the projected Observable\n * @return {Observable} An Observable that emits the result of applying the\n * projection function (and the optional `resultSelector`) to each item emitted\n * by the source Observable and taking only the values from the most recently\n * projected inner Observable.\n * @method switchMap\n * @owner Observable\n */\nfunction switchMap(project, resultSelector) {\n    return this.lift(new SwitchMapOperator(project, resultSelector));\n}\nexports.switchMap = switchMap;\nvar SwitchMapOperator = (function () {\n    function SwitchMapOperator(project, resultSelector) {\n        this.project = project;\n        this.resultSelector = resultSelector;\n    }\n    SwitchMapOperator.prototype.call = function (subscriber, source) {\n        return source._subscribe(new SwitchMapSubscriber(subscriber, this.project, this.resultSelector));\n    };\n    return SwitchMapOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar SwitchMapSubscriber = (function (_super) {\n    __extends(SwitchMapSubscriber, _super);\n    function SwitchMapSubscriber(destination, project, resultSelector) {\n        _super.call(this, destination);\n        this.project = project;\n        this.resultSelector = resultSelector;\n        this.index = 0;\n    }\n    SwitchMapSubscriber.prototype._next = function (value) {\n        var result;\n        var index = this.index++;\n        try {\n            result = this.project(value, index);\n        }\n        catch (error) {\n            this.destination.error(error);\n            return;\n        }\n        this._innerSub(result, value, index);\n    };\n    SwitchMapSubscriber.prototype._innerSub = function (result, value, index) {\n        var innerSubscription = this.innerSubscription;\n        if (innerSubscription) {\n            innerSubscription.unsubscribe();\n        }\n        this.add(this.innerSubscription = subscribeToResult_1.subscribeToResult(this, result, value, index));\n    };\n    SwitchMapSubscriber.prototype._complete = function () {\n        var innerSubscription = this.innerSubscription;\n        if (!innerSubscription || innerSubscription.closed) {\n            _super.prototype._complete.call(this);\n        }\n    };\n    SwitchMapSubscriber.prototype._unsubscribe = function () {\n        this.innerSubscription = null;\n    };\n    SwitchMapSubscriber.prototype.notifyComplete = function (innerSub) {\n        this.remove(innerSub);\n        this.innerSubscription = null;\n        if (this.isStopped) {\n            _super.prototype._complete.call(this);\n        }\n    };\n    SwitchMapSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {\n        if (this.resultSelector) {\n            this._tryNotifyNext(outerValue, innerValue, outerIndex, innerIndex);\n        }\n        else {\n            this.destination.next(innerValue);\n        }\n    };\n    SwitchMapSubscriber.prototype._tryNotifyNext = function (outerValue, innerValue, outerIndex, innerIndex) {\n        var result;\n        try {\n            result = this.resultSelector(outerValue, innerValue, outerIndex, innerIndex);\n        }\n        catch (err) {\n            this.destination.error(err);\n            return;\n        }\n        this.destination.next(result);\n    };\n    return SwitchMapSubscriber;\n}(OuterSubscriber_1.OuterSubscriber));\n//# sourceMappingURL=switchMap.js.map\n\n/***/ },\n/* 947 */\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar OuterSubscriber_1 = __webpack_require__(145);\nvar subscribeToResult_1 = __webpack_require__(146);\n/**\n * Projects each source value to the same Observable which is flattened multiple\n * times with {@link switch} in the output Observable.\n *\n * <span class=\"informal\">It's like {@link switchMap}, but maps each value\n * always to the same inner Observable.</span>\n *\n * <img src=\"./img/switchMapTo.png\" width=\"100%\">\n *\n * Maps each source value to the given Observable `innerObservable` regardless\n * of the source value, and then flattens those resulting Observables into one\n * single Observable, which is the output Observable. The output Observables\n * emits values only from the most recently emitted instance of\n * `innerObservable`.\n *\n * @example <caption>Rerun an interval Observable on every click event</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.switchMapTo(Rx.Observable.interval(1000));\n * result.subscribe(x => console.log(x));\n *\n * @see {@link concatMapTo}\n * @see {@link switch}\n * @see {@link switchMap}\n * @see {@link mergeMapTo}\n *\n * @param {Observable} innerObservable An Observable to replace each value from\n * the source Observable.\n * @param {function(outerValue: T, innerValue: I, outerIndex: number, innerIndex: number): any} [resultSelector]\n * A function to produce the value on the output Observable based on the values\n * and the indices of the source (outer) emission and the inner Observable\n * emission. The arguments passed to this function are:\n * - `outerValue`: the value that came from the source\n * - `innerValue`: the value that came from the projected Observable\n * - `outerIndex`: the \"index\" of the value that came from the source\n * - `innerIndex`: the \"index\" of the value from the projected Observable\n * @return {Observable} An Observable that emits items from the given\n * `innerObservable` every time a value is emitted on the source Observable.\n * @return {Observable} An Observable that emits items from the given\n * `innerObservable` (and optionally transformed through `resultSelector`) every\n * time a value is emitted on the source Observable, and taking only the values\n * from the most recently projected inner Observable.\n * @method switchMapTo\n * @owner Observable\n */\nfunction switchMapTo(innerObservable, resultSelector) {\n    return this.lift(new SwitchMapToOperator(innerObservable, resultSelector));\n}\nexports.switchMapTo = switchMapTo;\nvar SwitchMapToOperator = (function () {\n    function SwitchMapToOperator(observable, resultSelector) {\n        this.observable = observable;\n        this.resultSelector = resultSelector;\n    }\n    SwitchMapToOperator.prototype.call = function (subscriber, source) {\n        return source._subscribe(new SwitchMapToSubscriber(subscriber, this.observable, this.resultSelector));\n    };\n    return SwitchMapToOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar SwitchMapToSubscriber = (function (_super) {\n    __extends(SwitchMapToSubscriber, _super);\n    function SwitchMapToSubscriber(destination, inner, resultSelector) {\n        _super.call(this, destination);\n        this.inner = inner;\n        this.resultSelector = resultSelector;\n        this.index = 0;\n    }\n    SwitchMapToSubscriber.prototype._next = function (value) {\n        var innerSubscription = this.innerSubscription;\n        if (innerSubscription) {\n            innerSubscription.unsubscribe();\n        }\n        this.add(this.innerSubscription = subscribeToResult_1.subscribeToResult(this, this.inner, value, this.index++));\n    };\n    SwitchMapToSubscriber.prototype._complete = function () {\n        var innerSubscription = this.innerSubscription;\n        if (!innerSubscription || innerSubscription.closed) {\n            _super.prototype._complete.call(this);\n        }\n    };\n    SwitchMapToSubscriber.prototype._unsubscribe = function () {\n        this.innerSubscription = null;\n    };\n    SwitchMapToSubscriber.prototype.notifyComplete = function (innerSub) {\n        this.remove(innerSub);\n        this.innerSubscription = null;\n        if (this.isStopped) {\n            _super.prototype._complete.call(this);\n        }\n    };\n    SwitchMapToSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {\n        var _a = this, resultSelector = _a.resultSelector, destination = _a.destination;\n        if (resultSelector) {\n            this.tryResultSelector(outerValue, innerValue, outerIndex, innerIndex);\n        }\n        else {\n            destination.next(innerValue);\n        }\n    };\n    SwitchMapToSubscriber.prototype.tryResultSelector = function (outerValue, innerValue, outerIndex, innerIndex) {\n        var _a = this, resultSelector = _a.resultSelector, destination = _a.destination;\n        var result;\n        try {\n            result = resultSelector(outerValue, innerValue, outerIndex, innerIndex);\n        }\n        catch (err) {\n            destination.error(err);\n            return;\n        }\n        destination.next(result);\n    };\n    return SwitchMapToSubscriber;\n}(OuterSubscriber_1.OuterSubscriber));\n//# sourceMappingURL=switchMapTo.js.map\n\n/***/ },\n/* 948 */\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Subscriber_1 = __webpack_require__(26);\nvar ArgumentOutOfRangeError_1 = __webpack_require__(692);\nvar EmptyObservable_1 = __webpack_require__(233);\n/**\n * Emits only the first `count` values emitted by the source Observable.\n *\n * <span class=\"informal\">Takes the first `count` values from the source, then\n * completes.</span>\n *\n * <img src=\"./img/take.png\" width=\"100%\">\n *\n * `take` returns an Observable that emits only the first `count` values emitted\n * by the source Observable. If the source emits fewer than `count` values then\n * all of its values are emitted. After that, it completes, regardless if the\n * source completes.\n *\n * @example <caption>Take the first 5 seconds of an infinite 1-second interval Observable</caption>\n * var interval = Rx.Observable.interval(1000);\n * var five = interval.take(5);\n * five.subscribe(x => console.log(x));\n *\n * @see {@link takeLast}\n * @see {@link takeUntil}\n * @see {@link takeWhile}\n * @see {@link skip}\n *\n * @throws {ArgumentOutOfRangeError} When using `take(i)`, it delivers an\n * ArgumentOutOrRangeError to the Observer's `error` callback if `i < 0`.\n *\n * @param {number} count The maximum number of `next` values to emit.\n * @return {Observable<T>} An Observable that emits only the first `count`\n * values emitted by the source Observable, or all of the values from the source\n * if the source emits fewer than `count` values.\n * @method take\n * @owner Observable\n */\nfunction take(count) {\n    if (count === 0) {\n        return new EmptyObservable_1.EmptyObservable();\n    }\n    else {\n        return this.lift(new TakeOperator(count));\n    }\n}\nexports.take = take;\nvar TakeOperator = (function () {\n    function TakeOperator(total) {\n        this.total = total;\n        if (this.total < 0) {\n            throw new ArgumentOutOfRangeError_1.ArgumentOutOfRangeError;\n        }\n    }\n    TakeOperator.prototype.call = function (subscriber, source) {\n        return source._subscribe(new TakeSubscriber(subscriber, this.total));\n    };\n    return TakeOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar TakeSubscriber = (function (_super) {\n    __extends(TakeSubscriber, _super);\n    function TakeSubscriber(destination, total) {\n        _super.call(this, destination);\n        this.total = total;\n        this.count = 0;\n    }\n    TakeSubscriber.prototype._next = function (value) {\n        var total = this.total;\n        if (++this.count <= total) {\n            this.destination.next(value);\n            if (this.count === total) {\n                this.destination.complete();\n                this.unsubscribe();\n            }\n        }\n    };\n    return TakeSubscriber;\n}(Subscriber_1.Subscriber));\n//# sourceMappingURL=take.js.map\n\n/***/ },\n/* 949 */\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Subscriber_1 = __webpack_require__(26);\nvar ArgumentOutOfRangeError_1 = __webpack_require__(692);\nvar EmptyObservable_1 = __webpack_require__(233);\n/**\n * Emits only the last `count` values emitted by the source Observable.\n *\n * <span class=\"informal\">Remembers the latest `count` values, then emits those\n * only when the source completes.</span>\n *\n * <img src=\"./img/takeLast.png\" width=\"100%\">\n *\n * `takeLast` returns an Observable that emits at most the last `count` values\n * emitted by the source Observable. If the source emits fewer than `count`\n * values then all of its values are emitted. This operator must wait until the\n * `complete` notification emission from the source in order to emit the `next`\n * values on the output Observable, because otherwise it is impossible to know\n * whether or not more values will be emitted on the source. For this reason,\n * all values are emitted synchronously, followed by the complete notification.\n *\n * @example <caption>Take the last 3 values of an Observable with many values</caption>\n * var many = Rx.Observable.range(1, 100);\n * var lastThree = many.takeLast(3);\n * lastThree.subscribe(x => console.log(x));\n *\n * @see {@link take}\n * @see {@link takeUntil}\n * @see {@link takeWhile}\n * @see {@link skip}\n *\n * @throws {ArgumentOutOfRangeError} When using `takeLast(i)`, it delivers an\n * ArgumentOutOrRangeError to the Observer's `error` callback if `i < 0`.\n *\n * @param {number} count The maximum number of values to emit from the end of\n * the sequence of values emitted by the source Observable.\n * @return {Observable<T>} An Observable that emits at most the last count\n * values emitted by the source Observable.\n * @method takeLast\n * @owner Observable\n */\nfunction takeLast(count) {\n    if (count === 0) {\n        return new EmptyObservable_1.EmptyObservable();\n    }\n    else {\n        return this.lift(new TakeLastOperator(count));\n    }\n}\nexports.takeLast = takeLast;\nvar TakeLastOperator = (function () {\n    function TakeLastOperator(total) {\n        this.total = total;\n        if (this.total < 0) {\n            throw new ArgumentOutOfRangeError_1.ArgumentOutOfRangeError;\n        }\n    }\n    TakeLastOperator.prototype.call = function (subscriber, source) {\n        return source._subscribe(new TakeLastSubscriber(subscriber, this.total));\n    };\n    return TakeLastOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar TakeLastSubscriber = (function (_super) {\n    __extends(TakeLastSubscriber, _super);\n    function TakeLastSubscriber(destination, total) {\n        _super.call(this, destination);\n        this.total = total;\n        this.ring = new Array();\n        this.count = 0;\n    }\n    TakeLastSubscriber.prototype._next = function (value) {\n        var ring = this.ring;\n        var total = this.total;\n        var count = this.count++;\n        if (ring.length < total) {\n            ring.push(value);\n        }\n        else {\n            var index = count % total;\n            ring[index] = value;\n        }\n    };\n    TakeLastSubscriber.prototype._complete = function () {\n        var destination = this.destination;\n        var count = this.count;\n        if (count > 0) {\n            var total = this.count >= this.total ? this.total : this.count;\n            var ring = this.ring;\n            for (var i = 0; i < total; i++) {\n                var idx = (count++) % total;\n                destination.next(ring[idx]);\n            }\n        }\n        destination.complete();\n    };\n    return TakeLastSubscriber;\n}(Subscriber_1.Subscriber));\n//# sourceMappingURL=takeLast.js.map\n\n/***/ },\n/* 950 */\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar OuterSubscriber_1 = __webpack_require__(145);\nvar subscribeToResult_1 = __webpack_require__(146);\n/**\n * Emits the values emitted by the source Observable until a `notifier`\n * Observable emits a value.\n *\n * <span class=\"informal\">Lets values pass until a second Observable,\n * `notifier`, emits something. Then, it completes.</span>\n *\n * <img src=\"./img/takeUntil.png\" width=\"100%\">\n *\n * `takeUntil` subscribes and begins mirroring the source Observable. It also\n * monitors a second Observable, `notifier` that you provide. If the `notifier`\n * emits a value or a complete notification, the output Observable stops\n * mirroring the source Observable and completes.\n *\n * @example <caption>Tick every second until the first click happens</caption>\n * var interval = Rx.Observable.interval(1000);\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = interval.takeUntil(clicks);\n * result.subscribe(x => console.log(x));\n *\n * @see {@link take}\n * @see {@link takeLast}\n * @see {@link takeWhile}\n * @see {@link skip}\n *\n * @param {Observable} notifier The Observable whose first emitted value will\n * cause the output Observable of `takeUntil` to stop emitting values from the\n * source Observable.\n * @return {Observable<T>} An Observable that emits the values from the source\n * Observable until such time as `notifier` emits its first value.\n * @method takeUntil\n * @owner Observable\n */\nfunction takeUntil(notifier) {\n    return this.lift(new TakeUntilOperator(notifier));\n}\nexports.takeUntil = takeUntil;\nvar TakeUntilOperator = (function () {\n    function TakeUntilOperator(notifier) {\n        this.notifier = notifier;\n    }\n    TakeUntilOperator.prototype.call = function (subscriber, source) {\n        return source._subscribe(new TakeUntilSubscriber(subscriber, this.notifier));\n    };\n    return TakeUntilOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar TakeUntilSubscriber = (function (_super) {\n    __extends(TakeUntilSubscriber, _super);\n    function TakeUntilSubscriber(destination, notifier) {\n        _super.call(this, destination);\n        this.notifier = notifier;\n        this.add(subscribeToResult_1.subscribeToResult(this, notifier));\n    }\n    TakeUntilSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {\n        this.complete();\n    };\n    TakeUntilSubscriber.prototype.notifyComplete = function () {\n        // noop\n    };\n    return TakeUntilSubscriber;\n}(OuterSubscriber_1.OuterSubscriber));\n//# sourceMappingURL=takeUntil.js.map\n\n/***/ },\n/* 951 */\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Subscriber_1 = __webpack_require__(26);\n/**\n * Emits values emitted by the source Observable so long as each value satisfies\n * the given `predicate`, and then completes as soon as this `predicate` is not\n * satisfied.\n *\n * <span class=\"informal\">Takes values from the source only while they pass the\n * condition given. When the first value does not satisfy, it completes.</span>\n *\n * <img src=\"./img/takeWhile.png\" width=\"100%\">\n *\n * `takeWhile` subscribes and begins mirroring the source Observable. Each value\n * emitted on the source is given to the `predicate` function which returns a\n * boolean, representing a condition to be satisfied by the source values. The\n * output Observable emits the source values until such time as the `predicate`\n * returns false, at which point `takeWhile` stops mirroring the source\n * Observable and completes the output Observable.\n *\n * @example <caption>Emit click events only while the clientX property is greater than 200</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.takeWhile(ev => ev.clientX > 200);\n * result.subscribe(x => console.log(x));\n *\n * @see {@link take}\n * @see {@link takeLast}\n * @see {@link takeUntil}\n * @see {@link skip}\n *\n * @param {function(value: T, index: number): boolean} predicate A function that\n * evaluates a value emitted by the source Observable and returns a boolean.\n * Also takes the (zero-based) index as the second argument.\n * @return {Observable<T>} An Observable that emits the values from the source\n * Observable so long as each value satisfies the condition defined by the\n * `predicate`, then completes.\n * @method takeWhile\n * @owner Observable\n */\nfunction takeWhile(predicate) {\n    return this.lift(new TakeWhileOperator(predicate));\n}\nexports.takeWhile = takeWhile;\nvar TakeWhileOperator = (function () {\n    function TakeWhileOperator(predicate) {\n        this.predicate = predicate;\n    }\n    TakeWhileOperator.prototype.call = function (subscriber, source) {\n        return source._subscribe(new TakeWhileSubscriber(subscriber, this.predicate));\n    };\n    return TakeWhileOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar TakeWhileSubscriber = (function (_super) {\n    __extends(TakeWhileSubscriber, _super);\n    function TakeWhileSubscriber(destination, predicate) {\n        _super.call(this, destination);\n        this.predicate = predicate;\n        this.index = 0;\n    }\n    TakeWhileSubscriber.prototype._next = function (value) {\n        var destination = this.destination;\n        var result;\n        try {\n            result = this.predicate(value, this.index++);\n        }\n        catch (err) {\n            destination.error(err);\n            return;\n        }\n        this.nextOrComplete(value, result);\n    };\n    TakeWhileSubscriber.prototype.nextOrComplete = function (value, predicateResult) {\n        var destination = this.destination;\n        if (Boolean(predicateResult)) {\n            destination.next(value);\n        }\n        else {\n            destination.complete();\n        }\n    };\n    return TakeWhileSubscriber;\n}(Subscriber_1.Subscriber));\n//# sourceMappingURL=takeWhile.js.map\n\n/***/ },\n/* 952 */\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar OuterSubscriber_1 = __webpack_require__(145);\nvar subscribeToResult_1 = __webpack_require__(146);\n/**\n * Emits a value from the source Observable, then ignores subsequent source\n * values for a duration determined by another Observable, then repeats this\n * process.\n *\n * <span class=\"informal\">It's like {@link throttleTime}, but the silencing\n * duration is determined by a second Observable.</span>\n *\n * <img src=\"./img/throttle.png\" width=\"100%\">\n *\n * `throttle` emits the source Observable values on the output Observable\n * when its internal timer is disabled, and ignores source values when the timer\n * is enabled. Initially, the timer is disabled. As soon as the first source\n * value arrives, it is forwarded to the output Observable, and then the timer\n * is enabled by calling the `durationSelector` function with the source value,\n * which returns the \"duration\" Observable. When the duration Observable emits a\n * value or completes, the timer is disabled, and this process repeats for the\n * next source value.\n *\n * @example <caption>Emit clicks at a rate of at most one click per second</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.throttle(ev => Rx.Observable.interval(1000));\n * result.subscribe(x => console.log(x));\n *\n * @see {@link audit}\n * @see {@link debounce}\n * @see {@link delayWhen}\n * @see {@link sample}\n * @see {@link throttleTime}\n *\n * @param {function(value: T): Observable|Promise} durationSelector A function\n * that receives a value from the source Observable, for computing the silencing\n * duration for each source value, returned as an Observable or a Promise.\n * @return {Observable<T>} An Observable that performs the throttle operation to\n * limit the rate of emissions from the source.\n * @method throttle\n * @owner Observable\n */\nfunction throttle(durationSelector) {\n    return this.lift(new ThrottleOperator(durationSelector));\n}\nexports.throttle = throttle;\nvar ThrottleOperator = (function () {\n    function ThrottleOperator(durationSelector) {\n        this.durationSelector = durationSelector;\n    }\n    ThrottleOperator.prototype.call = function (subscriber, source) {\n        return source._subscribe(new ThrottleSubscriber(subscriber, this.durationSelector));\n    };\n    return ThrottleOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar ThrottleSubscriber = (function (_super) {\n    __extends(ThrottleSubscriber, _super);\n    function ThrottleSubscriber(destination, durationSelector) {\n        _super.call(this, destination);\n        this.destination = destination;\n        this.durationSelector = durationSelector;\n    }\n    ThrottleSubscriber.prototype._next = function (value) {\n        if (!this.throttled) {\n            this.tryDurationSelector(value);\n        }\n    };\n    ThrottleSubscriber.prototype.tryDurationSelector = function (value) {\n        var duration = null;\n        try {\n            duration = this.durationSelector(value);\n        }\n        catch (err) {\n            this.destination.error(err);\n            return;\n        }\n        this.emitAndThrottle(value, duration);\n    };\n    ThrottleSubscriber.prototype.emitAndThrottle = function (value, duration) {\n        this.add(this.throttled = subscribeToResult_1.subscribeToResult(this, duration));\n        this.destination.next(value);\n    };\n    ThrottleSubscriber.prototype._unsubscribe = function () {\n        var throttled = this.throttled;\n        if (throttled) {\n            this.remove(throttled);\n            this.throttled = null;\n            throttled.unsubscribe();\n        }\n    };\n    ThrottleSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {\n        this._unsubscribe();\n    };\n    ThrottleSubscriber.prototype.notifyComplete = function () {\n        this._unsubscribe();\n    };\n    return ThrottleSubscriber;\n}(OuterSubscriber_1.OuterSubscriber));\n//# sourceMappingURL=throttle.js.map\n\n/***/ },\n/* 953 */\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Subscriber_1 = __webpack_require__(26);\nvar async_1 = __webpack_require__(686);\n/**\n * Emits a value from the source Observable, then ignores subsequent source\n * values for `duration` milliseconds, then repeats this process.\n *\n * <span class=\"informal\">Lets a value pass, then ignores source values for the\n * next `duration` milliseconds.</span>\n *\n * <img src=\"./img/throttleTime.png\" width=\"100%\">\n *\n * `throttleTime` emits the source Observable values on the output Observable\n * when its internal timer is disabled, and ignores source values when the timer\n * is enabled. Initially, the timer is disabled. As soon as the first source\n * value arrives, it is forwarded to the output Observable, and then the timer\n * is enabled. After `duration` milliseconds (or the time unit determined\n * internally by the optional `scheduler`) has passed, the timer is disabled,\n * and this process repeats for the next source value. Optionally takes a\n * {@link Scheduler} for managing timers.\n *\n * @example <caption>Emit clicks at a rate of at most one click per second</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.throttleTime(1000);\n * result.subscribe(x => console.log(x));\n *\n * @see {@link auditTime}\n * @see {@link debounceTime}\n * @see {@link delay}\n * @see {@link sampleTime}\n * @see {@link throttle}\n *\n * @param {number} duration Time to wait before emitting another value after\n * emitting the last value, measured in milliseconds or the time unit determined\n * internally by the optional `scheduler`.\n * @param {Scheduler} [scheduler=async] The {@link Scheduler} to use for\n * managing the timers that handle the sampling.\n * @return {Observable<T>} An Observable that performs the throttle operation to\n * limit the rate of emissions from the source.\n * @method throttleTime\n * @owner Observable\n */\nfunction throttleTime(duration, scheduler) {\n    if (scheduler === void 0) { scheduler = async_1.async; }\n    return this.lift(new ThrottleTimeOperator(duration, scheduler));\n}\nexports.throttleTime = throttleTime;\nvar ThrottleTimeOperator = (function () {\n    function ThrottleTimeOperator(duration, scheduler) {\n        this.duration = duration;\n        this.scheduler = scheduler;\n    }\n    ThrottleTimeOperator.prototype.call = function (subscriber, source) {\n        return source._subscribe(new ThrottleTimeSubscriber(subscriber, this.duration, this.scheduler));\n    };\n    return ThrottleTimeOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar ThrottleTimeSubscriber = (function (_super) {\n    __extends(ThrottleTimeSubscriber, _super);\n    function ThrottleTimeSubscriber(destination, duration, scheduler) {\n        _super.call(this, destination);\n        this.duration = duration;\n        this.scheduler = scheduler;\n    }\n    ThrottleTimeSubscriber.prototype._next = function (value) {\n        if (!this.throttled) {\n            this.add(this.throttled = this.scheduler.schedule(dispatchNext, this.duration, { subscriber: this }));\n            this.destination.next(value);\n        }\n    };\n    ThrottleTimeSubscriber.prototype.clearThrottle = function () {\n        var throttled = this.throttled;\n        if (throttled) {\n            throttled.unsubscribe();\n            this.remove(throttled);\n            this.throttled = null;\n        }\n    };\n    return ThrottleTimeSubscriber;\n}(Subscriber_1.Subscriber));\nfunction dispatchNext(arg) {\n    var subscriber = arg.subscriber;\n    subscriber.clearThrottle();\n}\n//# sourceMappingURL=throttleTime.js.map\n\n/***/ },\n/* 954 */\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar async_1 = __webpack_require__(686);\nvar isDate_1 = __webpack_require__(693);\nvar Subscriber_1 = __webpack_require__(26);\n/**\n * @param due\n * @param errorToSend\n * @param scheduler\n * @return {Observable<R>|WebSocketSubject<T>|Observable<T>}\n * @method timeout\n * @owner Observable\n */\nfunction timeout(due, errorToSend, scheduler) {\n    if (errorToSend === void 0) { errorToSend = null; }\n    if (scheduler === void 0) { scheduler = async_1.async; }\n    var absoluteTimeout = isDate_1.isDate(due);\n    var waitFor = absoluteTimeout ? (+due - scheduler.now()) : Math.abs(due);\n    return this.lift(new TimeoutOperator(waitFor, absoluteTimeout, errorToSend, scheduler));\n}\nexports.timeout = timeout;\nvar TimeoutOperator = (function () {\n    function TimeoutOperator(waitFor, absoluteTimeout, errorToSend, scheduler) {\n        this.waitFor = waitFor;\n        this.absoluteTimeout = absoluteTimeout;\n        this.errorToSend = errorToSend;\n        this.scheduler = scheduler;\n    }\n    TimeoutOperator.prototype.call = function (subscriber, source) {\n        return source._subscribe(new TimeoutSubscriber(subscriber, this.absoluteTimeout, this.waitFor, this.errorToSend, this.scheduler));\n    };\n    return TimeoutOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar TimeoutSubscriber = (function (_super) {\n    __extends(TimeoutSubscriber, _super);\n    function TimeoutSubscriber(destination, absoluteTimeout, waitFor, errorToSend, scheduler) {\n        _super.call(this, destination);\n        this.absoluteTimeout = absoluteTimeout;\n        this.waitFor = waitFor;\n        this.errorToSend = errorToSend;\n        this.scheduler = scheduler;\n        this.index = 0;\n        this._previousIndex = 0;\n        this._hasCompleted = false;\n        this.scheduleTimeout();\n    }\n    Object.defineProperty(TimeoutSubscriber.prototype, \"previousIndex\", {\n        get: function () {\n            return this._previousIndex;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(TimeoutSubscriber.prototype, \"hasCompleted\", {\n        get: function () {\n            return this._hasCompleted;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    TimeoutSubscriber.dispatchTimeout = function (state) {\n        var source = state.subscriber;\n        var currentIndex = state.index;\n        if (!source.hasCompleted && source.previousIndex === currentIndex) {\n            source.notifyTimeout();\n        }\n    };\n    TimeoutSubscriber.prototype.scheduleTimeout = function () {\n        var currentIndex = this.index;\n        this.scheduler.schedule(TimeoutSubscriber.dispatchTimeout, this.waitFor, { subscriber: this, index: currentIndex });\n        this.index++;\n        this._previousIndex = currentIndex;\n    };\n    TimeoutSubscriber.prototype._next = function (value) {\n        this.destination.next(value);\n        if (!this.absoluteTimeout) {\n            this.scheduleTimeout();\n        }\n    };\n    TimeoutSubscriber.prototype._error = function (err) {\n        this.destination.error(err);\n        this._hasCompleted = true;\n    };\n    TimeoutSubscriber.prototype._complete = function () {\n        this.destination.complete();\n        this._hasCompleted = true;\n    };\n    TimeoutSubscriber.prototype.notifyTimeout = function () {\n        this.error(this.errorToSend || new Error('timeout'));\n    };\n    return TimeoutSubscriber;\n}(Subscriber_1.Subscriber));\n//# sourceMappingURL=timeout.js.map\n\n/***/ },\n/* 955 */\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar async_1 = __webpack_require__(686);\nvar isDate_1 = __webpack_require__(693);\nvar OuterSubscriber_1 = __webpack_require__(145);\nvar subscribeToResult_1 = __webpack_require__(146);\n/**\n * @param due\n * @param withObservable\n * @param scheduler\n * @return {Observable<R>|WebSocketSubject<T>|Observable<T>}\n * @method timeoutWith\n * @owner Observable\n */\nfunction timeoutWith(due, withObservable, scheduler) {\n    if (scheduler === void 0) { scheduler = async_1.async; }\n    var absoluteTimeout = isDate_1.isDate(due);\n    var waitFor = absoluteTimeout ? (+due - scheduler.now()) : Math.abs(due);\n    return this.lift(new TimeoutWithOperator(waitFor, absoluteTimeout, withObservable, scheduler));\n}\nexports.timeoutWith = timeoutWith;\nvar TimeoutWithOperator = (function () {\n    function TimeoutWithOperator(waitFor, absoluteTimeout, withObservable, scheduler) {\n        this.waitFor = waitFor;\n        this.absoluteTimeout = absoluteTimeout;\n        this.withObservable = withObservable;\n        this.scheduler = scheduler;\n    }\n    TimeoutWithOperator.prototype.call = function (subscriber, source) {\n        return source._subscribe(new TimeoutWithSubscriber(subscriber, this.absoluteTimeout, this.waitFor, this.withObservable, this.scheduler));\n    };\n    return TimeoutWithOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar TimeoutWithSubscriber = (function (_super) {\n    __extends(TimeoutWithSubscriber, _super);\n    function TimeoutWithSubscriber(destination, absoluteTimeout, waitFor, withObservable, scheduler) {\n        _super.call(this);\n        this.destination = destination;\n        this.absoluteTimeout = absoluteTimeout;\n        this.waitFor = waitFor;\n        this.withObservable = withObservable;\n        this.scheduler = scheduler;\n        this.timeoutSubscription = undefined;\n        this.index = 0;\n        this._previousIndex = 0;\n        this._hasCompleted = false;\n        destination.add(this);\n        this.scheduleTimeout();\n    }\n    Object.defineProperty(TimeoutWithSubscriber.prototype, \"previousIndex\", {\n        get: function () {\n            return this._previousIndex;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(TimeoutWithSubscriber.prototype, \"hasCompleted\", {\n        get: function () {\n            return this._hasCompleted;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    TimeoutWithSubscriber.dispatchTimeout = function (state) {\n        var source = state.subscriber;\n        var currentIndex = state.index;\n        if (!source.hasCompleted && source.previousIndex === currentIndex) {\n            source.handleTimeout();\n        }\n    };\n    TimeoutWithSubscriber.prototype.scheduleTimeout = function () {\n        var currentIndex = this.index;\n        var timeoutState = { subscriber: this, index: currentIndex };\n        this.scheduler.schedule(TimeoutWithSubscriber.dispatchTimeout, this.waitFor, timeoutState);\n        this.index++;\n        this._previousIndex = currentIndex;\n    };\n    TimeoutWithSubscriber.prototype._next = function (value) {\n        this.destination.next(value);\n        if (!this.absoluteTimeout) {\n            this.scheduleTimeout();\n        }\n    };\n    TimeoutWithSubscriber.prototype._error = function (err) {\n        this.destination.error(err);\n        this._hasCompleted = true;\n    };\n    TimeoutWithSubscriber.prototype._complete = function () {\n        this.destination.complete();\n        this._hasCompleted = true;\n    };\n    TimeoutWithSubscriber.prototype.handleTimeout = function () {\n        if (!this.closed) {\n            var withObservable = this.withObservable;\n            this.unsubscribe();\n            this.destination.add(this.timeoutSubscription = subscribeToResult_1.subscribeToResult(this, withObservable));\n        }\n    };\n    return TimeoutWithSubscriber;\n}(OuterSubscriber_1.OuterSubscriber));\n//# sourceMappingURL=timeoutWith.js.map\n\n/***/ },\n/* 956 */\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Subscriber_1 = __webpack_require__(26);\n/**\n * @return {Observable<any[]>|WebSocketSubject<T>|Observable<T>}\n * @method toArray\n * @owner Observable\n */\nfunction toArray() {\n    return this.lift(new ToArrayOperator());\n}\nexports.toArray = toArray;\nvar ToArrayOperator = (function () {\n    function ToArrayOperator() {\n    }\n    ToArrayOperator.prototype.call = function (subscriber, source) {\n        return source._subscribe(new ToArraySubscriber(subscriber));\n    };\n    return ToArrayOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar ToArraySubscriber = (function (_super) {\n    __extends(ToArraySubscriber, _super);\n    function ToArraySubscriber(destination) {\n        _super.call(this, destination);\n        this.array = [];\n    }\n    ToArraySubscriber.prototype._next = function (x) {\n        this.array.push(x);\n    };\n    ToArraySubscriber.prototype._complete = function () {\n        this.destination.next(this.array);\n        this.destination.complete();\n    };\n    return ToArraySubscriber;\n}(Subscriber_1.Subscriber));\n//# sourceMappingURL=toArray.js.map\n\n/***/ },\n/* 957 */\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Subject_1 = __webpack_require__(66);\nvar OuterSubscriber_1 = __webpack_require__(145);\nvar subscribeToResult_1 = __webpack_require__(146);\n/**\n * Branch out the source Observable values as a nested Observable whenever\n * `windowBoundaries` emits.\n *\n * <span class=\"informal\">It's like {@link buffer}, but emits a nested Observable\n * instead of an array.</span>\n *\n * <img src=\"./img/window.png\" width=\"100%\">\n *\n * Returns an Observable that emits windows of items it collects from the source\n * Observable. The output Observable emits connected, non-overlapping\n * windows. It emits the current window and opens a new one whenever the\n * Observable `windowBoundaries` emits an item. Because each window is an\n * Observable, the output is a higher-order Observable.\n *\n * @example <caption>In every window of 1 second each, emit at most 2 click events</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var interval = Rx.Observable.interval(1000);\n * var result = clicks.window(interval)\n *   .map(win => win.take(2)) // each window has at most 2 emissions\n *   .mergeAll(); // flatten the Observable-of-Observables\n * result.subscribe(x => console.log(x));\n *\n * @see {@link windowCount}\n * @see {@link windowTime}\n * @see {@link windowToggle}\n * @see {@link windowWhen}\n * @see {@link buffer}\n *\n * @param {Observable<any>} windowBoundaries An Observable that completes the\n * previous window and starts a new window.\n * @return {Observable<Observable<T>>} An Observable of windows, which are\n * Observables emitting values of the source Observable.\n * @method window\n * @owner Observable\n */\nfunction window(windowBoundaries) {\n    return this.lift(new WindowOperator(windowBoundaries));\n}\nexports.window = window;\nvar WindowOperator = (function () {\n    function WindowOperator(windowBoundaries) {\n        this.windowBoundaries = windowBoundaries;\n    }\n    WindowOperator.prototype.call = function (subscriber, source) {\n        var windowSubscriber = new WindowSubscriber(subscriber);\n        var sourceSubscription = source._subscribe(windowSubscriber);\n        if (!sourceSubscription.closed) {\n            windowSubscriber.add(subscribeToResult_1.subscribeToResult(windowSubscriber, this.windowBoundaries));\n        }\n        return sourceSubscription;\n    };\n    return WindowOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar WindowSubscriber = (function (_super) {\n    __extends(WindowSubscriber, _super);\n    function WindowSubscriber(destination) {\n        _super.call(this, destination);\n        this.window = new Subject_1.Subject();\n        destination.next(this.window);\n    }\n    WindowSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {\n        this.openWindow();\n    };\n    WindowSubscriber.prototype.notifyError = function (error, innerSub) {\n        this._error(error);\n    };\n    WindowSubscriber.prototype.notifyComplete = function (innerSub) {\n        this._complete();\n    };\n    WindowSubscriber.prototype._next = function (value) {\n        this.window.next(value);\n    };\n    WindowSubscriber.prototype._error = function (err) {\n        this.window.error(err);\n        this.destination.error(err);\n    };\n    WindowSubscriber.prototype._complete = function () {\n        this.window.complete();\n        this.destination.complete();\n    };\n    WindowSubscriber.prototype._unsubscribe = function () {\n        this.window = null;\n    };\n    WindowSubscriber.prototype.openWindow = function () {\n        var prevWindow = this.window;\n        if (prevWindow) {\n            prevWindow.complete();\n        }\n        var destination = this.destination;\n        var newWindow = this.window = new Subject_1.Subject();\n        destination.next(newWindow);\n    };\n    return WindowSubscriber;\n}(OuterSubscriber_1.OuterSubscriber));\n//# sourceMappingURL=window.js.map\n\n/***/ },\n/* 958 */\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Subscriber_1 = __webpack_require__(26);\nvar Subject_1 = __webpack_require__(66);\n/**\n * Branch out the source Observable values as a nested Observable with each\n * nested Observable emitting at most `windowSize` values.\n *\n * <span class=\"informal\">It's like {@link bufferCount}, but emits a nested\n * Observable instead of an array.</span>\n *\n * <img src=\"./img/windowCount.png\" width=\"100%\">\n *\n * Returns an Observable that emits windows of items it collects from the source\n * Observable. The output Observable emits windows every `startWindowEvery`\n * items, each containing no more than `windowSize` items. When the source\n * Observable completes or encounters an error, the output Observable emits\n * the current window and propagates the notification from the source\n * Observable. If `startWindowEvery` is not provided, then new windows are\n * started immediately at the start of the source and when each window completes\n * with size `windowSize`.\n *\n * @example <caption>Ignore every 3rd click event, starting from the first one</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.windowCount(3)\n *   .map(win => win.skip(1)) // skip first of every 3 clicks\n *   .mergeAll(); // flatten the Observable-of-Observables\n * result.subscribe(x => console.log(x));\n *\n * @example <caption>Ignore every 3rd click event, starting from the third one</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.windowCount(2, 3)\n *   .mergeAll(); // flatten the Observable-of-Observables\n * result.subscribe(x => console.log(x));\n *\n * @see {@link window}\n * @see {@link windowTime}\n * @see {@link windowToggle}\n * @see {@link windowWhen}\n * @see {@link bufferCount}\n *\n * @param {number} windowSize The maximum number of values emitted by each\n * window.\n * @param {number} [startWindowEvery] Interval at which to start a new window.\n * For example if `startWindowEvery` is `2`, then a new window will be started\n * on every other value from the source. A new window is started at the\n * beginning of the source by default.\n * @return {Observable<Observable<T>>} An Observable of windows, which in turn\n * are Observable of values.\n * @method windowCount\n * @owner Observable\n */\nfunction windowCount(windowSize, startWindowEvery) {\n    if (startWindowEvery === void 0) { startWindowEvery = 0; }\n    return this.lift(new WindowCountOperator(windowSize, startWindowEvery));\n}\nexports.windowCount = windowCount;\nvar WindowCountOperator = (function () {\n    function WindowCountOperator(windowSize, startWindowEvery) {\n        this.windowSize = windowSize;\n        this.startWindowEvery = startWindowEvery;\n    }\n    WindowCountOperator.prototype.call = function (subscriber, source) {\n        return source._subscribe(new WindowCountSubscriber(subscriber, this.windowSize, this.startWindowEvery));\n    };\n    return WindowCountOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar WindowCountSubscriber = (function (_super) {\n    __extends(WindowCountSubscriber, _super);\n    function WindowCountSubscriber(destination, windowSize, startWindowEvery) {\n        _super.call(this, destination);\n        this.destination = destination;\n        this.windowSize = windowSize;\n        this.startWindowEvery = startWindowEvery;\n        this.windows = [new Subject_1.Subject()];\n        this.count = 0;\n        destination.next(this.windows[0]);\n    }\n    WindowCountSubscriber.prototype._next = function (value) {\n        var startWindowEvery = (this.startWindowEvery > 0) ? this.startWindowEvery : this.windowSize;\n        var destination = this.destination;\n        var windowSize = this.windowSize;\n        var windows = this.windows;\n        var len = windows.length;\n        for (var i = 0; i < len && !this.closed; i++) {\n            windows[i].next(value);\n        }\n        var c = this.count - windowSize + 1;\n        if (c >= 0 && c % startWindowEvery === 0 && !this.closed) {\n            windows.shift().complete();\n        }\n        if (++this.count % startWindowEvery === 0 && !this.closed) {\n            var window_1 = new Subject_1.Subject();\n            windows.push(window_1);\n            destination.next(window_1);\n        }\n    };\n    WindowCountSubscriber.prototype._error = function (err) {\n        var windows = this.windows;\n        if (windows) {\n            while (windows.length > 0 && !this.closed) {\n                windows.shift().error(err);\n            }\n        }\n        this.destination.error(err);\n    };\n    WindowCountSubscriber.prototype._complete = function () {\n        var windows = this.windows;\n        if (windows) {\n            while (windows.length > 0 && !this.closed) {\n                windows.shift().complete();\n            }\n        }\n        this.destination.complete();\n    };\n    WindowCountSubscriber.prototype._unsubscribe = function () {\n        this.count = 0;\n        this.windows = null;\n    };\n    return WindowCountSubscriber;\n}(Subscriber_1.Subscriber));\n//# sourceMappingURL=windowCount.js.map\n\n/***/ },\n/* 959 */\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Subject_1 = __webpack_require__(66);\nvar async_1 = __webpack_require__(686);\nvar Subscriber_1 = __webpack_require__(26);\n/**\n * Branch out the source Observable values as a nested Observable periodically\n * in time.\n *\n * <span class=\"informal\">It's like {@link bufferTime}, but emits a nested\n * Observable instead of an array.</span>\n *\n * <img src=\"./img/windowTime.png\" width=\"100%\">\n *\n * Returns an Observable that emits windows of items it collects from the source\n * Observable. The output Observable starts a new window periodically, as\n * determined by the `windowCreationInterval` argument. It emits each window\n * after a fixed timespan, specified by the `windowTimeSpan` argument. When the\n * source Observable completes or encounters an error, the output Observable\n * emits the current window and propagates the notification from the source\n * Observable. If `windowCreationInterval` is not provided, the output\n * Observable starts a new window when the previous window of duration\n * `windowTimeSpan` completes.\n *\n * @example <caption>In every window of 1 second each, emit at most 2 click events</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.windowTime(1000)\n *   .map(win => win.take(2)) // each window has at most 2 emissions\n *   .mergeAll(); // flatten the Observable-of-Observables\n * result.subscribe(x => console.log(x));\n *\n * @example <caption>Every 5 seconds start a window 1 second long, and emit at most 2 click events per window</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.windowTime(1000, 5000)\n *   .map(win => win.take(2)) // each window has at most 2 emissions\n *   .mergeAll(); // flatten the Observable-of-Observables\n * result.subscribe(x => console.log(x));\n *\n * @see {@link window}\n * @see {@link windowCount}\n * @see {@link windowToggle}\n * @see {@link windowWhen}\n * @see {@link bufferTime}\n *\n * @param {number} windowTimeSpan The amount of time to fill each window.\n * @param {number} [windowCreationInterval] The interval at which to start new\n * windows.\n * @param {Scheduler} [scheduler=async] The scheduler on which to schedule the\n * intervals that determine window boundaries.\n * @return {Observable<Observable<T>>} An observable of windows, which in turn\n * are Observables.\n * @method windowTime\n * @owner Observable\n */\nfunction windowTime(windowTimeSpan, windowCreationInterval, scheduler) {\n    if (windowCreationInterval === void 0) { windowCreationInterval = null; }\n    if (scheduler === void 0) { scheduler = async_1.async; }\n    return this.lift(new WindowTimeOperator(windowTimeSpan, windowCreationInterval, scheduler));\n}\nexports.windowTime = windowTime;\nvar WindowTimeOperator = (function () {\n    function WindowTimeOperator(windowTimeSpan, windowCreationInterval, scheduler) {\n        this.windowTimeSpan = windowTimeSpan;\n        this.windowCreationInterval = windowCreationInterval;\n        this.scheduler = scheduler;\n    }\n    WindowTimeOperator.prototype.call = function (subscriber, source) {\n        return source._subscribe(new WindowTimeSubscriber(subscriber, this.windowTimeSpan, this.windowCreationInterval, this.scheduler));\n    };\n    return WindowTimeOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar WindowTimeSubscriber = (function (_super) {\n    __extends(WindowTimeSubscriber, _super);\n    function WindowTimeSubscriber(destination, windowTimeSpan, windowCreationInterval, scheduler) {\n        _super.call(this, destination);\n        this.destination = destination;\n        this.windowTimeSpan = windowTimeSpan;\n        this.windowCreationInterval = windowCreationInterval;\n        this.scheduler = scheduler;\n        this.windows = [];\n        if (windowCreationInterval !== null && windowCreationInterval >= 0) {\n            var window_1 = this.openWindow();\n            var closeState = { subscriber: this, window: window_1, context: null };\n            var creationState = { windowTimeSpan: windowTimeSpan, windowCreationInterval: windowCreationInterval, subscriber: this, scheduler: scheduler };\n            this.add(scheduler.schedule(dispatchWindowClose, windowTimeSpan, closeState));\n            this.add(scheduler.schedule(dispatchWindowCreation, windowCreationInterval, creationState));\n        }\n        else {\n            var window_2 = this.openWindow();\n            var timeSpanOnlyState = { subscriber: this, window: window_2, windowTimeSpan: windowTimeSpan };\n            this.add(scheduler.schedule(dispatchWindowTimeSpanOnly, windowTimeSpan, timeSpanOnlyState));\n        }\n    }\n    WindowTimeSubscriber.prototype._next = function (value) {\n        var windows = this.windows;\n        var len = windows.length;\n        for (var i = 0; i < len; i++) {\n            var window_3 = windows[i];\n            if (!window_3.closed) {\n                window_3.next(value);\n            }\n        }\n    };\n    WindowTimeSubscriber.prototype._error = function (err) {\n        var windows = this.windows;\n        while (windows.length > 0) {\n            windows.shift().error(err);\n        }\n        this.destination.error(err);\n    };\n    WindowTimeSubscriber.prototype._complete = function () {\n        var windows = this.windows;\n        while (windows.length > 0) {\n            var window_4 = windows.shift();\n            if (!window_4.closed) {\n                window_4.complete();\n            }\n        }\n        this.destination.complete();\n    };\n    WindowTimeSubscriber.prototype.openWindow = function () {\n        var window = new Subject_1.Subject();\n        this.windows.push(window);\n        var destination = this.destination;\n        destination.next(window);\n        return window;\n    };\n    WindowTimeSubscriber.prototype.closeWindow = function (window) {\n        window.complete();\n        var windows = this.windows;\n        windows.splice(windows.indexOf(window), 1);\n    };\n    return WindowTimeSubscriber;\n}(Subscriber_1.Subscriber));\nfunction dispatchWindowTimeSpanOnly(state) {\n    var subscriber = state.subscriber, windowTimeSpan = state.windowTimeSpan, window = state.window;\n    if (window) {\n        window.complete();\n    }\n    state.window = subscriber.openWindow();\n    this.schedule(state, windowTimeSpan);\n}\nfunction dispatchWindowCreation(state) {\n    var windowTimeSpan = state.windowTimeSpan, subscriber = state.subscriber, scheduler = state.scheduler, windowCreationInterval = state.windowCreationInterval;\n    var window = subscriber.openWindow();\n    var action = this;\n    var context = { action: action, subscription: null };\n    var timeSpanState = { subscriber: subscriber, window: window, context: context };\n    context.subscription = scheduler.schedule(dispatchWindowClose, windowTimeSpan, timeSpanState);\n    action.add(context.subscription);\n    action.schedule(state, windowCreationInterval);\n}\nfunction dispatchWindowClose(arg) {\n    var subscriber = arg.subscriber, window = arg.window, context = arg.context;\n    if (context && context.action && context.subscription) {\n        context.action.remove(context.subscription);\n    }\n    subscriber.closeWindow(window);\n}\n//# sourceMappingURL=windowTime.js.map\n\n/***/ },\n/* 960 */\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Subject_1 = __webpack_require__(66);\nvar Subscription_1 = __webpack_require__(147);\nvar tryCatch_1 = __webpack_require__(380);\nvar errorObject_1 = __webpack_require__(231);\nvar OuterSubscriber_1 = __webpack_require__(145);\nvar subscribeToResult_1 = __webpack_require__(146);\n/**\n * Branch out the source Observable values as a nested Observable starting from\n * an emission from `openings` and ending when the output of `closingSelector`\n * emits.\n *\n * <span class=\"informal\">It's like {@link bufferToggle}, but emits a nested\n * Observable instead of an array.</span>\n *\n * <img src=\"./img/windowToggle.png\" width=\"100%\">\n *\n * Returns an Observable that emits windows of items it collects from the source\n * Observable. The output Observable emits windows that contain those items\n * emitted by the source Observable between the time when the `openings`\n * Observable emits an item and when the Observable returned by\n * `closingSelector` emits an item.\n *\n * @example <caption>Every other second, emit the click events from the next 500ms</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var openings = Rx.Observable.interval(1000);\n * var result = clicks.windowToggle(openings, i =>\n *   i % 2 ? Rx.Observable.interval(500) : Rx.Observable.empty()\n * ).mergeAll();\n * result.subscribe(x => console.log(x));\n *\n * @see {@link window}\n * @see {@link windowCount}\n * @see {@link windowTime}\n * @see {@link windowWhen}\n * @see {@link bufferToggle}\n *\n * @param {Observable<O>} openings An observable of notifications to start new\n * windows.\n * @param {function(value: O): Observable} closingSelector A function that takes\n * the value emitted by the `openings` observable and returns an Observable,\n * which, when it emits (either `next` or `complete`), signals that the\n * associated window should complete.\n * @return {Observable<Observable<T>>} An observable of windows, which in turn\n * are Observables.\n * @method windowToggle\n * @owner Observable\n */\nfunction windowToggle(openings, closingSelector) {\n    return this.lift(new WindowToggleOperator(openings, closingSelector));\n}\nexports.windowToggle = windowToggle;\nvar WindowToggleOperator = (function () {\n    function WindowToggleOperator(openings, closingSelector) {\n        this.openings = openings;\n        this.closingSelector = closingSelector;\n    }\n    WindowToggleOperator.prototype.call = function (subscriber, source) {\n        return source._subscribe(new WindowToggleSubscriber(subscriber, this.openings, this.closingSelector));\n    };\n    return WindowToggleOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar WindowToggleSubscriber = (function (_super) {\n    __extends(WindowToggleSubscriber, _super);\n    function WindowToggleSubscriber(destination, openings, closingSelector) {\n        _super.call(this, destination);\n        this.openings = openings;\n        this.closingSelector = closingSelector;\n        this.contexts = [];\n        this.add(this.openSubscription = subscribeToResult_1.subscribeToResult(this, openings, openings));\n    }\n    WindowToggleSubscriber.prototype._next = function (value) {\n        var contexts = this.contexts;\n        if (contexts) {\n            var len = contexts.length;\n            for (var i = 0; i < len; i++) {\n                contexts[i].window.next(value);\n            }\n        }\n    };\n    WindowToggleSubscriber.prototype._error = function (err) {\n        var contexts = this.contexts;\n        this.contexts = null;\n        if (contexts) {\n            var len = contexts.length;\n            var index = -1;\n            while (++index < len) {\n                var context = contexts[index];\n                context.window.error(err);\n                context.subscription.unsubscribe();\n            }\n        }\n        _super.prototype._error.call(this, err);\n    };\n    WindowToggleSubscriber.prototype._complete = function () {\n        var contexts = this.contexts;\n        this.contexts = null;\n        if (contexts) {\n            var len = contexts.length;\n            var index = -1;\n            while (++index < len) {\n                var context = contexts[index];\n                context.window.complete();\n                context.subscription.unsubscribe();\n            }\n        }\n        _super.prototype._complete.call(this);\n    };\n    WindowToggleSubscriber.prototype._unsubscribe = function () {\n        var contexts = this.contexts;\n        this.contexts = null;\n        if (contexts) {\n            var len = contexts.length;\n            var index = -1;\n            while (++index < len) {\n                var context = contexts[index];\n                context.window.unsubscribe();\n                context.subscription.unsubscribe();\n            }\n        }\n    };\n    WindowToggleSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {\n        if (outerValue === this.openings) {\n            var closingSelector = this.closingSelector;\n            var closingNotifier = tryCatch_1.tryCatch(closingSelector)(innerValue);\n            if (closingNotifier === errorObject_1.errorObject) {\n                return this.error(errorObject_1.errorObject.e);\n            }\n            else {\n                var window_1 = new Subject_1.Subject();\n                var subscription = new Subscription_1.Subscription();\n                var context = { window: window_1, subscription: subscription };\n                this.contexts.push(context);\n                var innerSubscription = subscribeToResult_1.subscribeToResult(this, closingNotifier, context);\n                if (innerSubscription.closed) {\n                    this.closeWindow(this.contexts.length - 1);\n                }\n                else {\n                    innerSubscription.context = context;\n                    subscription.add(innerSubscription);\n                }\n                this.destination.next(window_1);\n            }\n        }\n        else {\n            this.closeWindow(this.contexts.indexOf(outerValue));\n        }\n    };\n    WindowToggleSubscriber.prototype.notifyError = function (err) {\n        this.error(err);\n    };\n    WindowToggleSubscriber.prototype.notifyComplete = function (inner) {\n        if (inner !== this.openSubscription) {\n            this.closeWindow(this.contexts.indexOf(inner.context));\n        }\n    };\n    WindowToggleSubscriber.prototype.closeWindow = function (index) {\n        if (index === -1) {\n            return;\n        }\n        var contexts = this.contexts;\n        var context = contexts[index];\n        var window = context.window, subscription = context.subscription;\n        contexts.splice(index, 1);\n        window.complete();\n        subscription.unsubscribe();\n    };\n    return WindowToggleSubscriber;\n}(OuterSubscriber_1.OuterSubscriber));\n//# sourceMappingURL=windowToggle.js.map\n\n/***/ },\n/* 961 */\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Subject_1 = __webpack_require__(66);\nvar tryCatch_1 = __webpack_require__(380);\nvar errorObject_1 = __webpack_require__(231);\nvar OuterSubscriber_1 = __webpack_require__(145);\nvar subscribeToResult_1 = __webpack_require__(146);\n/**\n * Branch out the source Observable values as a nested Observable using a\n * factory function of closing Observables to determine when to start a new\n * window.\n *\n * <span class=\"informal\">It's like {@link bufferWhen}, but emits a nested\n * Observable instead of an array.</span>\n *\n * <img src=\"./img/windowWhen.png\" width=\"100%\">\n *\n * Returns an Observable that emits windows of items it collects from the source\n * Observable. The output Observable emits connected, non-overlapping windows.\n * It emits the current window and opens a new one whenever the Observable\n * produced by the specified `closingSelector` function emits an item. The first\n * window is opened immediately when subscribing to the output Observable.\n *\n * @example <caption>Emit only the first two clicks events in every window of [1-5] random seconds</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks\n *   .windowWhen(() => Rx.Observable.interval(1000 + Math.random() * 4000))\n *   .map(win => win.take(2)) // each window has at most 2 emissions\n *   .mergeAll(); // flatten the Observable-of-Observables\n * result.subscribe(x => console.log(x));\n *\n * @see {@link window}\n * @see {@link windowCount}\n * @see {@link windowTime}\n * @see {@link windowToggle}\n * @see {@link bufferWhen}\n *\n * @param {function(): Observable} closingSelector A function that takes no\n * arguments and returns an Observable that signals (on either `next` or\n * `complete`) when to close the previous window and start a new one.\n * @return {Observable<Observable<T>>} An observable of windows, which in turn\n * are Observables.\n * @method windowWhen\n * @owner Observable\n */\nfunction windowWhen(closingSelector) {\n    return this.lift(new WindowOperator(closingSelector));\n}\nexports.windowWhen = windowWhen;\nvar WindowOperator = (function () {\n    function WindowOperator(closingSelector) {\n        this.closingSelector = closingSelector;\n    }\n    WindowOperator.prototype.call = function (subscriber, source) {\n        return source._subscribe(new WindowSubscriber(subscriber, this.closingSelector));\n    };\n    return WindowOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar WindowSubscriber = (function (_super) {\n    __extends(WindowSubscriber, _super);\n    function WindowSubscriber(destination, closingSelector) {\n        _super.call(this, destination);\n        this.destination = destination;\n        this.closingSelector = closingSelector;\n        this.openWindow();\n    }\n    WindowSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {\n        this.openWindow(innerSub);\n    };\n    WindowSubscriber.prototype.notifyError = function (error, innerSub) {\n        this._error(error);\n    };\n    WindowSubscriber.prototype.notifyComplete = function (innerSub) {\n        this.openWindow(innerSub);\n    };\n    WindowSubscriber.prototype._next = function (value) {\n        this.window.next(value);\n    };\n    WindowSubscriber.prototype._error = function (err) {\n        this.window.error(err);\n        this.destination.error(err);\n        this.unsubscribeClosingNotification();\n    };\n    WindowSubscriber.prototype._complete = function () {\n        this.window.complete();\n        this.destination.complete();\n        this.unsubscribeClosingNotification();\n    };\n    WindowSubscriber.prototype.unsubscribeClosingNotification = function () {\n        if (this.closingNotification) {\n            this.closingNotification.unsubscribe();\n        }\n    };\n    WindowSubscriber.prototype.openWindow = function (innerSub) {\n        if (innerSub === void 0) { innerSub = null; }\n        if (innerSub) {\n            this.remove(innerSub);\n            innerSub.unsubscribe();\n        }\n        var prevWindow = this.window;\n        if (prevWindow) {\n            prevWindow.complete();\n        }\n        var window = this.window = new Subject_1.Subject();\n        this.destination.next(window);\n        var closingNotifier = tryCatch_1.tryCatch(this.closingSelector)();\n        if (closingNotifier === errorObject_1.errorObject) {\n            var err = errorObject_1.errorObject.e;\n            this.destination.error(err);\n            this.window.error(err);\n        }\n        else {\n            this.add(this.closingNotification = subscribeToResult_1.subscribeToResult(this, closingNotifier));\n        }\n    };\n    return WindowSubscriber;\n}(OuterSubscriber_1.OuterSubscriber));\n//# sourceMappingURL=windowWhen.js.map\n\n/***/ },\n/* 962 */\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar OuterSubscriber_1 = __webpack_require__(145);\nvar subscribeToResult_1 = __webpack_require__(146);\n/**\n * Combines the source Observable with other Observables to create an Observable\n * whose values are calculated from the latest values of each, only when the\n * source emits.\n *\n * <span class=\"informal\">Whenever the source Observable emits a value, it\n * computes a formula using that value plus the latest values from other input\n * Observables, then emits the output of that formula.</span>\n *\n * <img src=\"./img/withLatestFrom.png\" width=\"100%\">\n *\n * `withLatestFrom` combines each value from the source Observable (the\n * instance) with the latest values from the other input Observables only when\n * the source emits a value, optionally using a `project` function to determine\n * the value to be emitted on the output Observable. All input Observables must\n * emit at least one value before the output Observable will emit a value.\n *\n * @example <caption>On every click event, emit an array with the latest timer event plus the click event</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var timer = Rx.Observable.interval(1000);\n * var result = clicks.withLatestFrom(timer);\n * result.subscribe(x => console.log(x));\n *\n * @see {@link combineLatest}\n *\n * @param {Observable} other An input Observable to combine with the source\n * Observable. More than one input Observables may be given as argument.\n * @param {Function} [project] Projection function for combining values\n * together. Receives all values in order of the Observables passed, where the\n * first parameter is a value from the source Observable. (e.g.\n * `a.withLatestFrom(b, c, (a1, b1, c1) => a1 + b1 + c1)`). If this is not\n * passed, arrays will be emitted on the output Observable.\n * @return {Observable} An Observable of projected values from the most recent\n * values from each input Observable, or an array of the most recent values from\n * each input Observable.\n * @method withLatestFrom\n * @owner Observable\n */\nfunction withLatestFrom() {\n    var args = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        args[_i - 0] = arguments[_i];\n    }\n    var project;\n    if (typeof args[args.length - 1] === 'function') {\n        project = args.pop();\n    }\n    var observables = args;\n    return this.lift(new WithLatestFromOperator(observables, project));\n}\nexports.withLatestFrom = withLatestFrom;\n/* tslint:enable:max-line-length */\nvar WithLatestFromOperator = (function () {\n    function WithLatestFromOperator(observables, project) {\n        this.observables = observables;\n        this.project = project;\n    }\n    WithLatestFromOperator.prototype.call = function (subscriber, source) {\n        return source._subscribe(new WithLatestFromSubscriber(subscriber, this.observables, this.project));\n    };\n    return WithLatestFromOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar WithLatestFromSubscriber = (function (_super) {\n    __extends(WithLatestFromSubscriber, _super);\n    function WithLatestFromSubscriber(destination, observables, project) {\n        _super.call(this, destination);\n        this.observables = observables;\n        this.project = project;\n        this.toRespond = [];\n        var len = observables.length;\n        this.values = new Array(len);\n        for (var i = 0; i < len; i++) {\n            this.toRespond.push(i);\n        }\n        for (var i = 0; i < len; i++) {\n            var observable = observables[i];\n            this.add(subscribeToResult_1.subscribeToResult(this, observable, observable, i));\n        }\n    }\n    WithLatestFromSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {\n        this.values[outerIndex] = innerValue;\n        var toRespond = this.toRespond;\n        if (toRespond.length > 0) {\n            var found = toRespond.indexOf(outerIndex);\n            if (found !== -1) {\n                toRespond.splice(found, 1);\n            }\n        }\n    };\n    WithLatestFromSubscriber.prototype.notifyComplete = function () {\n        // noop\n    };\n    WithLatestFromSubscriber.prototype._next = function (value) {\n        if (this.toRespond.length === 0) {\n            var args = [value].concat(this.values);\n            if (this.project) {\n                this._tryProject(args);\n            }\n            else {\n                this.destination.next(args);\n            }\n        }\n    };\n    WithLatestFromSubscriber.prototype._tryProject = function (args) {\n        var result;\n        try {\n            result = this.project.apply(this, args);\n        }\n        catch (err) {\n            this.destination.error(err);\n            return;\n        }\n        this.destination.next(result);\n    };\n    return WithLatestFromSubscriber;\n}(OuterSubscriber_1.OuterSubscriber));\n//# sourceMappingURL=withLatestFrom.js.map\n\n/***/ },\n/* 963 */\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\"use strict\";\nvar zip_1 = __webpack_require__(697);\n/**\n * @param project\n * @return {Observable<R>|WebSocketSubject<T>|Observable<T>}\n * @method zipAll\n * @owner Observable\n */\nfunction zipAll(project) {\n    return this.lift(new zip_1.ZipOperator(project));\n}\nexports.zipAll = zipAll;\n//# sourceMappingURL=zipAll.js.map\n\n/***/ },\n/* 964 */\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Subscription_1 = __webpack_require__(147);\n/**\n * A unit of work to be executed in a {@link Scheduler}. An action is typically\n * created from within a Scheduler and an RxJS user does not need to concern\n * themselves about creating and manipulating an Action.\n *\n * ```ts\n * class Action<T> extends Subscription {\n *   new (scheduler: Scheduler, work: (state?: T) => void);\n *   schedule(state?: T, delay: number = 0): Subscription;\n * }\n * ```\n *\n * @class Action<T>\n */\nvar Action = (function (_super) {\n    __extends(Action, _super);\n    function Action(scheduler, work) {\n        _super.call(this);\n    }\n    /**\n     * Schedules this action on its parent Scheduler for execution. May be passed\n     * some context object, `state`. May happen at some point in the future,\n     * according to the `delay` parameter, if specified.\n     * @param {T} [state] Some contextual data that the `work` function uses when\n     * called by the Scheduler.\n     * @param {number} [delay] Time to wait before executing the work, where the\n     * time unit is implicit and defined by the Scheduler.\n     * @return {void}\n     */\n    Action.prototype.schedule = function (state, delay) {\n        if (delay === void 0) { delay = 0; }\n        return this;\n    };\n    return Action;\n}(Subscription_1.Subscription));\nexports.Action = Action;\n//# sourceMappingURL=Action.js.map\n\n/***/ },\n/* 965 */\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar AsyncAction_1 = __webpack_require__(688);\nvar AnimationFrame_1 = __webpack_require__(975);\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar AnimationFrameAction = (function (_super) {\n    __extends(AnimationFrameAction, _super);\n    function AnimationFrameAction(scheduler, work) {\n        _super.call(this, scheduler, work);\n        this.scheduler = scheduler;\n        this.work = work;\n    }\n    AnimationFrameAction.prototype.requestAsyncId = function (scheduler, id, delay) {\n        if (delay === void 0) { delay = 0; }\n        // If delay is greater than 0, request as an async action.\n        if (delay !== null && delay > 0) {\n            return _super.prototype.requestAsyncId.call(this, scheduler, id, delay);\n        }\n        // Push the action to the end of the scheduler queue.\n        scheduler.actions.push(this);\n        // If an animation frame has already been requested, don't request another\n        // one. If an animation frame hasn't been requested yet, request one. Return\n        // the current animation frame request id.\n        return scheduler.scheduled || (scheduler.scheduled = AnimationFrame_1.AnimationFrame.requestAnimationFrame(scheduler.flush.bind(scheduler, null)));\n    };\n    AnimationFrameAction.prototype.recycleAsyncId = function (scheduler, id, delay) {\n        if (delay === void 0) { delay = 0; }\n        // If delay exists and is greater than 0, recycle as an async action.\n        if (delay !== null && delay > 0) {\n            return _super.prototype.recycleAsyncId.call(this, scheduler, id, delay);\n        }\n        // If the scheduler queue is empty, cancel the requested animation frame and\n        // set the scheduled flag to undefined so the next AnimationFrameAction will\n        // request its own.\n        if (scheduler.actions.length === 0) {\n            AnimationFrame_1.AnimationFrame.cancelAnimationFrame(id);\n            scheduler.scheduled = undefined;\n        }\n        // Return undefined so the action knows to request a new async id if it's rescheduled.\n        return undefined;\n    };\n    return AnimationFrameAction;\n}(AsyncAction_1.AsyncAction));\nexports.AnimationFrameAction = AnimationFrameAction;\n//# sourceMappingURL=AnimationFrameAction.js.map\n\n/***/ },\n/* 966 */\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar AsyncScheduler_1 = __webpack_require__(689);\nvar AnimationFrameScheduler = (function (_super) {\n    __extends(AnimationFrameScheduler, _super);\n    function AnimationFrameScheduler() {\n        _super.apply(this, arguments);\n    }\n    AnimationFrameScheduler.prototype.flush = function () {\n        this.active = true;\n        this.scheduled = undefined;\n        var actions = this.actions;\n        var error;\n        var index = -1;\n        var count = actions.length;\n        var action = actions.shift();\n        do {\n            if (error = action.execute(action.state, action.delay)) {\n                break;\n            }\n        } while (++index < count && (action = actions.shift()));\n        this.active = false;\n        if (error) {\n            while (++index < count && (action = actions.shift())) {\n                action.unsubscribe();\n            }\n            throw error;\n        }\n    };\n    return AnimationFrameScheduler;\n}(AsyncScheduler_1.AsyncScheduler));\nexports.AnimationFrameScheduler = AnimationFrameScheduler;\n//# sourceMappingURL=AnimationFrameScheduler.js.map\n\n/***/ },\n/* 967 */\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Immediate_1 = __webpack_require__(977);\nvar AsyncAction_1 = __webpack_require__(688);\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar AsapAction = (function (_super) {\n    __extends(AsapAction, _super);\n    function AsapAction(scheduler, work) {\n        _super.call(this, scheduler, work);\n        this.scheduler = scheduler;\n        this.work = work;\n    }\n    AsapAction.prototype.requestAsyncId = function (scheduler, id, delay) {\n        if (delay === void 0) { delay = 0; }\n        // If delay is greater than 0, request as an async action.\n        if (delay !== null && delay > 0) {\n            return _super.prototype.requestAsyncId.call(this, scheduler, id, delay);\n        }\n        // Push the action to the end of the scheduler queue.\n        scheduler.actions.push(this);\n        // If a microtask has already been scheduled, don't schedule another\n        // one. If a microtask hasn't been scheduled yet, schedule one now. Return\n        // the current scheduled microtask id.\n        return scheduler.scheduled || (scheduler.scheduled = Immediate_1.Immediate.setImmediate(scheduler.flush.bind(scheduler, null)));\n    };\n    AsapAction.prototype.recycleAsyncId = function (scheduler, id, delay) {\n        if (delay === void 0) { delay = 0; }\n        // If delay exists and is greater than 0, recycle as an async action.\n        if (delay !== null && delay > 0) {\n            return _super.prototype.recycleAsyncId.call(this, scheduler, id, delay);\n        }\n        // If the scheduler queue is empty, cancel the requested microtask and\n        // set the scheduled flag to undefined so the next AsapAction will schedule\n        // its own.\n        if (scheduler.actions.length === 0) {\n            Immediate_1.Immediate.clearImmediate(id);\n            scheduler.scheduled = undefined;\n        }\n        // Return undefined so the action knows to request a new async id if it's rescheduled.\n        return undefined;\n    };\n    return AsapAction;\n}(AsyncAction_1.AsyncAction));\nexports.AsapAction = AsapAction;\n//# sourceMappingURL=AsapAction.js.map\n\n/***/ },\n/* 968 */\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar AsyncScheduler_1 = __webpack_require__(689);\nvar AsapScheduler = (function (_super) {\n    __extends(AsapScheduler, _super);\n    function AsapScheduler() {\n        _super.apply(this, arguments);\n    }\n    AsapScheduler.prototype.flush = function () {\n        this.active = true;\n        this.scheduled = undefined;\n        var actions = this.actions;\n        var error;\n        var index = -1;\n        var count = actions.length;\n        var action = actions.shift();\n        do {\n            if (error = action.execute(action.state, action.delay)) {\n                break;\n            }\n        } while (++index < count && (action = actions.shift()));\n        this.active = false;\n        if (error) {\n            while (++index < count && (action = actions.shift())) {\n                action.unsubscribe();\n            }\n            throw error;\n        }\n    };\n    return AsapScheduler;\n}(AsyncScheduler_1.AsyncScheduler));\nexports.AsapScheduler = AsapScheduler;\n//# sourceMappingURL=AsapScheduler.js.map\n\n/***/ },\n/* 969 */\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar AsyncAction_1 = __webpack_require__(688);\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar QueueAction = (function (_super) {\n    __extends(QueueAction, _super);\n    function QueueAction(scheduler, work) {\n        _super.call(this, scheduler, work);\n        this.scheduler = scheduler;\n        this.work = work;\n    }\n    QueueAction.prototype.schedule = function (state, delay) {\n        if (delay === void 0) { delay = 0; }\n        if (delay > 0) {\n            return _super.prototype.schedule.call(this, state, delay);\n        }\n        this.delay = delay;\n        this.state = state;\n        this.scheduler.flush(this);\n        return this;\n    };\n    QueueAction.prototype.execute = function (state, delay) {\n        return (delay > 0 || this.closed) ?\n            _super.prototype.execute.call(this, state, delay) :\n            this._execute(state, delay);\n    };\n    QueueAction.prototype.requestAsyncId = function (scheduler, id, delay) {\n        if (delay === void 0) { delay = 0; }\n        // If delay is greater than 0, enqueue as an async action.\n        if (delay !== null && delay > 0) {\n            return _super.prototype.requestAsyncId.call(this, scheduler, id, delay);\n        }\n        // Otherwise flush the scheduler starting with this action.\n        return scheduler.flush(this);\n    };\n    return QueueAction;\n}(AsyncAction_1.AsyncAction));\nexports.QueueAction = QueueAction;\n//# sourceMappingURL=QueueAction.js.map\n\n/***/ },\n/* 970 */\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar AsyncScheduler_1 = __webpack_require__(689);\nvar QueueScheduler = (function (_super) {\n    __extends(QueueScheduler, _super);\n    function QueueScheduler() {\n        _super.apply(this, arguments);\n    }\n    return QueueScheduler;\n}(AsyncScheduler_1.AsyncScheduler));\nexports.QueueScheduler = QueueScheduler;\n//# sourceMappingURL=QueueScheduler.js.map\n\n/***/ },\n/* 971 */\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\"use strict\";\nvar AnimationFrameAction_1 = __webpack_require__(965);\nvar AnimationFrameScheduler_1 = __webpack_require__(966);\nexports.animationFrame = new AnimationFrameScheduler_1.AnimationFrameScheduler(AnimationFrameAction_1.AnimationFrameAction);\n//# sourceMappingURL=animationFrame.js.map\n\n/***/ },\n/* 972 */\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Observable_1 = __webpack_require__(14);\nvar Subscription_1 = __webpack_require__(147);\nvar SubscriptionLoggable_1 = __webpack_require__(715);\nvar applyMixins_1 = __webpack_require__(716);\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar ColdObservable = (function (_super) {\n    __extends(ColdObservable, _super);\n    function ColdObservable(messages, scheduler) {\n        _super.call(this, function (subscriber) {\n            var observable = this;\n            var index = observable.logSubscribedFrame();\n            subscriber.add(new Subscription_1.Subscription(function () {\n                observable.logUnsubscribedFrame(index);\n            }));\n            observable.scheduleMessages(subscriber);\n            return subscriber;\n        });\n        this.messages = messages;\n        this.subscriptions = [];\n        this.scheduler = scheduler;\n    }\n    ColdObservable.prototype.scheduleMessages = function (subscriber) {\n        var messagesLength = this.messages.length;\n        for (var i = 0; i < messagesLength; i++) {\n            var message = this.messages[i];\n            subscriber.add(this.scheduler.schedule(function (_a) {\n                var message = _a.message, subscriber = _a.subscriber;\n                message.notification.observe(subscriber);\n            }, message.frame, { message: message, subscriber: subscriber }));\n        }\n    };\n    return ColdObservable;\n}(Observable_1.Observable));\nexports.ColdObservable = ColdObservable;\napplyMixins_1.applyMixins(ColdObservable, [SubscriptionLoggable_1.SubscriptionLoggable]);\n//# sourceMappingURL=ColdObservable.js.map\n\n/***/ },\n/* 973 */\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Subject_1 = __webpack_require__(66);\nvar Subscription_1 = __webpack_require__(147);\nvar SubscriptionLoggable_1 = __webpack_require__(715);\nvar applyMixins_1 = __webpack_require__(716);\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar HotObservable = (function (_super) {\n    __extends(HotObservable, _super);\n    function HotObservable(messages, scheduler) {\n        _super.call(this);\n        this.messages = messages;\n        this.subscriptions = [];\n        this.scheduler = scheduler;\n    }\n    HotObservable.prototype._subscribe = function (subscriber) {\n        var subject = this;\n        var index = subject.logSubscribedFrame();\n        subscriber.add(new Subscription_1.Subscription(function () {\n            subject.logUnsubscribedFrame(index);\n        }));\n        return _super.prototype._subscribe.call(this, subscriber);\n    };\n    HotObservable.prototype.setup = function () {\n        var subject = this;\n        var messagesLength = subject.messages.length;\n        /* tslint:disable:no-var-keyword */\n        for (var i = 0; i < messagesLength; i++) {\n            (function () {\n                var message = subject.messages[i];\n                /* tslint:enable */\n                subject.scheduler.schedule(function () { message.notification.observe(subject); }, message.frame);\n            })();\n        }\n    };\n    return HotObservable;\n}(Subject_1.Subject));\nexports.HotObservable = HotObservable;\napplyMixins_1.applyMixins(HotObservable, [SubscriptionLoggable_1.SubscriptionLoggable]);\n//# sourceMappingURL=HotObservable.js.map\n\n/***/ },\n/* 974 */\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Observable_1 = __webpack_require__(14);\nvar Notification_1 = __webpack_require__(382);\nvar ColdObservable_1 = __webpack_require__(972);\nvar HotObservable_1 = __webpack_require__(973);\nvar SubscriptionLog_1 = __webpack_require__(714);\nvar VirtualTimeScheduler_1 = __webpack_require__(711);\nvar defaultMaxFrame = 750;\nvar TestScheduler = (function (_super) {\n    __extends(TestScheduler, _super);\n    function TestScheduler(assertDeepEqual) {\n        _super.call(this, VirtualTimeScheduler_1.VirtualAction, defaultMaxFrame);\n        this.assertDeepEqual = assertDeepEqual;\n        this.hotObservables = [];\n        this.coldObservables = [];\n        this.flushTests = [];\n    }\n    TestScheduler.prototype.createTime = function (marbles) {\n        var indexOf = marbles.indexOf('|');\n        if (indexOf === -1) {\n            throw new Error('marble diagram for time should have a completion marker \"|\"');\n        }\n        return indexOf * TestScheduler.frameTimeFactor;\n    };\n    TestScheduler.prototype.createColdObservable = function (marbles, values, error) {\n        if (marbles.indexOf('^') !== -1) {\n            throw new Error('cold observable cannot have subscription offset \"^\"');\n        }\n        if (marbles.indexOf('!') !== -1) {\n            throw new Error('cold observable cannot have unsubscription marker \"!\"');\n        }\n        var messages = TestScheduler.parseMarbles(marbles, values, error);\n        var cold = new ColdObservable_1.ColdObservable(messages, this);\n        this.coldObservables.push(cold);\n        return cold;\n    };\n    TestScheduler.prototype.createHotObservable = function (marbles, values, error) {\n        if (marbles.indexOf('!') !== -1) {\n            throw new Error('hot observable cannot have unsubscription marker \"!\"');\n        }\n        var messages = TestScheduler.parseMarbles(marbles, values, error);\n        var subject = new HotObservable_1.HotObservable(messages, this);\n        this.hotObservables.push(subject);\n        return subject;\n    };\n    TestScheduler.prototype.materializeInnerObservable = function (observable, outerFrame) {\n        var _this = this;\n        var messages = [];\n        observable.subscribe(function (value) {\n            messages.push({ frame: _this.frame - outerFrame, notification: Notification_1.Notification.createNext(value) });\n        }, function (err) {\n            messages.push({ frame: _this.frame - outerFrame, notification: Notification_1.Notification.createError(err) });\n        }, function () {\n            messages.push({ frame: _this.frame - outerFrame, notification: Notification_1.Notification.createComplete() });\n        });\n        return messages;\n    };\n    TestScheduler.prototype.expectObservable = function (observable, unsubscriptionMarbles) {\n        var _this = this;\n        if (unsubscriptionMarbles === void 0) { unsubscriptionMarbles = null; }\n        var actual = [];\n        var flushTest = { actual: actual, ready: false };\n        var unsubscriptionFrame = TestScheduler\n            .parseMarblesAsSubscriptions(unsubscriptionMarbles).unsubscribedFrame;\n        var subscription;\n        this.schedule(function () {\n            subscription = observable.subscribe(function (x) {\n                var value = x;\n                // Support Observable-of-Observables\n                if (x instanceof Observable_1.Observable) {\n                    value = _this.materializeInnerObservable(value, _this.frame);\n                }\n                actual.push({ frame: _this.frame, notification: Notification_1.Notification.createNext(value) });\n            }, function (err) {\n                actual.push({ frame: _this.frame, notification: Notification_1.Notification.createError(err) });\n            }, function () {\n                actual.push({ frame: _this.frame, notification: Notification_1.Notification.createComplete() });\n            });\n        }, 0);\n        if (unsubscriptionFrame !== Number.POSITIVE_INFINITY) {\n            this.schedule(function () { return subscription.unsubscribe(); }, unsubscriptionFrame);\n        }\n        this.flushTests.push(flushTest);\n        return {\n            toBe: function (marbles, values, errorValue) {\n                flushTest.ready = true;\n                flushTest.expected = TestScheduler.parseMarbles(marbles, values, errorValue, true);\n            }\n        };\n    };\n    TestScheduler.prototype.expectSubscriptions = function (actualSubscriptionLogs) {\n        var flushTest = { actual: actualSubscriptionLogs, ready: false };\n        this.flushTests.push(flushTest);\n        return {\n            toBe: function (marbles) {\n                var marblesArray = (typeof marbles === 'string') ? [marbles] : marbles;\n                flushTest.ready = true;\n                flushTest.expected = marblesArray.map(function (marbles) {\n                    return TestScheduler.parseMarblesAsSubscriptions(marbles);\n                });\n            }\n        };\n    };\n    TestScheduler.prototype.flush = function () {\n        var hotObservables = this.hotObservables;\n        while (hotObservables.length > 0) {\n            hotObservables.shift().setup();\n        }\n        _super.prototype.flush.call(this);\n        var readyFlushTests = this.flushTests.filter(function (test) { return test.ready; });\n        while (readyFlushTests.length > 0) {\n            var test = readyFlushTests.shift();\n            this.assertDeepEqual(test.actual, test.expected);\n        }\n    };\n    TestScheduler.parseMarblesAsSubscriptions = function (marbles) {\n        if (typeof marbles !== 'string') {\n            return new SubscriptionLog_1.SubscriptionLog(Number.POSITIVE_INFINITY);\n        }\n        var len = marbles.length;\n        var groupStart = -1;\n        var subscriptionFrame = Number.POSITIVE_INFINITY;\n        var unsubscriptionFrame = Number.POSITIVE_INFINITY;\n        for (var i = 0; i < len; i++) {\n            var frame = i * this.frameTimeFactor;\n            var c = marbles[i];\n            switch (c) {\n                case '-':\n                case ' ':\n                    break;\n                case '(':\n                    groupStart = frame;\n                    break;\n                case ')':\n                    groupStart = -1;\n                    break;\n                case '^':\n                    if (subscriptionFrame !== Number.POSITIVE_INFINITY) {\n                        throw new Error('found a second subscription point \\'^\\' in a ' +\n                            'subscription marble diagram. There can only be one.');\n                    }\n                    subscriptionFrame = groupStart > -1 ? groupStart : frame;\n                    break;\n                case '!':\n                    if (unsubscriptionFrame !== Number.POSITIVE_INFINITY) {\n                        throw new Error('found a second subscription point \\'^\\' in a ' +\n                            'subscription marble diagram. There can only be one.');\n                    }\n                    unsubscriptionFrame = groupStart > -1 ? groupStart : frame;\n                    break;\n                default:\n                    throw new Error('there can only be \\'^\\' and \\'!\\' markers in a ' +\n                        'subscription marble diagram. Found instead \\'' + c + '\\'.');\n            }\n        }\n        if (unsubscriptionFrame < 0) {\n            return new SubscriptionLog_1.SubscriptionLog(subscriptionFrame);\n        }\n        else {\n            return new SubscriptionLog_1.SubscriptionLog(subscriptionFrame, unsubscriptionFrame);\n        }\n    };\n    TestScheduler.parseMarbles = function (marbles, values, errorValue, materializeInnerObservables) {\n        if (materializeInnerObservables === void 0) { materializeInnerObservables = false; }\n        if (marbles.indexOf('!') !== -1) {\n            throw new Error('conventional marble diagrams cannot have the ' +\n                'unsubscription marker \"!\"');\n        }\n        var len = marbles.length;\n        var testMessages = [];\n        var subIndex = marbles.indexOf('^');\n        var frameOffset = subIndex === -1 ? 0 : (subIndex * -this.frameTimeFactor);\n        var getValue = typeof values !== 'object' ?\n            function (x) { return x; } :\n            function (x) {\n                // Support Observable-of-Observables\n                if (materializeInnerObservables && values[x] instanceof ColdObservable_1.ColdObservable) {\n                    return values[x].messages;\n                }\n                return values[x];\n            };\n        var groupStart = -1;\n        for (var i = 0; i < len; i++) {\n            var frame = i * this.frameTimeFactor + frameOffset;\n            var notification = void 0;\n            var c = marbles[i];\n            switch (c) {\n                case '-':\n                case ' ':\n                    break;\n                case '(':\n                    groupStart = frame;\n                    break;\n                case ')':\n                    groupStart = -1;\n                    break;\n                case '|':\n                    notification = Notification_1.Notification.createComplete();\n                    break;\n                case '^':\n                    break;\n                case '#':\n                    notification = Notification_1.Notification.createError(errorValue || 'error');\n                    break;\n                default:\n                    notification = Notification_1.Notification.createNext(getValue(c));\n                    break;\n            }\n            if (notification) {\n                testMessages.push({ frame: groupStart > -1 ? groupStart : frame, notification: notification });\n            }\n        }\n        return testMessages;\n    };\n    return TestScheduler;\n}(VirtualTimeScheduler_1.VirtualTimeScheduler));\nexports.TestScheduler = TestScheduler;\n//# sourceMappingURL=TestScheduler.js.map\n\n/***/ },\n/* 975 */\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\"use strict\";\nvar root_1 = __webpack_require__(50);\nvar RequestAnimationFrameDefinition = (function () {\n    function RequestAnimationFrameDefinition(root) {\n        if (root.requestAnimationFrame) {\n            this.cancelAnimationFrame = root.cancelAnimationFrame.bind(root);\n            this.requestAnimationFrame = root.requestAnimationFrame.bind(root);\n        }\n        else if (root.mozRequestAnimationFrame) {\n            this.cancelAnimationFrame = root.mozCancelAnimationFrame.bind(root);\n            this.requestAnimationFrame = root.mozRequestAnimationFrame.bind(root);\n        }\n        else if (root.webkitRequestAnimationFrame) {\n            this.cancelAnimationFrame = root.webkitCancelAnimationFrame.bind(root);\n            this.requestAnimationFrame = root.webkitRequestAnimationFrame.bind(root);\n        }\n        else if (root.msRequestAnimationFrame) {\n            this.cancelAnimationFrame = root.msCancelAnimationFrame.bind(root);\n            this.requestAnimationFrame = root.msRequestAnimationFrame.bind(root);\n        }\n        else if (root.oRequestAnimationFrame) {\n            this.cancelAnimationFrame = root.oCancelAnimationFrame.bind(root);\n            this.requestAnimationFrame = root.oRequestAnimationFrame.bind(root);\n        }\n        else {\n            this.cancelAnimationFrame = root.clearTimeout.bind(root);\n            this.requestAnimationFrame = function (cb) { return root.setTimeout(cb, 1000 / 60); };\n        }\n    }\n    return RequestAnimationFrameDefinition;\n}());\nexports.RequestAnimationFrameDefinition = RequestAnimationFrameDefinition;\nexports.AnimationFrame = new RequestAnimationFrameDefinition(root_1.root);\n//# sourceMappingURL=AnimationFrame.js.map\n\n/***/ },\n/* 976 */\n/***/ function(module, exports) {\n\n\"use strict\";\n\"use strict\";\nvar FastMap = (function () {\n    function FastMap() {\n        this.values = {};\n    }\n    FastMap.prototype.delete = function (key) {\n        this.values[key] = null;\n        return true;\n    };\n    FastMap.prototype.set = function (key, value) {\n        this.values[key] = value;\n        return this;\n    };\n    FastMap.prototype.get = function (key) {\n        return this.values[key];\n    };\n    FastMap.prototype.forEach = function (cb, thisArg) {\n        var values = this.values;\n        for (var key in values) {\n            if (values.hasOwnProperty(key) && values[key] !== null) {\n                cb.call(thisArg, values[key], key);\n            }\n        }\n    };\n    FastMap.prototype.clear = function () {\n        this.values = {};\n    };\n    return FastMap;\n}());\nexports.FastMap = FastMap;\n//# sourceMappingURL=FastMap.js.map\n\n/***/ },\n/* 977 */\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/**\nSome credit for this helper goes to http://github.com/YuzuJS/setImmediate\n*/\n\"use strict\";\nvar root_1 = __webpack_require__(50);\nvar ImmediateDefinition = (function () {\n    function ImmediateDefinition(root) {\n        this.root = root;\n        if (root.setImmediate && typeof root.setImmediate === 'function') {\n            this.setImmediate = root.setImmediate.bind(root);\n            this.clearImmediate = root.clearImmediate.bind(root);\n        }\n        else {\n            this.nextHandle = 1;\n            this.tasksByHandle = {};\n            this.currentlyRunningATask = false;\n            // Don't get fooled by e.g. browserify environments.\n            if (this.canUseProcessNextTick()) {\n                // For Node.js before 0.9\n                this.setImmediate = this.createProcessNextTickSetImmediate();\n            }\n            else if (this.canUsePostMessage()) {\n                // For non-IE10 modern browsers\n                this.setImmediate = this.createPostMessageSetImmediate();\n            }\n            else if (this.canUseMessageChannel()) {\n                // For web workers, where supported\n                this.setImmediate = this.createMessageChannelSetImmediate();\n            }\n            else if (this.canUseReadyStateChange()) {\n                // For IE 6–8\n                this.setImmediate = this.createReadyStateChangeSetImmediate();\n            }\n            else {\n                // For older browsers\n                this.setImmediate = this.createSetTimeoutSetImmediate();\n            }\n            var ci = function clearImmediate(handle) {\n                delete clearImmediate.instance.tasksByHandle[handle];\n            };\n            ci.instance = this;\n            this.clearImmediate = ci;\n        }\n    }\n    ImmediateDefinition.prototype.identify = function (o) {\n        return this.root.Object.prototype.toString.call(o);\n    };\n    ImmediateDefinition.prototype.canUseProcessNextTick = function () {\n        return this.identify(this.root.process) === '[object process]';\n    };\n    ImmediateDefinition.prototype.canUseMessageChannel = function () {\n        return Boolean(this.root.MessageChannel);\n    };\n    ImmediateDefinition.prototype.canUseReadyStateChange = function () {\n        var document = this.root.document;\n        return Boolean(document && 'onreadystatechange' in document.createElement('script'));\n    };\n    ImmediateDefinition.prototype.canUsePostMessage = function () {\n        var root = this.root;\n        // The test against `importScripts` prevents this implementation from being installed inside a web worker,\n        // where `root.postMessage` means something completely different and can't be used for this purpose.\n        if (root.postMessage && !root.importScripts) {\n            var postMessageIsAsynchronous_1 = true;\n            var oldOnMessage = root.onmessage;\n            root.onmessage = function () {\n                postMessageIsAsynchronous_1 = false;\n            };\n            root.postMessage('', '*');\n            root.onmessage = oldOnMessage;\n            return postMessageIsAsynchronous_1;\n        }\n        return false;\n    };\n    // This function accepts the same arguments as setImmediate, but\n    // returns a function that requires no arguments.\n    ImmediateDefinition.prototype.partiallyApplied = function (handler) {\n        var args = [];\n        for (var _i = 1; _i < arguments.length; _i++) {\n            args[_i - 1] = arguments[_i];\n        }\n        var fn = function result() {\n            var _a = result, handler = _a.handler, args = _a.args;\n            if (typeof handler === 'function') {\n                handler.apply(undefined, args);\n            }\n            else {\n                (new Function('' + handler))();\n            }\n        };\n        fn.handler = handler;\n        fn.args = args;\n        return fn;\n    };\n    ImmediateDefinition.prototype.addFromSetImmediateArguments = function (args) {\n        this.tasksByHandle[this.nextHandle] = this.partiallyApplied.apply(undefined, args);\n        return this.nextHandle++;\n    };\n    ImmediateDefinition.prototype.createProcessNextTickSetImmediate = function () {\n        var fn = function setImmediate() {\n            var instance = setImmediate.instance;\n            var handle = instance.addFromSetImmediateArguments(arguments);\n            instance.root.process.nextTick(instance.partiallyApplied(instance.runIfPresent, handle));\n            return handle;\n        };\n        fn.instance = this;\n        return fn;\n    };\n    ImmediateDefinition.prototype.createPostMessageSetImmediate = function () {\n        // Installs an event handler on `global` for the `message` event: see\n        // * https://developer.mozilla.org/en/DOM/window.postMessage\n        // * http://www.whatwg.org/specs/web-apps/current-work/multipage/comms.html#crossDocumentMessages\n        var root = this.root;\n        var messagePrefix = 'setImmediate$' + root.Math.random() + '$';\n        var onGlobalMessage = function globalMessageHandler(event) {\n            var instance = globalMessageHandler.instance;\n            if (event.source === root &&\n                typeof event.data === 'string' &&\n                event.data.indexOf(messagePrefix) === 0) {\n                instance.runIfPresent(+event.data.slice(messagePrefix.length));\n            }\n        };\n        onGlobalMessage.instance = this;\n        root.addEventListener('message', onGlobalMessage, false);\n        var fn = function setImmediate() {\n            var _a = setImmediate, messagePrefix = _a.messagePrefix, instance = _a.instance;\n            var handle = instance.addFromSetImmediateArguments(arguments);\n            instance.root.postMessage(messagePrefix + handle, '*');\n            return handle;\n        };\n        fn.instance = this;\n        fn.messagePrefix = messagePrefix;\n        return fn;\n    };\n    ImmediateDefinition.prototype.runIfPresent = function (handle) {\n        // From the spec: 'Wait until any invocations of this algorithm started before this one have completed.'\n        // So if we're currently running a task, we'll need to delay this invocation.\n        if (this.currentlyRunningATask) {\n            // Delay by doing a setTimeout. setImmediate was tried instead, but in Firefox 7 it generated a\n            // 'too much recursion' error.\n            this.root.setTimeout(this.partiallyApplied(this.runIfPresent, handle), 0);\n        }\n        else {\n            var task = this.tasksByHandle[handle];\n            if (task) {\n                this.currentlyRunningATask = true;\n                try {\n                    task();\n                }\n                finally {\n                    this.clearImmediate(handle);\n                    this.currentlyRunningATask = false;\n                }\n            }\n        }\n    };\n    ImmediateDefinition.prototype.createMessageChannelSetImmediate = function () {\n        var _this = this;\n        var channel = new this.root.MessageChannel();\n        channel.port1.onmessage = function (event) {\n            var handle = event.data;\n            _this.runIfPresent(handle);\n        };\n        var fn = function setImmediate() {\n            var _a = setImmediate, channel = _a.channel, instance = _a.instance;\n            var handle = instance.addFromSetImmediateArguments(arguments);\n            channel.port2.postMessage(handle);\n            return handle;\n        };\n        fn.channel = channel;\n        fn.instance = this;\n        return fn;\n    };\n    ImmediateDefinition.prototype.createReadyStateChangeSetImmediate = function () {\n        var fn = function setImmediate() {\n            var instance = setImmediate.instance;\n            var root = instance.root;\n            var doc = root.document;\n            var html = doc.documentElement;\n            var handle = instance.addFromSetImmediateArguments(arguments);\n            // Create a <script> element; its readystatechange event will be fired asynchronously once it is inserted\n            // into the document. Do so, thus queuing up the task. Remember to clean up once it's been called.\n            var script = doc.createElement('script');\n            script.onreadystatechange = function () {\n                instance.runIfPresent(handle);\n                script.onreadystatechange = null;\n                html.removeChild(script);\n                script = null;\n            };\n            html.appendChild(script);\n            return handle;\n        };\n        fn.instance = this;\n        return fn;\n    };\n    ImmediateDefinition.prototype.createSetTimeoutSetImmediate = function () {\n        var fn = function setImmediate() {\n            var instance = setImmediate.instance;\n            var handle = instance.addFromSetImmediateArguments(arguments);\n            instance.root.setTimeout(instance.partiallyApplied(instance.runIfPresent, handle), 0);\n            return handle;\n        };\n        fn.instance = this;\n        return fn;\n    };\n    return ImmediateDefinition;\n}());\nexports.ImmediateDefinition = ImmediateDefinition;\nexports.Immediate = new ImmediateDefinition(root_1.root);\n//# sourceMappingURL=Immediate.js.map\n\n/***/ },\n/* 978 */\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\"use strict\";\nvar root_1 = __webpack_require__(50);\nvar MapPolyfill_1 = __webpack_require__(979);\nexports.Map = root_1.root.Map || (function () { return MapPolyfill_1.MapPolyfill; })();\n//# sourceMappingURL=Map.js.map\n\n/***/ },\n/* 979 */\n/***/ function(module, exports) {\n\n\"use strict\";\n\"use strict\";\nvar MapPolyfill = (function () {\n    function MapPolyfill() {\n        this.size = 0;\n        this._values = [];\n        this._keys = [];\n    }\n    MapPolyfill.prototype.get = function (key) {\n        var i = this._keys.indexOf(key);\n        return i === -1 ? undefined : this._values[i];\n    };\n    MapPolyfill.prototype.set = function (key, value) {\n        var i = this._keys.indexOf(key);\n        if (i === -1) {\n            this._keys.push(key);\n            this._values.push(value);\n            this.size++;\n        }\n        else {\n            this._values[i] = value;\n        }\n        return this;\n    };\n    MapPolyfill.prototype.delete = function (key) {\n        var i = this._keys.indexOf(key);\n        if (i === -1) {\n            return false;\n        }\n        this._values.splice(i, 1);\n        this._keys.splice(i, 1);\n        this.size--;\n        return true;\n    };\n    MapPolyfill.prototype.clear = function () {\n        this._keys.length = 0;\n        this._values.length = 0;\n        this.size = 0;\n    };\n    MapPolyfill.prototype.forEach = function (cb, thisArg) {\n        for (var i = 0; i < this.size; i++) {\n            cb.call(thisArg, this._values[i], this._keys[i]);\n        }\n    };\n    return MapPolyfill;\n}());\nexports.MapPolyfill = MapPolyfill;\n//# sourceMappingURL=MapPolyfill.js.map\n\n/***/ },\n/* 980 */\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\"use strict\";\nvar root_1 = __webpack_require__(50);\nvar Object = root_1.root.Object;\nif (typeof Object.assign != 'function') {\n    (function () {\n        Object.assign = function assignPolyfill(target) {\n            var sources = [];\n            for (var _i = 1; _i < arguments.length; _i++) {\n                sources[_i - 1] = arguments[_i];\n            }\n            if (target === undefined || target === null) {\n                throw new TypeError('cannot convert undefined or null to object');\n            }\n            var output = Object(target);\n            var len = sources.length;\n            for (var index = 0; index < len; index++) {\n                var source = sources[index];\n                if (source !== undefined && source !== null) {\n                    for (var key in source) {\n                        if (source.hasOwnProperty(key)) {\n                            output[key] = source[key];\n                        }\n                    }\n                }\n            }\n            return output;\n        };\n    })();\n}\nexports.assign = Object.assign;\n//# sourceMappingURL=assign.js.map\n\n/***/ },\n/* 981 */\n/***/ function(module, exports) {\n\n\"use strict\";\n\"use strict\";\nfunction not(pred, thisArg) {\n    function notPred() {\n        return !(notPred.pred.apply(notPred.thisArg, arguments));\n    }\n    notPred.pred = pred;\n    notPred.thisArg = thisArg;\n    return notPred;\n}\nexports.not = not;\n//# sourceMappingURL=not.js.map\n\n/***/ },\n/* 982 */,\n/* 983 */,\n/* 984 */,\n/* 985 */,\n/* 986 */\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__angular_router__ = __webpack_require__(387);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__building_service__ = __webpack_require__(699);\n/* harmony export (binding) */ __webpack_require__.d(exports, \"a\", function() { return BuildingDetailComponent; });\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\n\n\n\nvar BuildingDetailComponent = (function () {\n    function BuildingDetailComponent(route, buildingService) {\n        this.route = route;\n        this.buildingService = buildingService;\n        this.buildingID = '0';\n        this.entityID = 'all';\n        this.interval = '0';\n        this.paramText = 'consumption?';\n        this.startDate = new Date();\n        this.endDate = new Date();\n    }\n    BuildingDetailComponent.prototype.ngOnInit = function () {\n        // let id = parseInt(this.route.snapshot.params['id'], 10);\n        // this.buildingService.getBuilding(id).map(building => this.building = building);\n    };\n    BuildingDetailComponent = __decorate([\n        __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Component\"])({\n            template: \"\\n    <h3 highlight>Building Detail</h3>\\n    <div *ngIf=\\\"building\\\">\\n      <div>Id: {{building}}</div><br>\\n      <label>Name:\\n        <input [(ngModel)]=\\\"building.field.name\\\">\\n      </label>\\n    </div>\\n    <br>\\n    <a routerLink=\\\"../\\\">Building List</a>\\n  \"\n        }), \n        __metadata('design:paramtypes', [(typeof (_a = typeof __WEBPACK_IMPORTED_MODULE_1__angular_router__[\"b\" /* ActivatedRoute */] !== 'undefined' && __WEBPACK_IMPORTED_MODULE_1__angular_router__[\"b\" /* ActivatedRoute */]) === 'function' && _a) || Object, (typeof (_b = typeof __WEBPACK_IMPORTED_MODULE_2__building_service__[\"a\" /* BuildingService */] !== 'undefined' && __WEBPACK_IMPORTED_MODULE_2__building_service__[\"a\" /* BuildingService */]) === 'function' && _b) || Object])\n    ], BuildingDetailComponent);\n    return BuildingDetailComponent;\n    var _a, _b;\n}());\n\n\n/***/ },\n/* 987 */\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__building_service__ = __webpack_require__(699);\n/* harmony export (binding) */ __webpack_require__.d(exports, \"a\", function() { return BuildingListComponent; });\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\n\n\nvar BuildingListComponent = (function () {\n    function BuildingListComponent(buildingService) {\n        this.buildingService = buildingService;\n        this.mode = 'Observable';\n        this.date = new Date();\n        this.date = this.date.toISOString();\n        this.buildingID = '0';\n        this.entityID = 'all';\n        this.interval = '0';\n        this.paramText = 'consumption?';\n        this.startDate = new Date();\n        this.startDate.setHours(0, 0, 0, 0);\n        this.endDate = new Date();\n    }\n    BuildingListComponent.prototype.ngOnInit = function () {\n        this.getBuildings();\n    };\n    BuildingListComponent.prototype.getBuildings = function () {\n        var _this = this;\n        this.buildingService.getBuildings(this.buildingID, this.entityID, this.interval, this.paramText, this.startDate, this.endDate)\n            .subscribe(function (buildings) { return _this.buildings = buildings; }, function (error) { return _this.errorMessage = error; });\n    };\n    BuildingListComponent = __decorate([\n        __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Component\"])({\n            selector: 'building-list',\n            template: __webpack_require__(1006),\n            providers: [__WEBPACK_IMPORTED_MODULE_1__building_service__[\"a\" /* BuildingService */]],\n            styles: ['.error {color:red;}']\n        }), \n        __metadata('design:paramtypes', [(typeof (_a = typeof __WEBPACK_IMPORTED_MODULE_1__building_service__[\"a\" /* BuildingService */] !== 'undefined' && __WEBPACK_IMPORTED_MODULE_1__building_service__[\"a\" /* BuildingService */]) === 'function' && _a) || Object])\n    ], BuildingListComponent);\n    return BuildingListComponent;\n    var _a;\n}());\n\n\n/***/ },\n/* 988 */\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__building_service__ = __webpack_require__(699);\n/* harmony export (binding) */ __webpack_require__.d(exports, \"a\", function() { return BuildingComponent; });\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\n\n\nvar BuildingComponent = (function () {\n    function BuildingComponent() {\n    }\n    BuildingComponent.prototype.ngOnInit = function () {\n    };\n    BuildingComponent = __decorate([\n        __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Component\"])({\n            selector: 'app-building',\n            template: \"\\n    <router-outlet></router-outlet>\\n  \",\n            providers: [__WEBPACK_IMPORTED_MODULE_1__building_service__[\"a\" /* BuildingService */]]\n        }), \n        __metadata('design:paramtypes', [])\n    ], BuildingComponent);\n    return BuildingComponent;\n}());\n\n\n/***/ },\n/* 989 */,\n/* 990 */,\n/* 991 */,\n/* 992 */,\n/* 993 */,\n/* 994 */,\n/* 995 */,\n/* 996 */,\n/* 997 */,\n/* 998 */,\n/* 999 */,\n/* 1000 */\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__angular_router__ = __webpack_require__(387);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__building_component__ = __webpack_require__(988);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__building_list_component__ = __webpack_require__(987);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__building_detail_component__ = __webpack_require__(986);\n/* harmony export (binding) */ __webpack_require__.d(exports, \"a\", function() { return BuildingRoutingModule; });\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\n\n\n\n\n\nvar routes = [\n    { path: '',\n        component: __WEBPACK_IMPORTED_MODULE_2__building_component__[\"a\" /* BuildingComponent */],\n        children: [\n            { path: '', component: __WEBPACK_IMPORTED_MODULE_3__building_list_component__[\"a\" /* BuildingListComponent */] },\n            { path: ':id', component: __WEBPACK_IMPORTED_MODULE_4__building_detail_component__[\"a\" /* BuildingDetailComponent */] }\n        ]\n    }\n];\nvar BuildingRoutingModule = (function () {\n    function BuildingRoutingModule() {\n    }\n    BuildingRoutingModule = __decorate([\n        __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__[\"NgModule\"])({\n            imports: [__WEBPACK_IMPORTED_MODULE_1__angular_router__[\"a\" /* RouterModule */].forChild(routes)],\n            exports: [__WEBPACK_IMPORTED_MODULE_1__angular_router__[\"a\" /* RouterModule */]]\n        }), \n        __metadata('design:paramtypes', [])\n    ], BuildingRoutingModule);\n    return BuildingRoutingModule;\n}());\n\n\n/***/ },\n/* 1001 */,\n/* 1002 */,\n/* 1003 */,\n/* 1004 */,\n/* 1005 */,\n/* 1006 */\n/***/ function(module, exports) {\n\nmodule.exports = \"<div class=\\\"page-header\\\">\\n\\t<h2> The energy consumption in {{date | date:'yyyy-MM-dd'}}</h2>\\n</div>\\n<div class=\\\"table-responsive\\\">\\n\\t<table class=\\\"table\\\">\\n\\t\\t<thead>\\n\\t\\t\\t<tr>\\n\\t\\t\\t\\t<th>ID</th>\\n\\t\\t\\t\\t<th>Name</th>\\n\\t\\t\\t\\t<th>Electric</th>\\n\\t\\t\\t\\t<th>Ga</th>\\n\\t\\t\\t</tr>\\n\\t\\t</thead>\\n\\t\\t\\n\\t\\t<tbody>\\n\\t\\t\\t<tr *ngFor=\\\"let building of buildings\\\">\\n\\t\\t\\t\\t<td>{{building.fields.id}}</td>\\n\\t\\t\\t\\t<td>{{building.fields.name}}</td>\\n\\t\\t\\t\\t<td *ngFor=\\\"let entity of building.data\\\">\\n\\t\\t\\t\\t\\t{{entity.actual}} {{entity.metric}}\\n\\t\\t\\t\\t</td>\\n\\t\\t\\t</tr>\\n\\t\\t</tbody>\\n\\t</table>\\n</div>\\n\\n<p class=\\\"error\\\" *ngIf=\\\"errorMessage\\\">{{errorMessage}}</p>\\n\"\n\n/***/ }\n]));\n\n\n// WEBPACK FOOTER //\n// 1.6106afac6988fc68a670.chunk.js","import { NgModule }            from '@angular/core';\nimport { CommonModule }        from '@angular/common';\nimport { FormsModule }         from '@angular/forms';\n\nimport { BuildingComponent }       from './building.component';\nimport { BuildingDetailComponent } from './building-detail.component';\nimport { BuildingListComponent }   from './building-list.component';\nimport { BuildingRoutingModule }   from './building.routing.module';\n\n@NgModule({\n  imports: [ CommonModule, FormsModule, BuildingRoutingModule ],\n  declarations: [\n    BuildingComponent, BuildingDetailComponent, BuildingListComponent\n  ]\n})\nexport class BuildingModule { }\n\n\n\n\n// WEBPACK FOOTER //\n// /workspace/Energy-Consumption/~/angular2-template-loader!/workspace/Energy-Consumption/src/app/building/building.module.ts","\"use strict\";\nvar AsyncAction_1 = require('./AsyncAction');\nvar AsyncScheduler_1 = require('./AsyncScheduler');\nexports.async = new AsyncScheduler_1.AsyncScheduler(AsyncAction_1.AsyncAction);\n//# sourceMappingURL=async.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// /workspace/Energy-Consumption/~/rxjs/scheduler/async.js\n// module id = 686\n// module chunks = 0 1","\"use strict\";\nvar MulticastObservable_1 = require('../observable/MulticastObservable');\nvar ConnectableObservable_1 = require('../observable/ConnectableObservable');\n/**\n * Returns an Observable that emits the results of invoking a specified selector on items\n * emitted by a ConnectableObservable that shares a single subscription to the underlying stream.\n *\n * <img src=\"./img/multicast.png\" width=\"100%\">\n *\n * @param {Function|Subject} Factory function to create an intermediate subject through\n * which the source sequence's elements will be multicast to the selector function\n * or Subject to push source elements into.\n * @param {Function} Optional selector function that can use the multicasted source stream\n * as many times as needed, without causing multiple subscriptions to the source stream.\n * Subscribers to the given source will receive all notifications of the source from the\n * time of the subscription forward.\n * @return {Observable} an Observable that emits the results of invoking the selector\n * on the items emitted by a `ConnectableObservable` that shares a single subscription to\n * the underlying stream.\n * @method multicast\n * @owner Observable\n */\nfunction multicast(subjectOrSubjectFactory, selector) {\n    var subjectFactory;\n    if (typeof subjectOrSubjectFactory === 'function') {\n        subjectFactory = subjectOrSubjectFactory;\n    }\n    else {\n        subjectFactory = function subjectFactory() {\n            return subjectOrSubjectFactory;\n        };\n    }\n    return !selector ?\n        new ConnectableObservable_1.ConnectableObservable(this, subjectFactory) :\n        new MulticastObservable_1.MulticastObservable(this, subjectFactory, selector);\n}\nexports.multicast = multicast;\n//# sourceMappingURL=multicast.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// /workspace/Energy-Consumption/~/rxjs/operator/multicast.js\n// module id = 687\n// module chunks = 0 1","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar root_1 = require('../util/root');\nvar Action_1 = require('./Action');\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar AsyncAction = (function (_super) {\n    __extends(AsyncAction, _super);\n    function AsyncAction(scheduler, work) {\n        _super.call(this, scheduler, work);\n        this.scheduler = scheduler;\n        this.work = work;\n        this.pending = false;\n    }\n    AsyncAction.prototype.schedule = function (state, delay) {\n        if (delay === void 0) { delay = 0; }\n        if (this.closed) {\n            return this;\n        }\n        // Always replace the current state with the new state.\n        this.state = state;\n        // Set the pending flag indicating that this action has been scheduled, or\n        // has recursively rescheduled itself.\n        this.pending = true;\n        var id = this.id;\n        var scheduler = this.scheduler;\n        //\n        // Important implementation note:\n        //\n        // Actions only execute once by default, unless rescheduled from within the\n        // scheduled callback. This allows us to implement single and repeat\n        // actions via the same code path, without adding API surface area, as well\n        // as mimic traditional recursion but across asynchronous boundaries.\n        //\n        // However, JS runtimes and timers distinguish between intervals achieved by\n        // serial `setTimeout` calls vs. a single `setInterval` call. An interval of\n        // serial `setTimeout` calls can be individually delayed, which delays\n        // scheduling the next `setTimeout`, and so on. `setInterval` attempts to\n        // guarantee the interval callback will be invoked more precisely to the\n        // interval period, regardless of load.\n        //\n        // Therefore, we use `setInterval` to schedule single and repeat actions.\n        // If the action reschedules itself with the same delay, the interval is not\n        // canceled. If the action doesn't reschedule, or reschedules with a\n        // different delay, the interval will be canceled after scheduled callback\n        // execution.\n        //\n        if (id != null) {\n            this.id = this.recycleAsyncId(scheduler, id, delay);\n        }\n        this.delay = delay;\n        // If this action has already an async Id, don't request a new one.\n        this.id = this.id || this.requestAsyncId(scheduler, this.id, delay);\n        return this;\n    };\n    AsyncAction.prototype.requestAsyncId = function (scheduler, id, delay) {\n        if (delay === void 0) { delay = 0; }\n        return root_1.root.setInterval(scheduler.flush.bind(scheduler, this), delay);\n    };\n    AsyncAction.prototype.recycleAsyncId = function (scheduler, id, delay) {\n        if (delay === void 0) { delay = 0; }\n        // If this action is rescheduled with the same delay time, don't clear the interval id.\n        if (delay !== null && this.delay === delay) {\n            return id;\n        }\n        // Otherwise, if the action's delay time is different from the current delay,\n        // clear the interval id\n        return root_1.root.clearInterval(id) && undefined || undefined;\n    };\n    /**\n     * Immediately executes this action and the `work` it contains.\n     * @return {any}\n     */\n    AsyncAction.prototype.execute = function (state, delay) {\n        if (this.closed) {\n            return new Error('executing a cancelled action');\n        }\n        this.pending = false;\n        var error = this._execute(state, delay);\n        if (error) {\n            return error;\n        }\n        else if (this.pending === false && this.id != null) {\n            // Dequeue if the action didn't reschedule itself. Don't call\n            // unsubscribe(), because the action could reschedule later.\n            // For example:\n            // ```\n            // scheduler.schedule(function doWork(counter) {\n            //   /* ... I'm a busy worker bee ... */\n            //   var originalAction = this;\n            //   /* wait 100ms before rescheduling the action */\n            //   setTimeout(function () {\n            //     originalAction.schedule(counter + 1);\n            //   }, 100);\n            // }, 1000);\n            // ```\n            this.id = this.recycleAsyncId(this.scheduler, this.id, null);\n        }\n    };\n    AsyncAction.prototype._execute = function (state, delay) {\n        var errored = false;\n        var errorValue = undefined;\n        try {\n            this.work(state);\n        }\n        catch (e) {\n            errored = true;\n            errorValue = !!e && e || new Error(e);\n        }\n        if (errored) {\n            this.unsubscribe();\n            return errorValue;\n        }\n    };\n    AsyncAction.prototype._unsubscribe = function () {\n        var id = this.id;\n        var scheduler = this.scheduler;\n        var actions = scheduler.actions;\n        var index = actions.indexOf(this);\n        this.work = null;\n        this.delay = null;\n        this.state = null;\n        this.pending = false;\n        this.scheduler = null;\n        if (index !== -1) {\n            actions.splice(index, 1);\n        }\n        if (id != null) {\n            this.id = this.recycleAsyncId(scheduler, id, null);\n        }\n    };\n    return AsyncAction;\n}(Action_1.Action));\nexports.AsyncAction = AsyncAction;\n//# sourceMappingURL=AsyncAction.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// /workspace/Energy-Consumption/~/rxjs/scheduler/AsyncAction.js\n// module id = 688\n// module chunks = 0 1","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Scheduler_1 = require('../Scheduler');\nvar AsyncScheduler = (function (_super) {\n    __extends(AsyncScheduler, _super);\n    function AsyncScheduler() {\n        _super.apply(this, arguments);\n        this.actions = [];\n        /**\n         * A flag to indicate whether the Scheduler is currently executing a batch of\n         * queued actions.\n         * @type {boolean}\n         */\n        this.active = false;\n        /**\n         * An internal ID used to track the latest asynchronous task such as those\n         * coming from `setTimeout`, `setInterval`, `requestAnimationFrame`, and\n         * others.\n         * @type {any}\n         */\n        this.scheduled = undefined;\n    }\n    AsyncScheduler.prototype.flush = function (action) {\n        var actions = this.actions;\n        if (this.active) {\n            actions.push(action);\n            return;\n        }\n        var error;\n        this.active = true;\n        do {\n            if (error = action.execute(action.state, action.delay)) {\n                break;\n            }\n        } while (action = actions.shift()); // exhaust the scheduler queue\n        this.active = false;\n        if (error) {\n            while (action = actions.shift()) {\n                action.unsubscribe();\n            }\n            throw error;\n        }\n    };\n    return AsyncScheduler;\n}(Scheduler_1.Scheduler));\nexports.AsyncScheduler = AsyncScheduler;\n//# sourceMappingURL=AsyncScheduler.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// /workspace/Energy-Consumption/~/rxjs/scheduler/AsyncScheduler.js\n// module id = 689\n// module chunks = 0 1","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Subject_1 = require('./Subject');\nvar Subscription_1 = require('./Subscription');\n/**\n * @class AsyncSubject<T>\n */\nvar AsyncSubject = (function (_super) {\n    __extends(AsyncSubject, _super);\n    function AsyncSubject() {\n        _super.apply(this, arguments);\n        this.value = null;\n        this.hasNext = false;\n        this.hasCompleted = false;\n    }\n    AsyncSubject.prototype._subscribe = function (subscriber) {\n        if (this.hasCompleted && this.hasNext) {\n            subscriber.next(this.value);\n            subscriber.complete();\n            return Subscription_1.Subscription.EMPTY;\n        }\n        else if (this.hasError) {\n            subscriber.error(this.thrownError);\n            return Subscription_1.Subscription.EMPTY;\n        }\n        return _super.prototype._subscribe.call(this, subscriber);\n    };\n    AsyncSubject.prototype.next = function (value) {\n        if (!this.hasCompleted) {\n            this.value = value;\n            this.hasNext = true;\n        }\n    };\n    AsyncSubject.prototype.complete = function () {\n        this.hasCompleted = true;\n        if (this.hasNext) {\n            _super.prototype.next.call(this, this.value);\n        }\n        _super.prototype.complete.call(this);\n    };\n    return AsyncSubject;\n}(Subject_1.Subject));\nexports.AsyncSubject = AsyncSubject;\n//# sourceMappingURL=AsyncSubject.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// /workspace/Energy-Consumption/~/rxjs/AsyncSubject.js\n// module id = 690\n// module chunks = 0 1","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Subject_1 = require('./Subject');\nvar queue_1 = require('./scheduler/queue');\nvar observeOn_1 = require('./operator/observeOn');\n/**\n * @class ReplaySubject<T>\n */\nvar ReplaySubject = (function (_super) {\n    __extends(ReplaySubject, _super);\n    function ReplaySubject(bufferSize, windowTime, scheduler) {\n        if (bufferSize === void 0) { bufferSize = Number.POSITIVE_INFINITY; }\n        if (windowTime === void 0) { windowTime = Number.POSITIVE_INFINITY; }\n        _super.call(this);\n        this.scheduler = scheduler;\n        this._events = [];\n        this._bufferSize = bufferSize < 1 ? 1 : bufferSize;\n        this._windowTime = windowTime < 1 ? 1 : windowTime;\n    }\n    ReplaySubject.prototype.next = function (value) {\n        var now = this._getNow();\n        this._events.push(new ReplayEvent(now, value));\n        this._trimBufferThenGetEvents();\n        _super.prototype.next.call(this, value);\n    };\n    ReplaySubject.prototype._subscribe = function (subscriber) {\n        var _events = this._trimBufferThenGetEvents();\n        var scheduler = this.scheduler;\n        if (scheduler) {\n            subscriber.add(subscriber = new observeOn_1.ObserveOnSubscriber(subscriber, scheduler));\n        }\n        var len = _events.length;\n        for (var i = 0; i < len && !subscriber.closed; i++) {\n            subscriber.next(_events[i].value);\n        }\n        return _super.prototype._subscribe.call(this, subscriber);\n    };\n    ReplaySubject.prototype._getNow = function () {\n        return (this.scheduler || queue_1.queue).now();\n    };\n    ReplaySubject.prototype._trimBufferThenGetEvents = function () {\n        var now = this._getNow();\n        var _bufferSize = this._bufferSize;\n        var _windowTime = this._windowTime;\n        var _events = this._events;\n        var eventsCount = _events.length;\n        var spliceCount = 0;\n        // Trim events that fall out of the time window.\n        // Start at the front of the list. Break early once\n        // we encounter an event that falls within the window.\n        while (spliceCount < eventsCount) {\n            if ((now - _events[spliceCount].time) < _windowTime) {\n                break;\n            }\n            spliceCount++;\n        }\n        if (eventsCount > _bufferSize) {\n            spliceCount = Math.max(spliceCount, eventsCount - _bufferSize);\n        }\n        if (spliceCount > 0) {\n            _events.splice(0, spliceCount);\n        }\n        return _events;\n    };\n    return ReplaySubject;\n}(Subject_1.Subject));\nexports.ReplaySubject = ReplaySubject;\nvar ReplayEvent = (function () {\n    function ReplayEvent(time, value) {\n        this.time = time;\n        this.value = value;\n    }\n    return ReplayEvent;\n}());\n//# sourceMappingURL=ReplaySubject.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// /workspace/Energy-Consumption/~/rxjs/ReplaySubject.js\n// module id = 691\n// module chunks = 0 1","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\n/**\n * An error thrown when an element was queried at a certain index of an\n * Observable, but no such index or position exists in that sequence.\n *\n * @see {@link elementAt}\n * @see {@link take}\n * @see {@link takeLast}\n *\n * @class ArgumentOutOfRangeError\n */\nvar ArgumentOutOfRangeError = (function (_super) {\n    __extends(ArgumentOutOfRangeError, _super);\n    function ArgumentOutOfRangeError() {\n        var err = _super.call(this, 'argument out of range');\n        this.name = err.name = 'ArgumentOutOfRangeError';\n        this.stack = err.stack;\n        this.message = err.message;\n    }\n    return ArgumentOutOfRangeError;\n}(Error));\nexports.ArgumentOutOfRangeError = ArgumentOutOfRangeError;\n//# sourceMappingURL=ArgumentOutOfRangeError.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// /workspace/Energy-Consumption/~/rxjs/util/ArgumentOutOfRangeError.js\n// module id = 692\n// module chunks = 0 1","\"use strict\";\nfunction isDate(value) {\n    return value instanceof Date && !isNaN(+value);\n}\nexports.isDate = isDate;\n//# sourceMappingURL=isDate.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// /workspace/Energy-Consumption/~/rxjs/util/isDate.js\n// module id = 693\n// module chunks = 0 1","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Subject_1 = require('../Subject');\nvar Observable_1 = require('../Observable');\nvar Subscriber_1 = require('../Subscriber');\nvar Subscription_1 = require('../Subscription');\n/**\n * @class ConnectableObservable<T>\n */\nvar ConnectableObservable = (function (_super) {\n    __extends(ConnectableObservable, _super);\n    function ConnectableObservable(source, subjectFactory) {\n        _super.call(this);\n        this.source = source;\n        this.subjectFactory = subjectFactory;\n        this._refCount = 0;\n    }\n    ConnectableObservable.prototype._subscribe = function (subscriber) {\n        return this.getSubject().subscribe(subscriber);\n    };\n    ConnectableObservable.prototype.getSubject = function () {\n        var subject = this._subject;\n        if (!subject || subject.isStopped) {\n            this._subject = this.subjectFactory();\n        }\n        return this._subject;\n    };\n    ConnectableObservable.prototype.connect = function () {\n        var connection = this._connection;\n        if (!connection) {\n            connection = this._connection = new Subscription_1.Subscription();\n            connection.add(this.source\n                .subscribe(new ConnectableSubscriber(this.getSubject(), this)));\n            if (connection.closed) {\n                this._connection = null;\n                connection = Subscription_1.Subscription.EMPTY;\n            }\n            else {\n                this._connection = connection;\n            }\n        }\n        return connection;\n    };\n    ConnectableObservable.prototype.refCount = function () {\n        return this.lift(new RefCountOperator(this));\n    };\n    return ConnectableObservable;\n}(Observable_1.Observable));\nexports.ConnectableObservable = ConnectableObservable;\nvar ConnectableSubscriber = (function (_super) {\n    __extends(ConnectableSubscriber, _super);\n    function ConnectableSubscriber(destination, connectable) {\n        _super.call(this, destination);\n        this.connectable = connectable;\n    }\n    ConnectableSubscriber.prototype._error = function (err) {\n        this._unsubscribe();\n        _super.prototype._error.call(this, err);\n    };\n    ConnectableSubscriber.prototype._complete = function () {\n        this._unsubscribe();\n        _super.prototype._complete.call(this);\n    };\n    ConnectableSubscriber.prototype._unsubscribe = function () {\n        var connectable = this.connectable;\n        if (connectable) {\n            this.connectable = null;\n            var connection = connectable._connection;\n            connectable._refCount = 0;\n            connectable._subject = null;\n            connectable._connection = null;\n            if (connection) {\n                connection.unsubscribe();\n            }\n        }\n    };\n    return ConnectableSubscriber;\n}(Subject_1.SubjectSubscriber));\nvar RefCountOperator = (function () {\n    function RefCountOperator(connectable) {\n        this.connectable = connectable;\n    }\n    RefCountOperator.prototype.call = function (subscriber, source) {\n        var connectable = this.connectable;\n        connectable._refCount++;\n        var refCounter = new RefCountSubscriber(subscriber, connectable);\n        var subscription = source._subscribe(refCounter);\n        if (!refCounter.closed) {\n            refCounter.connection = connectable.connect();\n        }\n        return subscription;\n    };\n    return RefCountOperator;\n}());\nvar RefCountSubscriber = (function (_super) {\n    __extends(RefCountSubscriber, _super);\n    function RefCountSubscriber(destination, connectable) {\n        _super.call(this, destination);\n        this.connectable = connectable;\n    }\n    RefCountSubscriber.prototype._unsubscribe = function () {\n        var connectable = this.connectable;\n        if (!connectable) {\n            this.connection = null;\n            return;\n        }\n        this.connectable = null;\n        var refCount = connectable._refCount;\n        if (refCount <= 0) {\n            this.connection = null;\n            return;\n        }\n        connectable._refCount = refCount - 1;\n        if (refCount > 1) {\n            this.connection = null;\n            return;\n        }\n        ///\n        // Compare the local RefCountSubscriber's connection Subscription to the\n        // connection Subscription on the shared ConnectableObservable. In cases\n        // where the ConnectableObservable source synchronously emits values, and\n        // the RefCountSubscriber's dowstream Observers synchronously unsubscribe,\n        // execution continues to here before the RefCountOperator has a chance to\n        // supply the RefCountSubscriber with the shared connection Subscription.\n        // For example:\n        // ```\n        // Observable.range(0, 10)\n        //   .publish()\n        //   .refCount()\n        //   .take(5)\n        //   .subscribe();\n        // ```\n        // In order to account for this case, RefCountSubscriber should only dispose\n        // the ConnectableObservable's shared connection Subscription if the\n        // connection Subscription exists, *and* either:\n        //   a. RefCountSubscriber doesn't have a reference to the shared connection\n        //      Subscription yet, or,\n        //   b. RefCountSubscriber's connection Subscription reference is identical\n        //      to the shared connection Subscription\n        ///\n        var connection = this.connection;\n        var sharedConnection = connectable._connection;\n        this.connection = null;\n        if (sharedConnection && (!connection || sharedConnection === connection)) {\n            sharedConnection.unsubscribe();\n        }\n    };\n    return RefCountSubscriber;\n}(Subscriber_1.Subscriber));\n//# sourceMappingURL=ConnectableObservable.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// /workspace/Energy-Consumption/~/rxjs/observable/ConnectableObservable.js\n// module id = 694\n// module chunks = 0 1","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar ArrayObservable_1 = require('../observable/ArrayObservable');\nvar isArray_1 = require('../util/isArray');\nvar OuterSubscriber_1 = require('../OuterSubscriber');\nvar subscribeToResult_1 = require('../util/subscribeToResult');\nvar none = {};\n/**\n * Combines multiple Observables to create an Observable whose values are\n * calculated from the latest values of each of its input Observables.\n *\n * <span class=\"informal\">Whenever any input Observable emits a value, it\n * computes a formula using the latest values from all the inputs, then emits\n * the output of that formula.</span>\n *\n * <img src=\"./img/combineLatest.png\" width=\"100%\">\n *\n * `combineLatest` combines the values from this Observable with values from\n * Observables passed as arguments. This is done by subscribing to each\n * Observable, in order, and collecting an array of each of the most recent\n * values any time any of the input Observables emits, then either taking that\n * array and passing it as arguments to an optional `project` function and\n * emitting the return value of that, or just emitting the array of recent\n * values directly if there is no `project` function.\n *\n * @example <caption>Dynamically calculate the Body-Mass Index from an Observable of weight and one for height</caption>\n * var weight = Rx.Observable.of(70, 72, 76, 79, 75);\n * var height = Rx.Observable.of(1.76, 1.77, 1.78);\n * var bmi = weight.combineLatest(height, (w, h) => w / (h * h));\n * bmi.subscribe(x => console.log('BMI is ' + x));\n *\n * @see {@link combineAll}\n * @see {@link merge}\n * @see {@link withLatestFrom}\n *\n * @param {Observable} other An input Observable to combine with the source\n * Observable. More than one input Observables may be given as argument.\n * @param {function} [project] An optional function to project the values from\n * the combined latest values into a new value on the output Observable.\n * @return {Observable} An Observable of projected values from the most recent\n * values from each input Observable, or an array of the most recent values from\n * each input Observable.\n * @method combineLatest\n * @owner Observable\n */\nfunction combineLatest() {\n    var observables = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        observables[_i - 0] = arguments[_i];\n    }\n    var project = null;\n    if (typeof observables[observables.length - 1] === 'function') {\n        project = observables.pop();\n    }\n    // if the first and only other argument besides the resultSelector is an array\n    // assume it's been called with `combineLatest([obs1, obs2, obs3], project)`\n    if (observables.length === 1 && isArray_1.isArray(observables[0])) {\n        observables = observables[0];\n    }\n    observables.unshift(this);\n    return new ArrayObservable_1.ArrayObservable(observables).lift(new CombineLatestOperator(project));\n}\nexports.combineLatest = combineLatest;\n/* tslint:enable:max-line-length */\nvar CombineLatestOperator = (function () {\n    function CombineLatestOperator(project) {\n        this.project = project;\n    }\n    CombineLatestOperator.prototype.call = function (subscriber, source) {\n        return source._subscribe(new CombineLatestSubscriber(subscriber, this.project));\n    };\n    return CombineLatestOperator;\n}());\nexports.CombineLatestOperator = CombineLatestOperator;\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar CombineLatestSubscriber = (function (_super) {\n    __extends(CombineLatestSubscriber, _super);\n    function CombineLatestSubscriber(destination, project) {\n        _super.call(this, destination);\n        this.project = project;\n        this.active = 0;\n        this.values = [];\n        this.observables = [];\n    }\n    CombineLatestSubscriber.prototype._next = function (observable) {\n        this.values.push(none);\n        this.observables.push(observable);\n    };\n    CombineLatestSubscriber.prototype._complete = function () {\n        var observables = this.observables;\n        var len = observables.length;\n        if (len === 0) {\n            this.destination.complete();\n        }\n        else {\n            this.active = len;\n            this.toRespond = len;\n            for (var i = 0; i < len; i++) {\n                var observable = observables[i];\n                this.add(subscribeToResult_1.subscribeToResult(this, observable, observable, i));\n            }\n        }\n    };\n    CombineLatestSubscriber.prototype.notifyComplete = function (unused) {\n        if ((this.active -= 1) === 0) {\n            this.destination.complete();\n        }\n    };\n    CombineLatestSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {\n        var values = this.values;\n        var oldVal = values[outerIndex];\n        var toRespond = !this.toRespond\n            ? 0\n            : oldVal === none ? --this.toRespond : this.toRespond;\n        values[outerIndex] = innerValue;\n        if (toRespond === 0) {\n            if (this.project) {\n                this._tryProject(values);\n            }\n            else {\n                this.destination.next(values.slice());\n            }\n        }\n    };\n    CombineLatestSubscriber.prototype._tryProject = function (values) {\n        var result;\n        try {\n            result = this.project.apply(this, values);\n        }\n        catch (err) {\n            this.destination.error(err);\n            return;\n        }\n        this.destination.next(result);\n    };\n    return CombineLatestSubscriber;\n}(OuterSubscriber_1.OuterSubscriber));\nexports.CombineLatestSubscriber = CombineLatestSubscriber;\n//# sourceMappingURL=combineLatest.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// /workspace/Energy-Consumption/~/rxjs/operator/combineLatest.js\n// module id = 695\n// module chunks = 0 1","\"use strict\";\nvar isScheduler_1 = require('../util/isScheduler');\nvar ArrayObservable_1 = require('../observable/ArrayObservable');\nvar mergeAll_1 = require('./mergeAll');\n/**\n * Creates an output Observable which sequentially emits all values from every\n * given input Observable after the current Observable.\n *\n * <span class=\"informal\">Concatenates multiple Observables together by\n * sequentially emitting their values, one Observable after the other.</span>\n *\n * <img src=\"./img/concat.png\" width=\"100%\">\n *\n * Joins this Observable with multiple other Observables by subscribing to them\n * one at a time, starting with the source, and merging their results into the\n * output Observable. Will wait for each Observable to complete before moving\n * on to the next.\n *\n * @example <caption>Concatenate a timer counting from 0 to 3 with a synchronous sequence from 1 to 10</caption>\n * var timer = Rx.Observable.interval(1000).take(4);\n * var sequence = Rx.Observable.range(1, 10);\n * var result = timer.concat(sequence);\n * result.subscribe(x => console.log(x));\n *\n * @example <caption>Concatenate 3 Observables</caption>\n * var timer1 = Rx.Observable.interval(1000).take(10);\n * var timer2 = Rx.Observable.interval(2000).take(6);\n * var timer3 = Rx.Observable.interval(500).take(10);\n * var result = timer1.concat(timer2, timer3);\n * result.subscribe(x => console.log(x));\n *\n * @see {@link concatAll}\n * @see {@link concatMap}\n * @see {@link concatMapTo}\n *\n * @param {Observable} other An input Observable to concatenate after the source\n * Observable. More than one input Observables may be given as argument.\n * @param {Scheduler} [scheduler=null] An optional Scheduler to schedule each\n * Observable subscription on.\n * @return {Observable} All values of each passed Observable merged into a\n * single Observable, in order, in serial fashion.\n * @method concat\n * @owner Observable\n */\nfunction concat() {\n    var observables = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        observables[_i - 0] = arguments[_i];\n    }\n    return concatStatic.apply(void 0, [this].concat(observables));\n}\nexports.concat = concat;\n/* tslint:enable:max-line-length */\n/**\n * Creates an output Observable which sequentially emits all values from every\n * given input Observable after the current Observable.\n *\n * <span class=\"informal\">Concatenates multiple Observables together by\n * sequentially emitting their values, one Observable after the other.</span>\n *\n * <img src=\"./img/concat.png\" width=\"100%\">\n *\n * Joins multiple Observables together by subscribing to them one at a time and\n * merging their results into the output Observable. Will wait for each\n * Observable to complete before moving on to the next.\n *\n * @example <caption>Concatenate a timer counting from 0 to 3 with a synchronous sequence from 1 to 10</caption>\n * var timer = Rx.Observable.interval(1000).take(4);\n * var sequence = Rx.Observable.range(1, 10);\n * var result = Rx.Observable.concat(timer, sequence);\n * result.subscribe(x => console.log(x));\n *\n * @example <caption>Concatenate 3 Observables</caption>\n * var timer1 = Rx.Observable.interval(1000).take(10);\n * var timer2 = Rx.Observable.interval(2000).take(6);\n * var timer3 = Rx.Observable.interval(500).take(10);\n * var result = Rx.Observable.concat(timer1, timer2, timer3);\n * result.subscribe(x => console.log(x));\n *\n * @see {@link concatAll}\n * @see {@link concatMap}\n * @see {@link concatMapTo}\n *\n * @param {Observable} input1 An input Observable to concatenate with others.\n * @param {Observable} input2 An input Observable to concatenate with others.\n * More than one input Observables may be given as argument.\n * @param {Scheduler} [scheduler=null] An optional Scheduler to schedule each\n * Observable subscription on.\n * @return {Observable} All values of each passed Observable merged into a\n * single Observable, in order, in serial fashion.\n * @static true\n * @name concat\n * @owner Observable\n */\nfunction concatStatic() {\n    var observables = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        observables[_i - 0] = arguments[_i];\n    }\n    var scheduler = null;\n    var args = observables;\n    if (isScheduler_1.isScheduler(args[observables.length - 1])) {\n        scheduler = args.pop();\n    }\n    return new ArrayObservable_1.ArrayObservable(observables, scheduler).lift(new mergeAll_1.MergeAllOperator(1));\n}\nexports.concatStatic = concatStatic;\n//# sourceMappingURL=concat.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// /workspace/Energy-Consumption/~/rxjs/operator/concat.js\n// module id = 696\n// module chunks = 0 1","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar ArrayObservable_1 = require('../observable/ArrayObservable');\nvar isArray_1 = require('../util/isArray');\nvar Subscriber_1 = require('../Subscriber');\nvar OuterSubscriber_1 = require('../OuterSubscriber');\nvar subscribeToResult_1 = require('../util/subscribeToResult');\nvar iterator_1 = require('../symbol/iterator');\n/**\n * @param observables\n * @return {Observable<R>}\n * @method zip\n * @owner Observable\n */\nfunction zipProto() {\n    var observables = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        observables[_i - 0] = arguments[_i];\n    }\n    observables.unshift(this);\n    return zipStatic.apply(this, observables);\n}\nexports.zipProto = zipProto;\n/* tslint:enable:max-line-length */\n/**\n * @param observables\n * @return {Observable<R>}\n * @static true\n * @name zip\n * @owner Observable\n */\nfunction zipStatic() {\n    var observables = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        observables[_i - 0] = arguments[_i];\n    }\n    var project = observables[observables.length - 1];\n    if (typeof project === 'function') {\n        observables.pop();\n    }\n    return new ArrayObservable_1.ArrayObservable(observables).lift(new ZipOperator(project));\n}\nexports.zipStatic = zipStatic;\nvar ZipOperator = (function () {\n    function ZipOperator(project) {\n        this.project = project;\n    }\n    ZipOperator.prototype.call = function (subscriber, source) {\n        return source._subscribe(new ZipSubscriber(subscriber, this.project));\n    };\n    return ZipOperator;\n}());\nexports.ZipOperator = ZipOperator;\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar ZipSubscriber = (function (_super) {\n    __extends(ZipSubscriber, _super);\n    function ZipSubscriber(destination, project, values) {\n        if (values === void 0) { values = Object.create(null); }\n        _super.call(this, destination);\n        this.index = 0;\n        this.iterators = [];\n        this.active = 0;\n        this.project = (typeof project === 'function') ? project : null;\n        this.values = values;\n    }\n    ZipSubscriber.prototype._next = function (value) {\n        var iterators = this.iterators;\n        var index = this.index++;\n        if (isArray_1.isArray(value)) {\n            iterators.push(new StaticArrayIterator(value));\n        }\n        else if (typeof value[iterator_1.$$iterator] === 'function') {\n            iterators.push(new StaticIterator(value[iterator_1.$$iterator]()));\n        }\n        else {\n            iterators.push(new ZipBufferIterator(this.destination, this, value, index));\n        }\n    };\n    ZipSubscriber.prototype._complete = function () {\n        var iterators = this.iterators;\n        var len = iterators.length;\n        this.active = len;\n        for (var i = 0; i < len; i++) {\n            var iterator = iterators[i];\n            if (iterator.stillUnsubscribed) {\n                this.add(iterator.subscribe(iterator, i));\n            }\n            else {\n                this.active--; // not an observable\n            }\n        }\n    };\n    ZipSubscriber.prototype.notifyInactive = function () {\n        this.active--;\n        if (this.active === 0) {\n            this.destination.complete();\n        }\n    };\n    ZipSubscriber.prototype.checkIterators = function () {\n        var iterators = this.iterators;\n        var len = iterators.length;\n        var destination = this.destination;\n        // abort if not all of them have values\n        for (var i = 0; i < len; i++) {\n            var iterator = iterators[i];\n            if (typeof iterator.hasValue === 'function' && !iterator.hasValue()) {\n                return;\n            }\n        }\n        var shouldComplete = false;\n        var args = [];\n        for (var i = 0; i < len; i++) {\n            var iterator = iterators[i];\n            var result = iterator.next();\n            // check to see if it's completed now that you've gotten\n            // the next value.\n            if (iterator.hasCompleted()) {\n                shouldComplete = true;\n            }\n            if (result.done) {\n                destination.complete();\n                return;\n            }\n            args.push(result.value);\n        }\n        if (this.project) {\n            this._tryProject(args);\n        }\n        else {\n            destination.next(args);\n        }\n        if (shouldComplete) {\n            destination.complete();\n        }\n    };\n    ZipSubscriber.prototype._tryProject = function (args) {\n        var result;\n        try {\n            result = this.project.apply(this, args);\n        }\n        catch (err) {\n            this.destination.error(err);\n            return;\n        }\n        this.destination.next(result);\n    };\n    return ZipSubscriber;\n}(Subscriber_1.Subscriber));\nexports.ZipSubscriber = ZipSubscriber;\nvar StaticIterator = (function () {\n    function StaticIterator(iterator) {\n        this.iterator = iterator;\n        this.nextResult = iterator.next();\n    }\n    StaticIterator.prototype.hasValue = function () {\n        return true;\n    };\n    StaticIterator.prototype.next = function () {\n        var result = this.nextResult;\n        this.nextResult = this.iterator.next();\n        return result;\n    };\n    StaticIterator.prototype.hasCompleted = function () {\n        var nextResult = this.nextResult;\n        return nextResult && nextResult.done;\n    };\n    return StaticIterator;\n}());\nvar StaticArrayIterator = (function () {\n    function StaticArrayIterator(array) {\n        this.array = array;\n        this.index = 0;\n        this.length = 0;\n        this.length = array.length;\n    }\n    StaticArrayIterator.prototype[iterator_1.$$iterator] = function () {\n        return this;\n    };\n    StaticArrayIterator.prototype.next = function (value) {\n        var i = this.index++;\n        var array = this.array;\n        return i < this.length ? { value: array[i], done: false } : { value: null, done: true };\n    };\n    StaticArrayIterator.prototype.hasValue = function () {\n        return this.array.length > this.index;\n    };\n    StaticArrayIterator.prototype.hasCompleted = function () {\n        return this.array.length === this.index;\n    };\n    return StaticArrayIterator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar ZipBufferIterator = (function (_super) {\n    __extends(ZipBufferIterator, _super);\n    function ZipBufferIterator(destination, parent, observable, index) {\n        _super.call(this, destination);\n        this.parent = parent;\n        this.observable = observable;\n        this.index = index;\n        this.stillUnsubscribed = true;\n        this.buffer = [];\n        this.isComplete = false;\n    }\n    ZipBufferIterator.prototype[iterator_1.$$iterator] = function () {\n        return this;\n    };\n    // NOTE: there is actually a name collision here with Subscriber.next and Iterator.next\n    //    this is legit because `next()` will never be called by a subscription in this case.\n    ZipBufferIterator.prototype.next = function () {\n        var buffer = this.buffer;\n        if (buffer.length === 0 && this.isComplete) {\n            return { value: null, done: true };\n        }\n        else {\n            return { value: buffer.shift(), done: false };\n        }\n    };\n    ZipBufferIterator.prototype.hasValue = function () {\n        return this.buffer.length > 0;\n    };\n    ZipBufferIterator.prototype.hasCompleted = function () {\n        return this.buffer.length === 0 && this.isComplete;\n    };\n    ZipBufferIterator.prototype.notifyComplete = function () {\n        if (this.buffer.length > 0) {\n            this.isComplete = true;\n            this.parent.notifyInactive();\n        }\n        else {\n            this.destination.complete();\n        }\n    };\n    ZipBufferIterator.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {\n        this.buffer.push(innerValue);\n        this.parent.checkIterators();\n    };\n    ZipBufferIterator.prototype.subscribe = function (value, index) {\n        return subscribeToResult_1.subscribeToResult(this, this.observable, this, index);\n    };\n    return ZipBufferIterator;\n}(OuterSubscriber_1.OuterSubscriber));\n//# sourceMappingURL=zip.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// /workspace/Energy-Consumption/~/rxjs/operator/zip.js\n// module id = 697\n// module chunks = 0 1","\"use strict\";\nvar isArray_1 = require('../util/isArray');\nfunction isNumeric(val) {\n    // parseFloat NaNs numeric-cast false positives (null|true|false|\"\")\n    // ...but misinterprets leading-number strings, particularly hex literals (\"0x...\")\n    // subtraction forces infinities to NaN\n    // adding 1 corrects loss of precision from parseFloat (#15100)\n    return !isArray_1.isArray(val) && (val - parseFloat(val) + 1) >= 0;\n}\nexports.isNumeric = isNumeric;\n;\n//# sourceMappingURL=isNumeric.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// /workspace/Energy-Consumption/~/rxjs/util/isNumeric.js\n// module id = 698\n// module chunks = 0 1","import { Injectable } from '@angular/core';\nimport { Http, Response, Headers } from '@angular/http';\nimport {Observable} from 'rxjs/Rx';\nimport { Configuration } from '../app.constants';\n\n\nexport class Building {\n  constructor(public fields: Object, public data: Data[]) { }\n}\n\n// export class Fields {\n//   constructor(public postal: string, public city: string, public name: string, public img: string, public id: number, public address: string) { }\n// }\n\nexport class Data {\n  constructor(public entity: string, public metric: string, public entries: Entry[]) { }\n}\n\nexport class Entry {\n  constructor(public timestamp: string, public actual: number, public expectedMin: number, public expectedMax: number, public co2: number) { }\n}\n\n@Injectable()\nexport class BuildingService {\n  private baseUrl: string;\n  private headers: Headers;\n\n  constructor (private http: Http ) {\n    this.baseUrl = 'http://129.125.84.138:8099/sensor-data-rest/';\n  }\n\n  getBuildings ( buildingID, entityID, interval, paramText, startDate, endDate ): Observable<Building[]> {\n    startDate = new Date(startDate);\n    endDate = new Date(endDate);\n\n    var response =  this.http.get(this.baseUrl + buildingID + '/' + entityID + '/' + interval + '/' + paramText + 'start=' + startDate.toISOString() + '&end=' + endDate.toISOString())\n                    .map((res:Response) => res.json().buildings)\n                    .catch(this.handleError);\n    return response;\n  }\n\n  // getBuilding(id: number | string) {\n  //   var response = this.getBuildings ( buildingID, entityID, interval, paramText, startDate, endDate )\n  //                      .map(buildings => buildings.find(building => building.id === id));\n  //   //console.log(response);\n  //   return response;\n  // }\n\n  private handleError (error: Response | any) {\n    let errMsg: string;\n    if (error instanceof Response) {\n      const body = error.json() || '';\n      const err = body.error || JSON.stringify(body);\n      errMsg = `${error.status} - ${error.statusText || ''} ${err}`;\n    } else {\n      errMsg = error.message ? error.message : error.toString();\n    }\n    console.error(errMsg);\n    return Observable.throw(errMsg);\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// /workspace/Energy-Consumption/~/angular2-template-loader!/workspace/Energy-Consumption/src/app/building/building.service.ts","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Observable_1 = require('../Observable');\nvar ConnectableObservable_1 = require('../observable/ConnectableObservable');\nvar MulticastObservable = (function (_super) {\n    __extends(MulticastObservable, _super);\n    function MulticastObservable(source, subjectFactory, selector) {\n        _super.call(this);\n        this.source = source;\n        this.subjectFactory = subjectFactory;\n        this.selector = selector;\n    }\n    MulticastObservable.prototype._subscribe = function (subscriber) {\n        var _a = this, selector = _a.selector, source = _a.source;\n        var connectable = new ConnectableObservable_1.ConnectableObservable(source, this.subjectFactory);\n        var subscription = selector(connectable).subscribe(subscriber);\n        subscription.add(connectable.connect());\n        return subscription;\n    };\n    return MulticastObservable;\n}(Observable_1.Observable));\nexports.MulticastObservable = MulticastObservable;\n//# sourceMappingURL=MulticastObservable.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// /workspace/Energy-Consumption/~/rxjs/observable/MulticastObservable.js\n// module id = 700\n// module chunks = 0 1","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar root_1 = require('../../util/root');\nvar tryCatch_1 = require('../../util/tryCatch');\nvar errorObject_1 = require('../../util/errorObject');\nvar Observable_1 = require('../../Observable');\nvar Subscriber_1 = require('../../Subscriber');\nvar map_1 = require('../../operator/map');\nfunction getCORSRequest() {\n    if (root_1.root.XMLHttpRequest) {\n        var xhr = new root_1.root.XMLHttpRequest();\n        if ('withCredentials' in xhr) {\n            xhr.withCredentials = !!this.withCredentials;\n        }\n        return xhr;\n    }\n    else if (!!root_1.root.XDomainRequest) {\n        return new root_1.root.XDomainRequest();\n    }\n    else {\n        throw new Error('CORS is not supported by your browser');\n    }\n}\nfunction getXMLHttpRequest() {\n    if (root_1.root.XMLHttpRequest) {\n        return new root_1.root.XMLHttpRequest();\n    }\n    else {\n        var progId = void 0;\n        try {\n            var progIds = ['Msxml2.XMLHTTP', 'Microsoft.XMLHTTP', 'Msxml2.XMLHTTP.4.0'];\n            for (var i = 0; i < 3; i++) {\n                try {\n                    progId = progIds[i];\n                    if (new root_1.root.ActiveXObject(progId)) {\n                        break;\n                    }\n                }\n                catch (e) {\n                }\n            }\n            return new root_1.root.ActiveXObject(progId);\n        }\n        catch (e) {\n            throw new Error('XMLHttpRequest is not supported by your browser');\n        }\n    }\n}\nfunction ajaxGet(url, headers) {\n    if (headers === void 0) { headers = null; }\n    return new AjaxObservable({ method: 'GET', url: url, headers: headers });\n}\nexports.ajaxGet = ajaxGet;\n;\nfunction ajaxPost(url, body, headers) {\n    return new AjaxObservable({ method: 'POST', url: url, body: body, headers: headers });\n}\nexports.ajaxPost = ajaxPost;\n;\nfunction ajaxDelete(url, headers) {\n    return new AjaxObservable({ method: 'DELETE', url: url, headers: headers });\n}\nexports.ajaxDelete = ajaxDelete;\n;\nfunction ajaxPut(url, body, headers) {\n    return new AjaxObservable({ method: 'PUT', url: url, body: body, headers: headers });\n}\nexports.ajaxPut = ajaxPut;\n;\nfunction ajaxGetJSON(url, headers) {\n    return new AjaxObservable({ method: 'GET', url: url, responseType: 'json', headers: headers })\n        .lift(new map_1.MapOperator(function (x, index) { return x.response; }, null));\n}\nexports.ajaxGetJSON = ajaxGetJSON;\n;\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @extends {Ignored}\n * @hide true\n */\nvar AjaxObservable = (function (_super) {\n    __extends(AjaxObservable, _super);\n    function AjaxObservable(urlOrRequest) {\n        _super.call(this);\n        var request = {\n            async: true,\n            createXHR: function () {\n                return this.crossDomain ? getCORSRequest.call(this) : getXMLHttpRequest();\n            },\n            crossDomain: false,\n            withCredentials: false,\n            headers: {},\n            method: 'GET',\n            responseType: 'json',\n            timeout: 0\n        };\n        if (typeof urlOrRequest === 'string') {\n            request.url = urlOrRequest;\n        }\n        else {\n            for (var prop in urlOrRequest) {\n                if (urlOrRequest.hasOwnProperty(prop)) {\n                    request[prop] = urlOrRequest[prop];\n                }\n            }\n        }\n        this.request = request;\n    }\n    AjaxObservable.prototype._subscribe = function (subscriber) {\n        return new AjaxSubscriber(subscriber, this.request);\n    };\n    /**\n     * Creates an observable for an Ajax request with either a request object with\n     * url, headers, etc or a string for a URL.\n     *\n     * @example\n     * source = Rx.Observable.ajax('/products');\n     * source = Rx.Observable.ajax({ url: 'products', method: 'GET' });\n     *\n     * @param {string|Object} request Can be one of the following:\n     *   A string of the URL to make the Ajax call.\n     *   An object with the following properties\n     *   - url: URL of the request\n     *   - body: The body of the request\n     *   - method: Method of the request, such as GET, POST, PUT, PATCH, DELETE\n     *   - async: Whether the request is async\n     *   - headers: Optional headers\n     *   - crossDomain: true if a cross domain request, else false\n     *   - createXHR: a function to override if you need to use an alternate\n     *   XMLHttpRequest implementation.\n     *   - resultSelector: a function to use to alter the output value type of\n     *   the Observable. Gets {@link AjaxResponse} as an argument.\n     * @return {Observable} An observable sequence containing the XMLHttpRequest.\n     * @static true\n     * @name ajax\n     * @owner Observable\n    */\n    AjaxObservable.create = (function () {\n        var create = function (urlOrRequest) {\n            return new AjaxObservable(urlOrRequest);\n        };\n        create.get = ajaxGet;\n        create.post = ajaxPost;\n        create.delete = ajaxDelete;\n        create.put = ajaxPut;\n        create.getJSON = ajaxGetJSON;\n        return create;\n    })();\n    return AjaxObservable;\n}(Observable_1.Observable));\nexports.AjaxObservable = AjaxObservable;\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar AjaxSubscriber = (function (_super) {\n    __extends(AjaxSubscriber, _super);\n    function AjaxSubscriber(destination, request) {\n        _super.call(this, destination);\n        this.request = request;\n        this.done = false;\n        var headers = request.headers = request.headers || {};\n        // force CORS if requested\n        if (!request.crossDomain && !headers['X-Requested-With']) {\n            headers['X-Requested-With'] = 'XMLHttpRequest';\n        }\n        // ensure content type is set\n        if (!('Content-Type' in headers) && !(root_1.root.FormData && request.body instanceof root_1.root.FormData) && typeof request.body !== 'undefined') {\n            headers['Content-Type'] = 'application/x-www-form-urlencoded; charset=UTF-8';\n        }\n        // properly serialize body\n        request.body = this.serializeBody(request.body, request.headers['Content-Type']);\n        this.send();\n    }\n    AjaxSubscriber.prototype.next = function (e) {\n        this.done = true;\n        var _a = this, xhr = _a.xhr, request = _a.request, destination = _a.destination;\n        var response = new AjaxResponse(e, xhr, request);\n        destination.next(response);\n    };\n    AjaxSubscriber.prototype.send = function () {\n        var _a = this, request = _a.request, _b = _a.request, user = _b.user, method = _b.method, url = _b.url, async = _b.async, password = _b.password, headers = _b.headers, body = _b.body;\n        var createXHR = request.createXHR;\n        var xhr = tryCatch_1.tryCatch(createXHR).call(request);\n        if (xhr === errorObject_1.errorObject) {\n            this.error(errorObject_1.errorObject.e);\n        }\n        else {\n            this.xhr = xhr;\n            // open XHR first\n            var result = void 0;\n            if (user) {\n                result = tryCatch_1.tryCatch(xhr.open).call(xhr, method, url, async, user, password);\n            }\n            else {\n                result = tryCatch_1.tryCatch(xhr.open).call(xhr, method, url, async);\n            }\n            if (result === errorObject_1.errorObject) {\n                this.error(errorObject_1.errorObject.e);\n                return null;\n            }\n            // timeout and responseType can be set once the XHR is open\n            xhr.timeout = request.timeout;\n            xhr.responseType = request.responseType;\n            // set headers\n            this.setHeaders(xhr, headers);\n            // now set up the events\n            this.setupEvents(xhr, request);\n            // finally send the request\n            if (body) {\n                xhr.send(body);\n            }\n            else {\n                xhr.send();\n            }\n        }\n        return xhr;\n    };\n    AjaxSubscriber.prototype.serializeBody = function (body, contentType) {\n        if (!body || typeof body === 'string') {\n            return body;\n        }\n        else if (root_1.root.FormData && body instanceof root_1.root.FormData) {\n            return body;\n        }\n        if (contentType) {\n            var splitIndex = contentType.indexOf(';');\n            if (splitIndex !== -1) {\n                contentType = contentType.substring(0, splitIndex);\n            }\n        }\n        switch (contentType) {\n            case 'application/x-www-form-urlencoded':\n                return Object.keys(body).map(function (key) { return (encodeURI(key) + \"=\" + encodeURI(body[key])); }).join('&');\n            case 'application/json':\n                return JSON.stringify(body);\n            default:\n                return body;\n        }\n    };\n    AjaxSubscriber.prototype.setHeaders = function (xhr, headers) {\n        for (var key in headers) {\n            if (headers.hasOwnProperty(key)) {\n                xhr.setRequestHeader(key, headers[key]);\n            }\n        }\n    };\n    AjaxSubscriber.prototype.setupEvents = function (xhr, request) {\n        var progressSubscriber = request.progressSubscriber;\n        xhr.ontimeout = function xhrTimeout(e) {\n            var _a = xhrTimeout, subscriber = _a.subscriber, progressSubscriber = _a.progressSubscriber, request = _a.request;\n            if (progressSubscriber) {\n                progressSubscriber.error(e);\n            }\n            subscriber.error(new AjaxTimeoutError(this, request)); //TODO: Make betterer.\n        };\n        xhr.ontimeout.request = request;\n        xhr.ontimeout.subscriber = this;\n        xhr.ontimeout.progressSubscriber = progressSubscriber;\n        if (xhr.upload && 'withCredentials' in xhr && root_1.root.XDomainRequest) {\n            if (progressSubscriber) {\n                xhr.onprogress = function xhrProgress(e) {\n                    var progressSubscriber = xhrProgress.progressSubscriber;\n                    progressSubscriber.next(e);\n                };\n                xhr.onprogress.progressSubscriber = progressSubscriber;\n            }\n            xhr.onerror = function xhrError(e) {\n                var _a = xhrError, progressSubscriber = _a.progressSubscriber, subscriber = _a.subscriber, request = _a.request;\n                if (progressSubscriber) {\n                    progressSubscriber.error(e);\n                }\n                subscriber.error(new AjaxError('ajax error', this, request));\n            };\n            xhr.onerror.request = request;\n            xhr.onerror.subscriber = this;\n            xhr.onerror.progressSubscriber = progressSubscriber;\n        }\n        xhr.onreadystatechange = function xhrReadyStateChange(e) {\n            var _a = xhrReadyStateChange, subscriber = _a.subscriber, progressSubscriber = _a.progressSubscriber, request = _a.request;\n            if (this.readyState === 4) {\n                // normalize IE9 bug (http://bugs.jquery.com/ticket/1450)\n                var status_1 = this.status === 1223 ? 204 : this.status;\n                var response = (this.responseType === 'text' ? (this.response || this.responseText) : this.response);\n                // fix status code when it is 0 (0 status is undocumented).\n                // Occurs when accessing file resources or on Android 4.1 stock browser\n                // while retrieving files from application cache.\n                if (status_1 === 0) {\n                    status_1 = response ? 200 : 0;\n                }\n                if (200 <= status_1 && status_1 < 300) {\n                    if (progressSubscriber) {\n                        progressSubscriber.complete();\n                    }\n                    subscriber.next(e);\n                    subscriber.complete();\n                }\n                else {\n                    if (progressSubscriber) {\n                        progressSubscriber.error(e);\n                    }\n                    subscriber.error(new AjaxError('ajax error ' + status_1, this, request));\n                }\n            }\n        };\n        xhr.onreadystatechange.subscriber = this;\n        xhr.onreadystatechange.progressSubscriber = progressSubscriber;\n        xhr.onreadystatechange.request = request;\n    };\n    AjaxSubscriber.prototype.unsubscribe = function () {\n        var _a = this, done = _a.done, xhr = _a.xhr;\n        if (!done && xhr && xhr.readyState !== 4) {\n            xhr.abort();\n        }\n        _super.prototype.unsubscribe.call(this);\n    };\n    return AjaxSubscriber;\n}(Subscriber_1.Subscriber));\nexports.AjaxSubscriber = AjaxSubscriber;\n/**\n * A normalized AJAX response.\n *\n * @see {@link ajax}\n *\n * @class AjaxResponse\n */\nvar AjaxResponse = (function () {\n    function AjaxResponse(originalEvent, xhr, request) {\n        this.originalEvent = originalEvent;\n        this.xhr = xhr;\n        this.request = request;\n        this.status = xhr.status;\n        this.responseType = xhr.responseType || request.responseType;\n        switch (this.responseType) {\n            case 'json':\n                if ('response' in xhr) {\n                    //IE does not support json as responseType, parse it internally\n                    this.response = xhr.responseType ? xhr.response : JSON.parse(xhr.response || xhr.responseText || 'null');\n                }\n                else {\n                    this.response = JSON.parse(xhr.responseText || 'null');\n                }\n                break;\n            case 'xml':\n                this.response = xhr.responseXML;\n                break;\n            case 'text':\n            default:\n                this.response = ('response' in xhr) ? xhr.response : xhr.responseText;\n                break;\n        }\n    }\n    return AjaxResponse;\n}());\nexports.AjaxResponse = AjaxResponse;\n/**\n * A normalized AJAX error.\n *\n * @see {@link ajax}\n *\n * @class AjaxError\n */\nvar AjaxError = (function (_super) {\n    __extends(AjaxError, _super);\n    function AjaxError(message, xhr, request) {\n        _super.call(this, message);\n        this.message = message;\n        this.xhr = xhr;\n        this.request = request;\n        this.status = xhr.status;\n    }\n    return AjaxError;\n}(Error));\nexports.AjaxError = AjaxError;\n/**\n * @see {@link ajax}\n *\n * @class AjaxTimeoutError\n */\nvar AjaxTimeoutError = (function (_super) {\n    __extends(AjaxTimeoutError, _super);\n    function AjaxTimeoutError(xhr, request) {\n        _super.call(this, 'ajax timeout', xhr, request);\n    }\n    return AjaxTimeoutError;\n}(AjaxError));\nexports.AjaxTimeoutError = AjaxTimeoutError;\n//# sourceMappingURL=AjaxObservable.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// /workspace/Energy-Consumption/~/rxjs/observable/dom/AjaxObservable.js\n// module id = 701\n// module chunks = 0 1","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar OuterSubscriber_1 = require('../OuterSubscriber');\nvar subscribeToResult_1 = require('../util/subscribeToResult');\n/**\n * Returns an Observable that emits all items emitted by the source Observable that are distinct by comparison from previous items.\n * If a comparator function is provided, then it will be called for each item to test for whether or not that value should be emitted.\n * If a comparator function is not provided, an equality check is used by default.\n * As the internal HashSet of this operator grows larger and larger, care should be taken in the domain of inputs this operator may see.\n * An optional parameter is also provided such that an Observable can be provided to queue the internal HashSet to flush the values it holds.\n * @param {function} [compare] optional comparison function called to test if an item is distinct from previous items in the source.\n * @param {Observable} [flushes] optional Observable for flushing the internal HashSet of the operator.\n * @return {Observable} an Observable that emits items from the source Observable with distinct values.\n * @method distinct\n * @owner Observable\n */\nfunction distinct(compare, flushes) {\n    return this.lift(new DistinctOperator(compare, flushes));\n}\nexports.distinct = distinct;\nvar DistinctOperator = (function () {\n    function DistinctOperator(compare, flushes) {\n        this.compare = compare;\n        this.flushes = flushes;\n    }\n    DistinctOperator.prototype.call = function (subscriber, source) {\n        return source._subscribe(new DistinctSubscriber(subscriber, this.compare, this.flushes));\n    };\n    return DistinctOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar DistinctSubscriber = (function (_super) {\n    __extends(DistinctSubscriber, _super);\n    function DistinctSubscriber(destination, compare, flushes) {\n        _super.call(this, destination);\n        this.values = [];\n        if (typeof compare === 'function') {\n            this.compare = compare;\n        }\n        if (flushes) {\n            this.add(subscribeToResult_1.subscribeToResult(this, flushes));\n        }\n    }\n    DistinctSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {\n        this.values.length = 0;\n    };\n    DistinctSubscriber.prototype.notifyError = function (error, innerSub) {\n        this._error(error);\n    };\n    DistinctSubscriber.prototype._next = function (value) {\n        var found = false;\n        var values = this.values;\n        var len = values.length;\n        try {\n            for (var i = 0; i < len; i++) {\n                if (this.compare(values[i], value)) {\n                    found = true;\n                    return;\n                }\n            }\n        }\n        catch (err) {\n            this.destination.error(err);\n            return;\n        }\n        this.values.push(value);\n        this.destination.next(value);\n    };\n    DistinctSubscriber.prototype.compare = function (x, y) {\n        return x === y;\n    };\n    return DistinctSubscriber;\n}(OuterSubscriber_1.OuterSubscriber));\nexports.DistinctSubscriber = DistinctSubscriber;\n//# sourceMappingURL=distinct.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// /workspace/Energy-Consumption/~/rxjs/operator/distinct.js\n// module id = 702\n// module chunks = 0 1","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Subscriber_1 = require('../Subscriber');\nvar tryCatch_1 = require('../util/tryCatch');\nvar errorObject_1 = require('../util/errorObject');\n/**\n * Returns an Observable that emits all items emitted by the source Observable that are distinct by comparison from the previous item.\n * If a comparator function is provided, then it will be called for each item to test for whether or not that value should be emitted.\n * If a comparator function is not provided, an equality check is used by default.\n * @param {function} [compare] optional comparison function called to test if an item is distinct from the previous item in the source.\n * @return {Observable} an Observable that emits items from the source Observable with distinct values.\n * @method distinctUntilChanged\n * @owner Observable\n */\nfunction distinctUntilChanged(compare, keySelector) {\n    return this.lift(new DistinctUntilChangedOperator(compare, keySelector));\n}\nexports.distinctUntilChanged = distinctUntilChanged;\nvar DistinctUntilChangedOperator = (function () {\n    function DistinctUntilChangedOperator(compare, keySelector) {\n        this.compare = compare;\n        this.keySelector = keySelector;\n    }\n    DistinctUntilChangedOperator.prototype.call = function (subscriber, source) {\n        return source._subscribe(new DistinctUntilChangedSubscriber(subscriber, this.compare, this.keySelector));\n    };\n    return DistinctUntilChangedOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar DistinctUntilChangedSubscriber = (function (_super) {\n    __extends(DistinctUntilChangedSubscriber, _super);\n    function DistinctUntilChangedSubscriber(destination, compare, keySelector) {\n        _super.call(this, destination);\n        this.keySelector = keySelector;\n        this.hasKey = false;\n        if (typeof compare === 'function') {\n            this.compare = compare;\n        }\n    }\n    DistinctUntilChangedSubscriber.prototype.compare = function (x, y) {\n        return x === y;\n    };\n    DistinctUntilChangedSubscriber.prototype._next = function (value) {\n        var keySelector = this.keySelector;\n        var key = value;\n        if (keySelector) {\n            key = tryCatch_1.tryCatch(this.keySelector)(value);\n            if (key === errorObject_1.errorObject) {\n                return this.destination.error(errorObject_1.errorObject.e);\n            }\n        }\n        var result = false;\n        if (this.hasKey) {\n            result = tryCatch_1.tryCatch(this.compare)(this.key, key);\n            if (result === errorObject_1.errorObject) {\n                return this.destination.error(errorObject_1.errorObject.e);\n            }\n        }\n        else {\n            this.hasKey = true;\n        }\n        if (Boolean(result) === false) {\n            this.key = key;\n            this.destination.next(value);\n        }\n    };\n    return DistinctUntilChangedSubscriber;\n}(Subscriber_1.Subscriber));\n//# sourceMappingURL=distinctUntilChanged.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// /workspace/Energy-Consumption/~/rxjs/operator/distinctUntilChanged.js\n// module id = 703\n// module chunks = 0 1","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Subscriber_1 = require('../Subscriber');\n/**\n * Emits only the first value emitted by the source Observable that meets some\n * condition.\n *\n * <span class=\"informal\">Finds the first value that passes some test and emits\n * that.</span>\n *\n * <img src=\"./img/find.png\" width=\"100%\">\n *\n * `find` searches for the first item in the source Observable that matches the\n * specified condition embodied by the `predicate`, and returns the first\n * occurrence in the source. Unlike {@link first}, the `predicate` is required\n * in `find`, and does not emit an error if a valid value is not found.\n *\n * @example <caption>Find and emit the first click that happens on a DIV element</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.find(ev => ev.target.tagName === 'DIV');\n * result.subscribe(x => console.log(x));\n *\n * @see {@link filter}\n * @see {@link first}\n * @see {@link findIndex}\n * @see {@link take}\n *\n * @param {function(value: T, index: number, source: Observable<T>): boolean} predicate\n * A function called with each item to test for condition matching.\n * @param {any} [thisArg] An optional argument to determine the value of `this`\n * in the `predicate` function.\n * @return {Observable<T>} An Observable of the first item that matches the\n * condition.\n * @method find\n * @owner Observable\n */\nfunction find(predicate, thisArg) {\n    if (typeof predicate !== 'function') {\n        throw new TypeError('predicate is not a function');\n    }\n    return this.lift(new FindValueOperator(predicate, this, false, thisArg));\n}\nexports.find = find;\nvar FindValueOperator = (function () {\n    function FindValueOperator(predicate, source, yieldIndex, thisArg) {\n        this.predicate = predicate;\n        this.source = source;\n        this.yieldIndex = yieldIndex;\n        this.thisArg = thisArg;\n    }\n    FindValueOperator.prototype.call = function (observer, source) {\n        return source._subscribe(new FindValueSubscriber(observer, this.predicate, this.source, this.yieldIndex, this.thisArg));\n    };\n    return FindValueOperator;\n}());\nexports.FindValueOperator = FindValueOperator;\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar FindValueSubscriber = (function (_super) {\n    __extends(FindValueSubscriber, _super);\n    function FindValueSubscriber(destination, predicate, source, yieldIndex, thisArg) {\n        _super.call(this, destination);\n        this.predicate = predicate;\n        this.source = source;\n        this.yieldIndex = yieldIndex;\n        this.thisArg = thisArg;\n        this.index = 0;\n    }\n    FindValueSubscriber.prototype.notifyComplete = function (value) {\n        var destination = this.destination;\n        destination.next(value);\n        destination.complete();\n    };\n    FindValueSubscriber.prototype._next = function (value) {\n        var _a = this, predicate = _a.predicate, thisArg = _a.thisArg;\n        var index = this.index++;\n        try {\n            var result = predicate.call(thisArg || this, value, index, this.source);\n            if (result) {\n                this.notifyComplete(this.yieldIndex ? index : value);\n            }\n        }\n        catch (err) {\n            this.destination.error(err);\n        }\n    };\n    FindValueSubscriber.prototype._complete = function () {\n        this.notifyComplete(this.yieldIndex ? -1 : undefined);\n    };\n    return FindValueSubscriber;\n}(Subscriber_1.Subscriber));\nexports.FindValueSubscriber = FindValueSubscriber;\n//# sourceMappingURL=find.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// /workspace/Energy-Consumption/~/rxjs/operator/find.js\n// module id = 704\n// module chunks = 0 1","\"use strict\";\nvar ArrayObservable_1 = require('../observable/ArrayObservable');\nvar mergeAll_1 = require('./mergeAll');\nvar isScheduler_1 = require('../util/isScheduler');\n/**\n * Creates an output Observable which concurrently emits all values from every\n * given input Observable.\n *\n * <span class=\"informal\">Flattens multiple Observables together by blending\n * their values into one Observable.</span>\n *\n * <img src=\"./img/merge.png\" width=\"100%\">\n *\n * `merge` subscribes to each given input Observable (either the source or an\n * Observable given as argument), and simply forwards (without doing any\n * transformation) all the values from all the input Observables to the output\n * Observable. The output Observable only completes once all input Observables\n * have completed. Any error delivered by an input Observable will be immediately\n * emitted on the output Observable.\n *\n * @example <caption>Merge together two Observables: 1s interval and clicks</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var timer = Rx.Observable.interval(1000);\n * var clicksOrTimer = clicks.merge(timer);\n * clicksOrTimer.subscribe(x => console.log(x));\n *\n * @example <caption>Merge together 3 Observables, but only 2 run concurrently</caption>\n * var timer1 = Rx.Observable.interval(1000).take(10);\n * var timer2 = Rx.Observable.interval(2000).take(6);\n * var timer3 = Rx.Observable.interval(500).take(10);\n * var concurrent = 2; // the argument\n * var merged = timer1.merge(timer2, timer3, concurrent);\n * merged.subscribe(x => console.log(x));\n *\n * @see {@link mergeAll}\n * @see {@link mergeMap}\n * @see {@link mergeMapTo}\n * @see {@link mergeScan}\n *\n * @param {Observable} other An input Observable to merge with the source\n * Observable. More than one input Observables may be given as argument.\n * @param {number} [concurrent=Number.POSITIVE_INFINITY] Maximum number of input\n * Observables being subscribed to concurrently.\n * @param {Scheduler} [scheduler=null] The Scheduler to use for managing\n * concurrency of input Observables.\n * @return {Observable} an Observable that emits items that are the result of\n * every input Observable.\n * @method merge\n * @owner Observable\n */\nfunction merge() {\n    var observables = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        observables[_i - 0] = arguments[_i];\n    }\n    observables.unshift(this);\n    return mergeStatic.apply(this, observables);\n}\nexports.merge = merge;\n/* tslint:enable:max-line-length */\n/**\n * Creates an output Observable which concurrently emits all values from every\n * given input Observable.\n *\n * <span class=\"informal\">Flattens multiple Observables together by blending\n * their values into one Observable.</span>\n *\n * <img src=\"./img/merge.png\" width=\"100%\">\n *\n * `merge` subscribes to each given input Observable (as arguments), and simply\n * forwards (without doing any transformation) all the values from all the input\n * Observables to the output Observable. The output Observable only completes\n * once all input Observables have completed. Any error delivered by an input\n * Observable will be immediately emitted on the output Observable.\n *\n * @example <caption>Merge together two Observables: 1s interval and clicks</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var timer = Rx.Observable.interval(1000);\n * var clicksOrTimer = Rx.Observable.merge(clicks, timer);\n * clicksOrTimer.subscribe(x => console.log(x));\n *\n * @example <caption>Merge together 3 Observables, but only 2 run concurrently</caption>\n * var timer1 = Rx.Observable.interval(1000).take(10);\n * var timer2 = Rx.Observable.interval(2000).take(6);\n * var timer3 = Rx.Observable.interval(500).take(10);\n * var concurrent = 2; // the argument\n * var merged = Rx.Observable.merge(timer1, timer2, timer3, concurrent);\n * merged.subscribe(x => console.log(x));\n *\n * @see {@link mergeAll}\n * @see {@link mergeMap}\n * @see {@link mergeMapTo}\n * @see {@link mergeScan}\n *\n * @param {Observable} input1 An input Observable to merge with others.\n * @param {Observable} input2 An input Observable to merge with others.\n * @param {number} [concurrent=Number.POSITIVE_INFINITY] Maximum number of input\n * Observables being subscribed to concurrently.\n * @param {Scheduler} [scheduler=null] The Scheduler to use for managing\n * concurrency of input Observables.\n * @return {Observable} an Observable that emits items that are the result of\n * every input Observable.\n * @static true\n * @name merge\n * @owner Observable\n */\nfunction mergeStatic() {\n    var observables = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        observables[_i - 0] = arguments[_i];\n    }\n    var concurrent = Number.POSITIVE_INFINITY;\n    var scheduler = null;\n    var last = observables[observables.length - 1];\n    if (isScheduler_1.isScheduler(last)) {\n        scheduler = observables.pop();\n        if (observables.length > 1 && typeof observables[observables.length - 1] === 'number') {\n            concurrent = observables.pop();\n        }\n    }\n    else if (typeof last === 'number') {\n        concurrent = observables.pop();\n    }\n    if (observables.length === 1) {\n        return observables[0];\n    }\n    return new ArrayObservable_1.ArrayObservable(observables, scheduler).lift(new mergeAll_1.MergeAllOperator(concurrent));\n}\nexports.mergeStatic = mergeStatic;\n//# sourceMappingURL=merge.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// /workspace/Energy-Consumption/~/rxjs/operator/merge.js\n// module id = 705\n// module chunks = 0 1","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar OuterSubscriber_1 = require('../OuterSubscriber');\nvar subscribeToResult_1 = require('../util/subscribeToResult');\n/**\n * Projects each source value to the same Observable which is merged multiple\n * times in the output Observable.\n *\n * <span class=\"informal\">It's like {@link mergeMap}, but maps each value always\n * to the same inner Observable.</span>\n *\n * <img src=\"./img/mergeMapTo.png\" width=\"100%\">\n *\n * Maps each source value to the given Observable `innerObservable` regardless\n * of the source value, and then merges those resulting Observables into one\n * single Observable, which is the output Observable.\n *\n * @example <caption>For each click event, start an interval Observable ticking every 1 second</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.mergeMapTo(Rx.Observable.interval(1000));\n * result.subscribe(x => console.log(x));\n *\n * @see {@link concatMapTo}\n * @see {@link merge}\n * @see {@link mergeAll}\n * @see {@link mergeMap}\n * @see {@link mergeScan}\n * @see {@link switchMapTo}\n *\n * @param {Observable} innerObservable An Observable to replace each value from\n * the source Observable.\n * @param {function(outerValue: T, innerValue: I, outerIndex: number, innerIndex: number): any} [resultSelector]\n * A function to produce the value on the output Observable based on the values\n * and the indices of the source (outer) emission and the inner Observable\n * emission. The arguments passed to this function are:\n * - `outerValue`: the value that came from the source\n * - `innerValue`: the value that came from the projected Observable\n * - `outerIndex`: the \"index\" of the value that came from the source\n * - `innerIndex`: the \"index\" of the value from the projected Observable\n * @param {number} [concurrent=Number.POSITIVE_INFINITY] Maximum number of input\n * Observables being subscribed to concurrently.\n * @return {Observable} An Observable that emits items from the given\n * `innerObservable` (and optionally transformed through `resultSelector`) every\n * time a value is emitted on the source Observable.\n * @method mergeMapTo\n * @owner Observable\n */\nfunction mergeMapTo(innerObservable, resultSelector, concurrent) {\n    if (concurrent === void 0) { concurrent = Number.POSITIVE_INFINITY; }\n    if (typeof resultSelector === 'number') {\n        concurrent = resultSelector;\n        resultSelector = null;\n    }\n    return this.lift(new MergeMapToOperator(innerObservable, resultSelector, concurrent));\n}\nexports.mergeMapTo = mergeMapTo;\n// TODO: Figure out correct signature here: an Operator<Observable<T>, R>\n//       needs to implement call(observer: Subscriber<R>): Subscriber<Observable<T>>\nvar MergeMapToOperator = (function () {\n    function MergeMapToOperator(ish, resultSelector, concurrent) {\n        if (concurrent === void 0) { concurrent = Number.POSITIVE_INFINITY; }\n        this.ish = ish;\n        this.resultSelector = resultSelector;\n        this.concurrent = concurrent;\n    }\n    MergeMapToOperator.prototype.call = function (observer, source) {\n        return source._subscribe(new MergeMapToSubscriber(observer, this.ish, this.resultSelector, this.concurrent));\n    };\n    return MergeMapToOperator;\n}());\nexports.MergeMapToOperator = MergeMapToOperator;\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar MergeMapToSubscriber = (function (_super) {\n    __extends(MergeMapToSubscriber, _super);\n    function MergeMapToSubscriber(destination, ish, resultSelector, concurrent) {\n        if (concurrent === void 0) { concurrent = Number.POSITIVE_INFINITY; }\n        _super.call(this, destination);\n        this.ish = ish;\n        this.resultSelector = resultSelector;\n        this.concurrent = concurrent;\n        this.hasCompleted = false;\n        this.buffer = [];\n        this.active = 0;\n        this.index = 0;\n    }\n    MergeMapToSubscriber.prototype._next = function (value) {\n        if (this.active < this.concurrent) {\n            var resultSelector = this.resultSelector;\n            var index = this.index++;\n            var ish = this.ish;\n            var destination = this.destination;\n            this.active++;\n            this._innerSub(ish, destination, resultSelector, value, index);\n        }\n        else {\n            this.buffer.push(value);\n        }\n    };\n    MergeMapToSubscriber.prototype._innerSub = function (ish, destination, resultSelector, value, index) {\n        this.add(subscribeToResult_1.subscribeToResult(this, ish, value, index));\n    };\n    MergeMapToSubscriber.prototype._complete = function () {\n        this.hasCompleted = true;\n        if (this.active === 0 && this.buffer.length === 0) {\n            this.destination.complete();\n        }\n    };\n    MergeMapToSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {\n        var _a = this, resultSelector = _a.resultSelector, destination = _a.destination;\n        if (resultSelector) {\n            this.trySelectResult(outerValue, innerValue, outerIndex, innerIndex);\n        }\n        else {\n            destination.next(innerValue);\n        }\n    };\n    MergeMapToSubscriber.prototype.trySelectResult = function (outerValue, innerValue, outerIndex, innerIndex) {\n        var _a = this, resultSelector = _a.resultSelector, destination = _a.destination;\n        var result;\n        try {\n            result = resultSelector(outerValue, innerValue, outerIndex, innerIndex);\n        }\n        catch (err) {\n            destination.error(err);\n            return;\n        }\n        destination.next(result);\n    };\n    MergeMapToSubscriber.prototype.notifyError = function (err) {\n        this.destination.error(err);\n    };\n    MergeMapToSubscriber.prototype.notifyComplete = function (innerSub) {\n        var buffer = this.buffer;\n        this.remove(innerSub);\n        this.active--;\n        if (buffer.length > 0) {\n            this._next(buffer.shift());\n        }\n        else if (this.active === 0 && this.hasCompleted) {\n            this.destination.complete();\n        }\n    };\n    return MergeMapToSubscriber;\n}(OuterSubscriber_1.OuterSubscriber));\nexports.MergeMapToSubscriber = MergeMapToSubscriber;\n//# sourceMappingURL=mergeMapTo.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// /workspace/Energy-Consumption/~/rxjs/operator/mergeMapTo.js\n// module id = 706\n// module chunks = 0 1","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar FromObservable_1 = require('../observable/FromObservable');\nvar isArray_1 = require('../util/isArray');\nvar OuterSubscriber_1 = require('../OuterSubscriber');\nvar subscribeToResult_1 = require('../util/subscribeToResult');\nfunction onErrorResumeNext() {\n    var nextSources = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        nextSources[_i - 0] = arguments[_i];\n    }\n    if (nextSources.length === 1 && isArray_1.isArray(nextSources[0])) {\n        nextSources = nextSources[0];\n    }\n    return this.lift(new OnErrorResumeNextOperator(nextSources));\n}\nexports.onErrorResumeNext = onErrorResumeNext;\n/* tslint:enable:max-line-length */\nfunction onErrorResumeNextStatic() {\n    var nextSources = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        nextSources[_i - 0] = arguments[_i];\n    }\n    var source = null;\n    if (nextSources.length === 1 && isArray_1.isArray(nextSources[0])) {\n        nextSources = nextSources[0];\n    }\n    source = nextSources.shift();\n    return new FromObservable_1.FromObservable(source, null).lift(new OnErrorResumeNextOperator(nextSources));\n}\nexports.onErrorResumeNextStatic = onErrorResumeNextStatic;\nvar OnErrorResumeNextOperator = (function () {\n    function OnErrorResumeNextOperator(nextSources) {\n        this.nextSources = nextSources;\n    }\n    OnErrorResumeNextOperator.prototype.call = function (subscriber, source) {\n        return source._subscribe(new OnErrorResumeNextSubscriber(subscriber, this.nextSources));\n    };\n    return OnErrorResumeNextOperator;\n}());\nvar OnErrorResumeNextSubscriber = (function (_super) {\n    __extends(OnErrorResumeNextSubscriber, _super);\n    function OnErrorResumeNextSubscriber(destination, nextSources) {\n        _super.call(this, destination);\n        this.destination = destination;\n        this.nextSources = nextSources;\n    }\n    OnErrorResumeNextSubscriber.prototype.notifyError = function (error, innerSub) {\n        this.subscribeToNextSource();\n    };\n    OnErrorResumeNextSubscriber.prototype.notifyComplete = function (innerSub) {\n        this.subscribeToNextSource();\n    };\n    OnErrorResumeNextSubscriber.prototype._error = function (err) {\n        this.subscribeToNextSource();\n    };\n    OnErrorResumeNextSubscriber.prototype._complete = function () {\n        this.subscribeToNextSource();\n    };\n    OnErrorResumeNextSubscriber.prototype.subscribeToNextSource = function () {\n        var next = this.nextSources.shift();\n        if (next) {\n            this.add(subscribeToResult_1.subscribeToResult(this, next));\n        }\n        else {\n            this.destination.complete();\n        }\n    };\n    return OnErrorResumeNextSubscriber;\n}(OuterSubscriber_1.OuterSubscriber));\n//# sourceMappingURL=onErrorResumeNext.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// /workspace/Energy-Consumption/~/rxjs/operator/onErrorResumeNext.js\n// module id = 707\n// module chunks = 0 1","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar isArray_1 = require('../util/isArray');\nvar ArrayObservable_1 = require('../observable/ArrayObservable');\nvar OuterSubscriber_1 = require('../OuterSubscriber');\nvar subscribeToResult_1 = require('../util/subscribeToResult');\n/**\n * Returns an Observable that mirrors the first source Observable to emit an item\n * from the combination of this Observable and supplied Observables\n * @param {...Observables} ...observables sources used to race for which Observable emits first.\n * @return {Observable} an Observable that mirrors the output of the first Observable to emit an item.\n * @method race\n * @owner Observable\n */\nfunction race() {\n    var observables = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        observables[_i - 0] = arguments[_i];\n    }\n    // if the only argument is an array, it was most likely called with\n    // `pair([obs1, obs2, ...])`\n    if (observables.length === 1 && isArray_1.isArray(observables[0])) {\n        observables = observables[0];\n    }\n    observables.unshift(this);\n    return raceStatic.apply(this, observables);\n}\nexports.race = race;\nfunction raceStatic() {\n    var observables = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        observables[_i - 0] = arguments[_i];\n    }\n    // if the only argument is an array, it was most likely called with\n    // `pair([obs1, obs2, ...])`\n    if (observables.length === 1) {\n        if (isArray_1.isArray(observables[0])) {\n            observables = observables[0];\n        }\n        else {\n            return observables[0];\n        }\n    }\n    return new ArrayObservable_1.ArrayObservable(observables).lift(new RaceOperator());\n}\nexports.raceStatic = raceStatic;\nvar RaceOperator = (function () {\n    function RaceOperator() {\n    }\n    RaceOperator.prototype.call = function (subscriber, source) {\n        return source._subscribe(new RaceSubscriber(subscriber));\n    };\n    return RaceOperator;\n}());\nexports.RaceOperator = RaceOperator;\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar RaceSubscriber = (function (_super) {\n    __extends(RaceSubscriber, _super);\n    function RaceSubscriber(destination) {\n        _super.call(this, destination);\n        this.hasFirst = false;\n        this.observables = [];\n        this.subscriptions = [];\n    }\n    RaceSubscriber.prototype._next = function (observable) {\n        this.observables.push(observable);\n    };\n    RaceSubscriber.prototype._complete = function () {\n        var observables = this.observables;\n        var len = observables.length;\n        if (len === 0) {\n            this.destination.complete();\n        }\n        else {\n            for (var i = 0; i < len; i++) {\n                var observable = observables[i];\n                var subscription = subscribeToResult_1.subscribeToResult(this, observable, observable, i);\n                if (this.subscriptions) {\n                    this.subscriptions.push(subscription);\n                    this.add(subscription);\n                }\n            }\n            this.observables = null;\n        }\n    };\n    RaceSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {\n        if (!this.hasFirst) {\n            this.hasFirst = true;\n            for (var i = 0; i < this.subscriptions.length; i++) {\n                if (i !== outerIndex) {\n                    var subscription = this.subscriptions[i];\n                    subscription.unsubscribe();\n                    this.remove(subscription);\n                }\n            }\n            this.subscriptions = null;\n        }\n        this.destination.next(innerValue);\n    };\n    return RaceSubscriber;\n}(OuterSubscriber_1.OuterSubscriber));\nexports.RaceSubscriber = RaceSubscriber;\n//# sourceMappingURL=race.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// /workspace/Energy-Consumption/~/rxjs/operator/race.js\n// module id = 708\n// module chunks = 0 1","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Subscriber_1 = require('../Subscriber');\nvar async_1 = require('../scheduler/async');\n/**\n * @param scheduler\n * @return {Observable<TimeInterval<any>>|WebSocketSubject<T>|Observable<T>}\n * @method timeInterval\n * @owner Observable\n */\nfunction timeInterval(scheduler) {\n    if (scheduler === void 0) { scheduler = async_1.async; }\n    return this.lift(new TimeIntervalOperator(scheduler));\n}\nexports.timeInterval = timeInterval;\nvar TimeInterval = (function () {\n    function TimeInterval(value, interval) {\n        this.value = value;\n        this.interval = interval;\n    }\n    return TimeInterval;\n}());\nexports.TimeInterval = TimeInterval;\n;\nvar TimeIntervalOperator = (function () {\n    function TimeIntervalOperator(scheduler) {\n        this.scheduler = scheduler;\n    }\n    TimeIntervalOperator.prototype.call = function (observer, source) {\n        return source._subscribe(new TimeIntervalSubscriber(observer, this.scheduler));\n    };\n    return TimeIntervalOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar TimeIntervalSubscriber = (function (_super) {\n    __extends(TimeIntervalSubscriber, _super);\n    function TimeIntervalSubscriber(destination, scheduler) {\n        _super.call(this, destination);\n        this.scheduler = scheduler;\n        this.lastTime = 0;\n        this.lastTime = scheduler.now();\n    }\n    TimeIntervalSubscriber.prototype._next = function (value) {\n        var now = this.scheduler.now();\n        var span = now - this.lastTime;\n        this.lastTime = now;\n        this.destination.next(new TimeInterval(value, span));\n    };\n    return TimeIntervalSubscriber;\n}(Subscriber_1.Subscriber));\n//# sourceMappingURL=timeInterval.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// /workspace/Energy-Consumption/~/rxjs/operator/timeInterval.js\n// module id = 709\n// module chunks = 0 1","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Subscriber_1 = require('../Subscriber');\nvar async_1 = require('../scheduler/async');\n/**\n * @param scheduler\n * @return {Observable<Timestamp<any>>|WebSocketSubject<T>|Observable<T>}\n * @method timestamp\n * @owner Observable\n */\nfunction timestamp(scheduler) {\n    if (scheduler === void 0) { scheduler = async_1.async; }\n    return this.lift(new TimestampOperator(scheduler));\n}\nexports.timestamp = timestamp;\nvar Timestamp = (function () {\n    function Timestamp(value, timestamp) {\n        this.value = value;\n        this.timestamp = timestamp;\n    }\n    return Timestamp;\n}());\nexports.Timestamp = Timestamp;\n;\nvar TimestampOperator = (function () {\n    function TimestampOperator(scheduler) {\n        this.scheduler = scheduler;\n    }\n    TimestampOperator.prototype.call = function (observer, source) {\n        return source._subscribe(new TimestampSubscriber(observer, this.scheduler));\n    };\n    return TimestampOperator;\n}());\nvar TimestampSubscriber = (function (_super) {\n    __extends(TimestampSubscriber, _super);\n    function TimestampSubscriber(destination, scheduler) {\n        _super.call(this, destination);\n        this.scheduler = scheduler;\n    }\n    TimestampSubscriber.prototype._next = function (value) {\n        var now = this.scheduler.now();\n        this.destination.next(new Timestamp(value, now));\n    };\n    return TimestampSubscriber;\n}(Subscriber_1.Subscriber));\n//# sourceMappingURL=timestamp.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// /workspace/Energy-Consumption/~/rxjs/operator/timestamp.js\n// module id = 710\n// module chunks = 0 1","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar AsyncAction_1 = require('./AsyncAction');\nvar AsyncScheduler_1 = require('./AsyncScheduler');\nvar VirtualTimeScheduler = (function (_super) {\n    __extends(VirtualTimeScheduler, _super);\n    function VirtualTimeScheduler(SchedulerAction, maxFrames) {\n        var _this = this;\n        if (SchedulerAction === void 0) { SchedulerAction = VirtualAction; }\n        if (maxFrames === void 0) { maxFrames = Number.POSITIVE_INFINITY; }\n        _super.call(this, SchedulerAction, function () { return _this.frame; });\n        this.maxFrames = maxFrames;\n        this.frame = 0;\n        this.index = -1;\n    }\n    /**\n     * Prompt the Scheduler to execute all of its queued actions, therefore\n     * clearing its queue.\n     * @return {void}\n     */\n    VirtualTimeScheduler.prototype.flush = function () {\n        var _a = this, actions = _a.actions, maxFrames = _a.maxFrames;\n        var error, action;\n        while ((action = actions.shift()) && (this.frame = action.delay) <= maxFrames) {\n            if (error = action.execute(action.state, action.delay)) {\n                break;\n            }\n        }\n        if (error) {\n            while (action = actions.shift()) {\n                action.unsubscribe();\n            }\n            throw error;\n        }\n    };\n    VirtualTimeScheduler.frameTimeFactor = 10;\n    return VirtualTimeScheduler;\n}(AsyncScheduler_1.AsyncScheduler));\nexports.VirtualTimeScheduler = VirtualTimeScheduler;\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar VirtualAction = (function (_super) {\n    __extends(VirtualAction, _super);\n    function VirtualAction(scheduler, work, index) {\n        if (index === void 0) { index = scheduler.index += 1; }\n        _super.call(this, scheduler, work);\n        this.scheduler = scheduler;\n        this.work = work;\n        this.index = index;\n        this.index = scheduler.index = index;\n    }\n    VirtualAction.prototype.schedule = function (state, delay) {\n        if (delay === void 0) { delay = 0; }\n        return !this.id ?\n            _super.prototype.schedule.call(this, state, delay) : this.add(new VirtualAction(this.scheduler, this.work)).schedule(state, delay);\n    };\n    VirtualAction.prototype.requestAsyncId = function (scheduler, id, delay) {\n        if (delay === void 0) { delay = 0; }\n        this.delay = scheduler.frame + delay;\n        var actions = scheduler.actions;\n        actions.push(this);\n        actions.sort(VirtualAction.sortActions);\n        return true;\n    };\n    VirtualAction.prototype.recycleAsyncId = function (scheduler, id, delay) {\n        if (delay === void 0) { delay = 0; }\n        return undefined;\n    };\n    VirtualAction.sortActions = function (a, b) {\n        if (a.delay === b.delay) {\n            if (a.index === b.index) {\n                return 0;\n            }\n            else if (a.index > b.index) {\n                return 1;\n            }\n            else {\n                return -1;\n            }\n        }\n        else if (a.delay > b.delay) {\n            return 1;\n        }\n        else {\n            return -1;\n        }\n    };\n    return VirtualAction;\n}(AsyncAction_1.AsyncAction));\nexports.VirtualAction = VirtualAction;\n//# sourceMappingURL=VirtualTimeScheduler.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// /workspace/Energy-Consumption/~/rxjs/scheduler/VirtualTimeScheduler.js\n// module id = 711\n// module chunks = 0 1","\"use strict\";\nvar AsapAction_1 = require('./AsapAction');\nvar AsapScheduler_1 = require('./AsapScheduler');\nexports.asap = new AsapScheduler_1.AsapScheduler(AsapAction_1.AsapAction);\n//# sourceMappingURL=asap.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// /workspace/Energy-Consumption/~/rxjs/scheduler/asap.js\n// module id = 712\n// module chunks = 0 1","\"use strict\";\nvar QueueAction_1 = require('./QueueAction');\nvar QueueScheduler_1 = require('./QueueScheduler');\nexports.queue = new QueueScheduler_1.QueueScheduler(QueueAction_1.QueueAction);\n//# sourceMappingURL=queue.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// /workspace/Energy-Consumption/~/rxjs/scheduler/queue.js\n// module id = 713\n// module chunks = 0 1","\"use strict\";\nvar SubscriptionLog = (function () {\n    function SubscriptionLog(subscribedFrame, unsubscribedFrame) {\n        if (unsubscribedFrame === void 0) { unsubscribedFrame = Number.POSITIVE_INFINITY; }\n        this.subscribedFrame = subscribedFrame;\n        this.unsubscribedFrame = unsubscribedFrame;\n    }\n    return SubscriptionLog;\n}());\nexports.SubscriptionLog = SubscriptionLog;\n//# sourceMappingURL=SubscriptionLog.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// /workspace/Energy-Consumption/~/rxjs/testing/SubscriptionLog.js\n// module id = 714\n// module chunks = 0 1","\"use strict\";\nvar SubscriptionLog_1 = require('./SubscriptionLog');\nvar SubscriptionLoggable = (function () {\n    function SubscriptionLoggable() {\n        this.subscriptions = [];\n    }\n    SubscriptionLoggable.prototype.logSubscribedFrame = function () {\n        this.subscriptions.push(new SubscriptionLog_1.SubscriptionLog(this.scheduler.now()));\n        return this.subscriptions.length - 1;\n    };\n    SubscriptionLoggable.prototype.logUnsubscribedFrame = function (index) {\n        var subscriptionLogs = this.subscriptions;\n        var oldSubscriptionLog = subscriptionLogs[index];\n        subscriptionLogs[index] = new SubscriptionLog_1.SubscriptionLog(oldSubscriptionLog.subscribedFrame, this.scheduler.now());\n    };\n    return SubscriptionLoggable;\n}());\nexports.SubscriptionLoggable = SubscriptionLoggable;\n//# sourceMappingURL=SubscriptionLoggable.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// /workspace/Energy-Consumption/~/rxjs/testing/SubscriptionLoggable.js\n// module id = 715\n// module chunks = 0 1","\"use strict\";\nfunction applyMixins(derivedCtor, baseCtors) {\n    for (var i = 0, len = baseCtors.length; i < len; i++) {\n        var baseCtor = baseCtors[i];\n        var propertyKeys = Object.getOwnPropertyNames(baseCtor.prototype);\n        for (var j = 0, len2 = propertyKeys.length; j < len2; j++) {\n            var name_1 = propertyKeys[j];\n            derivedCtor.prototype[name_1] = baseCtor.prototype[name_1];\n        }\n    }\n}\nexports.applyMixins = applyMixins;\n//# sourceMappingURL=applyMixins.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// /workspace/Energy-Consumption/~/rxjs/util/applyMixins.js\n// module id = 716\n// module chunks = 0 1","\"use strict\";\n/* tslint:disable:no-empty */\nfunction noop() { }\nexports.noop = noop;\n//# sourceMappingURL=noop.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// /workspace/Energy-Consumption/~/rxjs/util/noop.js\n// module id = 717\n// module chunks = 0 1","\"use strict\";\n/* tslint:disable:no-unused-variable */\n// Subject imported before Observable to bypass circular dependency issue since\n// Subject extends Observable and Observable references Subject in it's\n// definition\nvar Subject_1 = require('./Subject');\nexports.Subject = Subject_1.Subject;\n/* tslint:enable:no-unused-variable */\nvar Observable_1 = require('./Observable');\nexports.Observable = Observable_1.Observable;\n// statics\n/* tslint:disable:no-use-before-declare */\nrequire('./add/observable/bindCallback');\nrequire('./add/observable/bindNodeCallback');\nrequire('./add/observable/combineLatest');\nrequire('./add/observable/concat');\nrequire('./add/observable/defer');\nrequire('./add/observable/empty');\nrequire('./add/observable/forkJoin');\nrequire('./add/observable/from');\nrequire('./add/observable/fromEvent');\nrequire('./add/observable/fromEventPattern');\nrequire('./add/observable/fromPromise');\nrequire('./add/observable/generate');\nrequire('./add/observable/if');\nrequire('./add/observable/interval');\nrequire('./add/observable/merge');\nrequire('./add/observable/race');\nrequire('./add/observable/never');\nrequire('./add/observable/of');\nrequire('./add/observable/onErrorResumeNext');\nrequire('./add/observable/pairs');\nrequire('./add/observable/range');\nrequire('./add/observable/using');\nrequire('./add/observable/throw');\nrequire('./add/observable/timer');\nrequire('./add/observable/zip');\n//dom\nrequire('./add/observable/dom/ajax');\nrequire('./add/observable/dom/webSocket');\n//operators\nrequire('./add/operator/buffer');\nrequire('./add/operator/bufferCount');\nrequire('./add/operator/bufferTime');\nrequire('./add/operator/bufferToggle');\nrequire('./add/operator/bufferWhen');\nrequire('./add/operator/cache');\nrequire('./add/operator/catch');\nrequire('./add/operator/combineAll');\nrequire('./add/operator/combineLatest');\nrequire('./add/operator/concat');\nrequire('./add/operator/concatAll');\nrequire('./add/operator/concatMap');\nrequire('./add/operator/concatMapTo');\nrequire('./add/operator/count');\nrequire('./add/operator/dematerialize');\nrequire('./add/operator/debounce');\nrequire('./add/operator/debounceTime');\nrequire('./add/operator/defaultIfEmpty');\nrequire('./add/operator/delay');\nrequire('./add/operator/delayWhen');\nrequire('./add/operator/distinct');\nrequire('./add/operator/distinctKey');\nrequire('./add/operator/distinctUntilChanged');\nrequire('./add/operator/distinctUntilKeyChanged');\nrequire('./add/operator/do');\nrequire('./add/operator/exhaust');\nrequire('./add/operator/exhaustMap');\nrequire('./add/operator/expand');\nrequire('./add/operator/elementAt');\nrequire('./add/operator/filter');\nrequire('./add/operator/finally');\nrequire('./add/operator/find');\nrequire('./add/operator/findIndex');\nrequire('./add/operator/first');\nrequire('./add/operator/groupBy');\nrequire('./add/operator/ignoreElements');\nrequire('./add/operator/isEmpty');\nrequire('./add/operator/audit');\nrequire('./add/operator/auditTime');\nrequire('./add/operator/last');\nrequire('./add/operator/let');\nrequire('./add/operator/every');\nrequire('./add/operator/map');\nrequire('./add/operator/mapTo');\nrequire('./add/operator/materialize');\nrequire('./add/operator/max');\nrequire('./add/operator/merge');\nrequire('./add/operator/mergeAll');\nrequire('./add/operator/mergeMap');\nrequire('./add/operator/mergeMapTo');\nrequire('./add/operator/mergeScan');\nrequire('./add/operator/min');\nrequire('./add/operator/multicast');\nrequire('./add/operator/observeOn');\nrequire('./add/operator/onErrorResumeNext');\nrequire('./add/operator/pairwise');\nrequire('./add/operator/partition');\nrequire('./add/operator/pluck');\nrequire('./add/operator/publish');\nrequire('./add/operator/publishBehavior');\nrequire('./add/operator/publishReplay');\nrequire('./add/operator/publishLast');\nrequire('./add/operator/race');\nrequire('./add/operator/reduce');\nrequire('./add/operator/repeat');\nrequire('./add/operator/repeatWhen');\nrequire('./add/operator/retry');\nrequire('./add/operator/retryWhen');\nrequire('./add/operator/sample');\nrequire('./add/operator/sampleTime');\nrequire('./add/operator/scan');\nrequire('./add/operator/sequenceEqual');\nrequire('./add/operator/share');\nrequire('./add/operator/single');\nrequire('./add/operator/skip');\nrequire('./add/operator/skipUntil');\nrequire('./add/operator/skipWhile');\nrequire('./add/operator/startWith');\nrequire('./add/operator/subscribeOn');\nrequire('./add/operator/switch');\nrequire('./add/operator/switchMap');\nrequire('./add/operator/switchMapTo');\nrequire('./add/operator/take');\nrequire('./add/operator/takeLast');\nrequire('./add/operator/takeUntil');\nrequire('./add/operator/takeWhile');\nrequire('./add/operator/throttle');\nrequire('./add/operator/throttleTime');\nrequire('./add/operator/timeInterval');\nrequire('./add/operator/timeout');\nrequire('./add/operator/timeoutWith');\nrequire('./add/operator/timestamp');\nrequire('./add/operator/toArray');\nrequire('./add/operator/toPromise');\nrequire('./add/operator/window');\nrequire('./add/operator/windowCount');\nrequire('./add/operator/windowTime');\nrequire('./add/operator/windowToggle');\nrequire('./add/operator/windowWhen');\nrequire('./add/operator/withLatestFrom');\nrequire('./add/operator/zip');\nrequire('./add/operator/zipAll');\n/* tslint:disable:no-unused-variable */\nvar Subscription_1 = require('./Subscription');\nexports.Subscription = Subscription_1.Subscription;\nvar Subscriber_1 = require('./Subscriber');\nexports.Subscriber = Subscriber_1.Subscriber;\nvar AsyncSubject_1 = require('./AsyncSubject');\nexports.AsyncSubject = AsyncSubject_1.AsyncSubject;\nvar ReplaySubject_1 = require('./ReplaySubject');\nexports.ReplaySubject = ReplaySubject_1.ReplaySubject;\nvar BehaviorSubject_1 = require('./BehaviorSubject');\nexports.BehaviorSubject = BehaviorSubject_1.BehaviorSubject;\nvar MulticastObservable_1 = require('./observable/MulticastObservable');\nexports.MulticastObservable = MulticastObservable_1.MulticastObservable;\nvar ConnectableObservable_1 = require('./observable/ConnectableObservable');\nexports.ConnectableObservable = ConnectableObservable_1.ConnectableObservable;\nvar Notification_1 = require('./Notification');\nexports.Notification = Notification_1.Notification;\nvar EmptyError_1 = require('./util/EmptyError');\nexports.EmptyError = EmptyError_1.EmptyError;\nvar ArgumentOutOfRangeError_1 = require('./util/ArgumentOutOfRangeError');\nexports.ArgumentOutOfRangeError = ArgumentOutOfRangeError_1.ArgumentOutOfRangeError;\nvar ObjectUnsubscribedError_1 = require('./util/ObjectUnsubscribedError');\nexports.ObjectUnsubscribedError = ObjectUnsubscribedError_1.ObjectUnsubscribedError;\nvar UnsubscriptionError_1 = require('./util/UnsubscriptionError');\nexports.UnsubscriptionError = UnsubscriptionError_1.UnsubscriptionError;\nvar timeInterval_1 = require('./operator/timeInterval');\nexports.TimeInterval = timeInterval_1.TimeInterval;\nvar timestamp_1 = require('./operator/timestamp');\nexports.Timestamp = timestamp_1.Timestamp;\nvar TestScheduler_1 = require('./testing/TestScheduler');\nexports.TestScheduler = TestScheduler_1.TestScheduler;\nvar VirtualTimeScheduler_1 = require('./scheduler/VirtualTimeScheduler');\nexports.VirtualTimeScheduler = VirtualTimeScheduler_1.VirtualTimeScheduler;\nvar AjaxObservable_1 = require('./observable/dom/AjaxObservable');\nexports.AjaxResponse = AjaxObservable_1.AjaxResponse;\nexports.AjaxError = AjaxObservable_1.AjaxError;\nexports.AjaxTimeoutError = AjaxObservable_1.AjaxTimeoutError;\nvar asap_1 = require('./scheduler/asap');\nvar async_1 = require('./scheduler/async');\nvar queue_1 = require('./scheduler/queue');\nvar animationFrame_1 = require('./scheduler/animationFrame');\nvar rxSubscriber_1 = require('./symbol/rxSubscriber');\nvar iterator_1 = require('./symbol/iterator');\nvar observable_1 = require('./symbol/observable');\n/* tslint:enable:no-unused-variable */\n/**\n * @typedef {Object} Rx.Scheduler\n * @property {Scheduler} queue Schedules on a queue in the current event frame\n * (trampoline scheduler). Use this for iteration operations.\n * @property {Scheduler} asap Schedules on the micro task queue, which uses the\n * fastest transport mechanism available, either Node.js' `process.nextTick()`\n * or Web Worker MessageChannel or setTimeout or others. Use this for\n * asynchronous conversions.\n * @property {Scheduler} async Schedules work with `setInterval`. Use this for\n * time-based operations.\n * @property {Scheduler} animationFrame Schedules work with `requestAnimationFrame`.\n * Use this for synchronizing with the platform's painting\n */\nvar Scheduler = {\n    asap: asap_1.asap,\n    queue: queue_1.queue,\n    animationFrame: animationFrame_1.animationFrame,\n    async: async_1.async\n};\nexports.Scheduler = Scheduler;\n/**\n * @typedef {Object} Rx.Symbol\n * @property {Symbol|string} rxSubscriber A symbol to use as a property name to\n * retrieve an \"Rx safe\" Observer from an object. \"Rx safety\" can be defined as\n * an object that has all of the traits of an Rx Subscriber, including the\n * ability to add and remove subscriptions to the subscription chain and\n * guarantees involving event triggering (can't \"next\" after unsubscription,\n * etc).\n * @property {Symbol|string} observable A symbol to use as a property name to\n * retrieve an Observable as defined by the [ECMAScript \"Observable\" spec](https://github.com/zenparsing/es-observable).\n * @property {Symbol|string} iterator The ES6 symbol to use as a property name\n * to retrieve an iterator from an object.\n */\nvar Symbol = {\n    rxSubscriber: rxSubscriber_1.$$rxSubscriber,\n    observable: observable_1.$$observable,\n    iterator: iterator_1.$$iterator\n};\nexports.Symbol = Symbol;\n//# sourceMappingURL=Rx.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// /workspace/Energy-Consumption/~/rxjs/Rx.js\n// module id = 719\n// module chunks = 0 1","\"use strict\";\n/**\n * An execution context and a data structure to order tasks and schedule their\n * execution. Provides a notion of (potentially virtual) time, through the\n * `now()` getter method.\n *\n * Each unit of work in a Scheduler is called an {@link Action}.\n *\n * ```ts\n * class Scheduler {\n *   now(): number;\n *   schedule(work, delay?, state?): Subscription;\n * }\n * ```\n *\n * @class Scheduler\n */\nvar Scheduler = (function () {\n    function Scheduler(SchedulerAction, now) {\n        if (now === void 0) { now = Scheduler.now; }\n        this.SchedulerAction = SchedulerAction;\n        this.now = now;\n    }\n    /**\n     * Schedules a function, `work`, for execution. May happen at some point in\n     * the future, according to the `delay` parameter, if specified. May be passed\n     * some context object, `state`, which will be passed to the `work` function.\n     *\n     * The given arguments will be processed an stored as an Action object in a\n     * queue of actions.\n     *\n     * @param {function(state: ?T): ?Subscription} work A function representing a\n     * task, or some unit of work to be executed by the Scheduler.\n     * @param {number} [delay] Time to wait before executing the work, where the\n     * time unit is implicit and defined by the Scheduler itself.\n     * @param {T} [state] Some contextual data that the `work` function uses when\n     * called by the Scheduler.\n     * @return {Subscription} A subscription in order to be able to unsubscribe\n     * the scheduled work.\n     */\n    Scheduler.prototype.schedule = function (work, delay, state) {\n        if (delay === void 0) { delay = 0; }\n        return new this.SchedulerAction(this, work).schedule(state, delay);\n    };\n    Scheduler.now = Date.now ? Date.now : function () { return +new Date(); };\n    return Scheduler;\n}());\nexports.Scheduler = Scheduler;\n//# sourceMappingURL=Scheduler.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// /workspace/Energy-Consumption/~/rxjs/Scheduler.js\n// module id = 720\n// module chunks = 0 1","\"use strict\";\nvar Observable_1 = require('../../Observable');\nvar bindCallback_1 = require('../../observable/bindCallback');\nObservable_1.Observable.bindCallback = bindCallback_1.bindCallback;\n//# sourceMappingURL=bindCallback.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// /workspace/Energy-Consumption/~/rxjs/add/observable/bindCallback.js\n// module id = 721\n// module chunks = 0 1","\"use strict\";\nvar Observable_1 = require('../../Observable');\nvar bindNodeCallback_1 = require('../../observable/bindNodeCallback');\nObservable_1.Observable.bindNodeCallback = bindNodeCallback_1.bindNodeCallback;\n//# sourceMappingURL=bindNodeCallback.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// /workspace/Energy-Consumption/~/rxjs/add/observable/bindNodeCallback.js\n// module id = 722\n// module chunks = 0 1","\"use strict\";\nvar Observable_1 = require('../../Observable');\nvar combineLatest_1 = require('../../observable/combineLatest');\nObservable_1.Observable.combineLatest = combineLatest_1.combineLatest;\n//# sourceMappingURL=combineLatest.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// /workspace/Energy-Consumption/~/rxjs/add/observable/combineLatest.js\n// module id = 723\n// module chunks = 0 1","\"use strict\";\nvar Observable_1 = require('../../Observable');\nvar concat_1 = require('../../observable/concat');\nObservable_1.Observable.concat = concat_1.concat;\n//# sourceMappingURL=concat.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// /workspace/Energy-Consumption/~/rxjs/add/observable/concat.js\n// module id = 724\n// module chunks = 0 1","\"use strict\";\nvar Observable_1 = require('../../Observable');\nvar defer_1 = require('../../observable/defer');\nObservable_1.Observable.defer = defer_1.defer;\n//# sourceMappingURL=defer.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// /workspace/Energy-Consumption/~/rxjs/add/observable/defer.js\n// module id = 725\n// module chunks = 0 1","\"use strict\";\nvar Observable_1 = require('../../../Observable');\nvar ajax_1 = require('../../../observable/dom/ajax');\nObservable_1.Observable.ajax = ajax_1.ajax;\n//# sourceMappingURL=ajax.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// /workspace/Energy-Consumption/~/rxjs/add/observable/dom/ajax.js\n// module id = 726\n// module chunks = 0 1","\"use strict\";\nvar Observable_1 = require('../../../Observable');\nvar webSocket_1 = require('../../../observable/dom/webSocket');\nObservable_1.Observable.webSocket = webSocket_1.webSocket;\n//# sourceMappingURL=webSocket.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// /workspace/Energy-Consumption/~/rxjs/add/observable/dom/webSocket.js\n// module id = 727\n// module chunks = 0 1","\"use strict\";\nvar Observable_1 = require('../../Observable');\nvar empty_1 = require('../../observable/empty');\nObservable_1.Observable.empty = empty_1.empty;\n//# sourceMappingURL=empty.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// /workspace/Energy-Consumption/~/rxjs/add/observable/empty.js\n// module id = 728\n// module chunks = 0 1","\"use strict\";\nvar Observable_1 = require('../../Observable');\nvar forkJoin_1 = require('../../observable/forkJoin');\nObservable_1.Observable.forkJoin = forkJoin_1.forkJoin;\n//# sourceMappingURL=forkJoin.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// /workspace/Energy-Consumption/~/rxjs/add/observable/forkJoin.js\n// module id = 729\n// module chunks = 0 1","\"use strict\";\nvar Observable_1 = require('../../Observable');\nvar from_1 = require('../../observable/from');\nObservable_1.Observable.from = from_1.from;\n//# sourceMappingURL=from.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// /workspace/Energy-Consumption/~/rxjs/add/observable/from.js\n// module id = 730\n// module chunks = 0 1","\"use strict\";\nvar Observable_1 = require('../../Observable');\nvar fromEvent_1 = require('../../observable/fromEvent');\nObservable_1.Observable.fromEvent = fromEvent_1.fromEvent;\n//# sourceMappingURL=fromEvent.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// /workspace/Energy-Consumption/~/rxjs/add/observable/fromEvent.js\n// module id = 731\n// module chunks = 0 1","\"use strict\";\nvar Observable_1 = require('../../Observable');\nvar fromEventPattern_1 = require('../../observable/fromEventPattern');\nObservable_1.Observable.fromEventPattern = fromEventPattern_1.fromEventPattern;\n//# sourceMappingURL=fromEventPattern.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// /workspace/Energy-Consumption/~/rxjs/add/observable/fromEventPattern.js\n// module id = 732\n// module chunks = 0 1","\"use strict\";\nvar Observable_1 = require('../../Observable');\nvar fromPromise_1 = require('../../observable/fromPromise');\nObservable_1.Observable.fromPromise = fromPromise_1.fromPromise;\n//# sourceMappingURL=fromPromise.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// /workspace/Energy-Consumption/~/rxjs/add/observable/fromPromise.js\n// module id = 733\n// module chunks = 0 1","\"use strict\";\nvar Observable_1 = require('../../Observable');\nvar GenerateObservable_1 = require('../../observable/GenerateObservable');\nObservable_1.Observable.generate = GenerateObservable_1.GenerateObservable.create;\n//# sourceMappingURL=generate.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// /workspace/Energy-Consumption/~/rxjs/add/observable/generate.js\n// module id = 734\n// module chunks = 0 1","\"use strict\";\nvar Observable_1 = require('../../Observable');\nvar if_1 = require('../../observable/if');\nObservable_1.Observable.if = if_1._if;\n//# sourceMappingURL=if.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// /workspace/Energy-Consumption/~/rxjs/add/observable/if.js\n// module id = 735\n// module chunks = 0 1","\"use strict\";\nvar Observable_1 = require('../../Observable');\nvar interval_1 = require('../../observable/interval');\nObservable_1.Observable.interval = interval_1.interval;\n//# sourceMappingURL=interval.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// /workspace/Energy-Consumption/~/rxjs/add/observable/interval.js\n// module id = 736\n// module chunks = 0 1","\"use strict\";\nvar Observable_1 = require('../../Observable');\nvar merge_1 = require('../../observable/merge');\nObservable_1.Observable.merge = merge_1.merge;\n//# sourceMappingURL=merge.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// /workspace/Energy-Consumption/~/rxjs/add/observable/merge.js\n// module id = 737\n// module chunks = 0 1","\"use strict\";\nvar Observable_1 = require('../../Observable');\nvar never_1 = require('../../observable/never');\nObservable_1.Observable.never = never_1.never;\n//# sourceMappingURL=never.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// /workspace/Energy-Consumption/~/rxjs/add/observable/never.js\n// module id = 738\n// module chunks = 0 1","\"use strict\";\nvar Observable_1 = require('../../Observable');\nvar of_1 = require('../../observable/of');\nObservable_1.Observable.of = of_1.of;\n//# sourceMappingURL=of.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// /workspace/Energy-Consumption/~/rxjs/add/observable/of.js\n// module id = 739\n// module chunks = 0 1","\"use strict\";\nvar Observable_1 = require('../../Observable');\nvar onErrorResumeNext_1 = require('../../operator/onErrorResumeNext');\nObservable_1.Observable.onErrorResumeNext = onErrorResumeNext_1.onErrorResumeNextStatic;\n//# sourceMappingURL=onErrorResumeNext.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// /workspace/Energy-Consumption/~/rxjs/add/observable/onErrorResumeNext.js\n// module id = 740\n// module chunks = 0 1","\"use strict\";\nvar Observable_1 = require('../../Observable');\nvar pairs_1 = require('../../observable/pairs');\nObservable_1.Observable.pairs = pairs_1.pairs;\n//# sourceMappingURL=pairs.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// /workspace/Energy-Consumption/~/rxjs/add/observable/pairs.js\n// module id = 741\n// module chunks = 0 1","\"use strict\";\nvar Observable_1 = require('../../Observable');\nvar race_1 = require('../../operator/race');\nObservable_1.Observable.race = race_1.raceStatic;\n//# sourceMappingURL=race.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// /workspace/Energy-Consumption/~/rxjs/add/observable/race.js\n// module id = 742\n// module chunks = 0 1","\"use strict\";\nvar Observable_1 = require('../../Observable');\nvar range_1 = require('../../observable/range');\nObservable_1.Observable.range = range_1.range;\n//# sourceMappingURL=range.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// /workspace/Energy-Consumption/~/rxjs/add/observable/range.js\n// module id = 743\n// module chunks = 0 1","\"use strict\";\nvar Observable_1 = require('../../Observable');\nvar throw_1 = require('../../observable/throw');\nObservable_1.Observable.throw = throw_1._throw;\n//# sourceMappingURL=throw.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// /workspace/Energy-Consumption/~/rxjs/add/observable/throw.js\n// module id = 744\n// module chunks = 0 1","\"use strict\";\nvar Observable_1 = require('../../Observable');\nvar timer_1 = require('../../observable/timer');\nObservable_1.Observable.timer = timer_1.timer;\n//# sourceMappingURL=timer.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// /workspace/Energy-Consumption/~/rxjs/add/observable/timer.js\n// module id = 745\n// module chunks = 0 1","\"use strict\";\nvar Observable_1 = require('../../Observable');\nvar using_1 = require('../../observable/using');\nObservable_1.Observable.using = using_1.using;\n//# sourceMappingURL=using.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// /workspace/Energy-Consumption/~/rxjs/add/observable/using.js\n// module id = 746\n// module chunks = 0 1","\"use strict\";\nvar Observable_1 = require('../../Observable');\nvar zip_1 = require('../../observable/zip');\nObservable_1.Observable.zip = zip_1.zip;\n//# sourceMappingURL=zip.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// /workspace/Energy-Consumption/~/rxjs/add/observable/zip.js\n// module id = 747\n// module chunks = 0 1","\"use strict\";\nvar Observable_1 = require('../../Observable');\nvar audit_1 = require('../../operator/audit');\nObservable_1.Observable.prototype.audit = audit_1.audit;\n//# sourceMappingURL=audit.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// /workspace/Energy-Consumption/~/rxjs/add/operator/audit.js\n// module id = 748\n// module chunks = 0 1","\"use strict\";\nvar Observable_1 = require('../../Observable');\nvar auditTime_1 = require('../../operator/auditTime');\nObservable_1.Observable.prototype.auditTime = auditTime_1.auditTime;\n//# sourceMappingURL=auditTime.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// /workspace/Energy-Consumption/~/rxjs/add/operator/auditTime.js\n// module id = 749\n// module chunks = 0 1","\"use strict\";\nvar Observable_1 = require('../../Observable');\nvar buffer_1 = require('../../operator/buffer');\nObservable_1.Observable.prototype.buffer = buffer_1.buffer;\n//# sourceMappingURL=buffer.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// /workspace/Energy-Consumption/~/rxjs/add/operator/buffer.js\n// module id = 750\n// module chunks = 0 1","\"use strict\";\nvar Observable_1 = require('../../Observable');\nvar bufferCount_1 = require('../../operator/bufferCount');\nObservable_1.Observable.prototype.bufferCount = bufferCount_1.bufferCount;\n//# sourceMappingURL=bufferCount.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// /workspace/Energy-Consumption/~/rxjs/add/operator/bufferCount.js\n// module id = 751\n// module chunks = 0 1","\"use strict\";\nvar Observable_1 = require('../../Observable');\nvar bufferTime_1 = require('../../operator/bufferTime');\nObservable_1.Observable.prototype.bufferTime = bufferTime_1.bufferTime;\n//# sourceMappingURL=bufferTime.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// /workspace/Energy-Consumption/~/rxjs/add/operator/bufferTime.js\n// module id = 752\n// module chunks = 0 1","\"use strict\";\nvar Observable_1 = require('../../Observable');\nvar bufferToggle_1 = require('../../operator/bufferToggle');\nObservable_1.Observable.prototype.bufferToggle = bufferToggle_1.bufferToggle;\n//# sourceMappingURL=bufferToggle.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// /workspace/Energy-Consumption/~/rxjs/add/operator/bufferToggle.js\n// module id = 753\n// module chunks = 0 1","\"use strict\";\nvar Observable_1 = require('../../Observable');\nvar bufferWhen_1 = require('../../operator/bufferWhen');\nObservable_1.Observable.prototype.bufferWhen = bufferWhen_1.bufferWhen;\n//# sourceMappingURL=bufferWhen.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// /workspace/Energy-Consumption/~/rxjs/add/operator/bufferWhen.js\n// module id = 754\n// module chunks = 0 1","\"use strict\";\nvar Observable_1 = require('../../Observable');\nvar cache_1 = require('../../operator/cache');\nObservable_1.Observable.prototype.cache = cache_1.cache;\n//# sourceMappingURL=cache.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// /workspace/Energy-Consumption/~/rxjs/add/operator/cache.js\n// module id = 755\n// module chunks = 0 1","\"use strict\";\nvar Observable_1 = require('../../Observable');\nvar catch_1 = require('../../operator/catch');\nObservable_1.Observable.prototype.catch = catch_1._catch;\nObservable_1.Observable.prototype._catch = catch_1._catch;\n//# sourceMappingURL=catch.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// /workspace/Energy-Consumption/~/rxjs/add/operator/catch.js\n// module id = 756\n// module chunks = 0 1","\"use strict\";\nvar Observable_1 = require('../../Observable');\nvar combineAll_1 = require('../../operator/combineAll');\nObservable_1.Observable.prototype.combineAll = combineAll_1.combineAll;\n//# sourceMappingURL=combineAll.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// /workspace/Energy-Consumption/~/rxjs/add/operator/combineAll.js\n// module id = 757\n// module chunks = 0 1","\"use strict\";\nvar Observable_1 = require('../../Observable');\nvar combineLatest_1 = require('../../operator/combineLatest');\nObservable_1.Observable.prototype.combineLatest = combineLatest_1.combineLatest;\n//# sourceMappingURL=combineLatest.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// /workspace/Energy-Consumption/~/rxjs/add/operator/combineLatest.js\n// module id = 758\n// module chunks = 0 1","\"use strict\";\nvar Observable_1 = require('../../Observable');\nvar concat_1 = require('../../operator/concat');\nObservable_1.Observable.prototype.concat = concat_1.concat;\n//# sourceMappingURL=concat.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// /workspace/Energy-Consumption/~/rxjs/add/operator/concat.js\n// module id = 759\n// module chunks = 0 1","\"use strict\";\nvar Observable_1 = require('../../Observable');\nvar concatAll_1 = require('../../operator/concatAll');\nObservable_1.Observable.prototype.concatAll = concatAll_1.concatAll;\n//# sourceMappingURL=concatAll.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// /workspace/Energy-Consumption/~/rxjs/add/operator/concatAll.js\n// module id = 760\n// module chunks = 0 1","\"use strict\";\nvar Observable_1 = require('../../Observable');\nvar concatMap_1 = require('../../operator/concatMap');\nObservable_1.Observable.prototype.concatMap = concatMap_1.concatMap;\n//# sourceMappingURL=concatMap.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// /workspace/Energy-Consumption/~/rxjs/add/operator/concatMap.js\n// module id = 761\n// module chunks = 0 1","\"use strict\";\nvar Observable_1 = require('../../Observable');\nvar concatMapTo_1 = require('../../operator/concatMapTo');\nObservable_1.Observable.prototype.concatMapTo = concatMapTo_1.concatMapTo;\n//# sourceMappingURL=concatMapTo.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// /workspace/Energy-Consumption/~/rxjs/add/operator/concatMapTo.js\n// module id = 762\n// module chunks = 0 1","\"use strict\";\nvar Observable_1 = require('../../Observable');\nvar count_1 = require('../../operator/count');\nObservable_1.Observable.prototype.count = count_1.count;\n//# sourceMappingURL=count.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// /workspace/Energy-Consumption/~/rxjs/add/operator/count.js\n// module id = 763\n// module chunks = 0 1","\"use strict\";\nvar Observable_1 = require('../../Observable');\nvar debounce_1 = require('../../operator/debounce');\nObservable_1.Observable.prototype.debounce = debounce_1.debounce;\n//# sourceMappingURL=debounce.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// /workspace/Energy-Consumption/~/rxjs/add/operator/debounce.js\n// module id = 764\n// module chunks = 0 1","\"use strict\";\nvar Observable_1 = require('../../Observable');\nvar debounceTime_1 = require('../../operator/debounceTime');\nObservable_1.Observable.prototype.debounceTime = debounceTime_1.debounceTime;\n//# sourceMappingURL=debounceTime.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// /workspace/Energy-Consumption/~/rxjs/add/operator/debounceTime.js\n// module id = 765\n// module chunks = 0 1","\"use strict\";\nvar Observable_1 = require('../../Observable');\nvar defaultIfEmpty_1 = require('../../operator/defaultIfEmpty');\nObservable_1.Observable.prototype.defaultIfEmpty = defaultIfEmpty_1.defaultIfEmpty;\n//# sourceMappingURL=defaultIfEmpty.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// /workspace/Energy-Consumption/~/rxjs/add/operator/defaultIfEmpty.js\n// module id = 766\n// module chunks = 0 1","\"use strict\";\nvar Observable_1 = require('../../Observable');\nvar delay_1 = require('../../operator/delay');\nObservable_1.Observable.prototype.delay = delay_1.delay;\n//# sourceMappingURL=delay.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// /workspace/Energy-Consumption/~/rxjs/add/operator/delay.js\n// module id = 767\n// module chunks = 0 1","\"use strict\";\nvar Observable_1 = require('../../Observable');\nvar delayWhen_1 = require('../../operator/delayWhen');\nObservable_1.Observable.prototype.delayWhen = delayWhen_1.delayWhen;\n//# sourceMappingURL=delayWhen.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// /workspace/Energy-Consumption/~/rxjs/add/operator/delayWhen.js\n// module id = 768\n// module chunks = 0 1","\"use strict\";\nvar Observable_1 = require('../../Observable');\nvar dematerialize_1 = require('../../operator/dematerialize');\nObservable_1.Observable.prototype.dematerialize = dematerialize_1.dematerialize;\n//# sourceMappingURL=dematerialize.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// /workspace/Energy-Consumption/~/rxjs/add/operator/dematerialize.js\n// module id = 769\n// module chunks = 0 1","\"use strict\";\nvar Observable_1 = require('../../Observable');\nvar distinct_1 = require('../../operator/distinct');\nObservable_1.Observable.prototype.distinct = distinct_1.distinct;\n//# sourceMappingURL=distinct.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// /workspace/Energy-Consumption/~/rxjs/add/operator/distinct.js\n// module id = 770\n// module chunks = 0 1","\"use strict\";\nvar Observable_1 = require('../../Observable');\nvar distinctKey_1 = require('../../operator/distinctKey');\nObservable_1.Observable.prototype.distinctKey = distinctKey_1.distinctKey;\n//# sourceMappingURL=distinctKey.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// /workspace/Energy-Consumption/~/rxjs/add/operator/distinctKey.js\n// module id = 771\n// module chunks = 0 1","\"use strict\";\nvar Observable_1 = require('../../Observable');\nvar distinctUntilChanged_1 = require('../../operator/distinctUntilChanged');\nObservable_1.Observable.prototype.distinctUntilChanged = distinctUntilChanged_1.distinctUntilChanged;\n//# sourceMappingURL=distinctUntilChanged.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// /workspace/Energy-Consumption/~/rxjs/add/operator/distinctUntilChanged.js\n// module id = 772\n// module chunks = 0 1","\"use strict\";\nvar Observable_1 = require('../../Observable');\nvar distinctUntilKeyChanged_1 = require('../../operator/distinctUntilKeyChanged');\nObservable_1.Observable.prototype.distinctUntilKeyChanged = distinctUntilKeyChanged_1.distinctUntilKeyChanged;\n//# sourceMappingURL=distinctUntilKeyChanged.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// /workspace/Energy-Consumption/~/rxjs/add/operator/distinctUntilKeyChanged.js\n// module id = 773\n// module chunks = 0 1","\"use strict\";\nvar Observable_1 = require('../../Observable');\nvar do_1 = require('../../operator/do');\nObservable_1.Observable.prototype.do = do_1._do;\nObservable_1.Observable.prototype._do = do_1._do;\n//# sourceMappingURL=do.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// /workspace/Energy-Consumption/~/rxjs/add/operator/do.js\n// module id = 774\n// module chunks = 0 1","\"use strict\";\nvar Observable_1 = require('../../Observable');\nvar elementAt_1 = require('../../operator/elementAt');\nObservable_1.Observable.prototype.elementAt = elementAt_1.elementAt;\n//# sourceMappingURL=elementAt.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// /workspace/Energy-Consumption/~/rxjs/add/operator/elementAt.js\n// module id = 775\n// module chunks = 0 1","\"use strict\";\nvar Observable_1 = require('../../Observable');\nvar every_1 = require('../../operator/every');\nObservable_1.Observable.prototype.every = every_1.every;\n//# sourceMappingURL=every.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// /workspace/Energy-Consumption/~/rxjs/add/operator/every.js\n// module id = 776\n// module chunks = 0 1","\"use strict\";\nvar Observable_1 = require('../../Observable');\nvar exhaust_1 = require('../../operator/exhaust');\nObservable_1.Observable.prototype.exhaust = exhaust_1.exhaust;\n//# sourceMappingURL=exhaust.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// /workspace/Energy-Consumption/~/rxjs/add/operator/exhaust.js\n// module id = 777\n// module chunks = 0 1","\"use strict\";\nvar Observable_1 = require('../../Observable');\nvar exhaustMap_1 = require('../../operator/exhaustMap');\nObservable_1.Observable.prototype.exhaustMap = exhaustMap_1.exhaustMap;\n//# sourceMappingURL=exhaustMap.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// /workspace/Energy-Consumption/~/rxjs/add/operator/exhaustMap.js\n// module id = 778\n// module chunks = 0 1","\"use strict\";\nvar Observable_1 = require('../../Observable');\nvar expand_1 = require('../../operator/expand');\nObservable_1.Observable.prototype.expand = expand_1.expand;\n//# sourceMappingURL=expand.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// /workspace/Energy-Consumption/~/rxjs/add/operator/expand.js\n// module id = 779\n// module chunks = 0 1","\"use strict\";\nvar Observable_1 = require('../../Observable');\nvar filter_1 = require('../../operator/filter');\nObservable_1.Observable.prototype.filter = filter_1.filter;\n//# sourceMappingURL=filter.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// /workspace/Energy-Consumption/~/rxjs/add/operator/filter.js\n// module id = 780\n// module chunks = 0 1","\"use strict\";\nvar Observable_1 = require('../../Observable');\nvar finally_1 = require('../../operator/finally');\nObservable_1.Observable.prototype.finally = finally_1._finally;\nObservable_1.Observable.prototype._finally = finally_1._finally;\n//# sourceMappingURL=finally.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// /workspace/Energy-Consumption/~/rxjs/add/operator/finally.js\n// module id = 781\n// module chunks = 0 1","\"use strict\";\nvar Observable_1 = require('../../Observable');\nvar find_1 = require('../../operator/find');\nObservable_1.Observable.prototype.find = find_1.find;\n//# sourceMappingURL=find.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// /workspace/Energy-Consumption/~/rxjs/add/operator/find.js\n// module id = 782\n// module chunks = 0 1","\"use strict\";\nvar Observable_1 = require('../../Observable');\nvar findIndex_1 = require('../../operator/findIndex');\nObservable_1.Observable.prototype.findIndex = findIndex_1.findIndex;\n//# sourceMappingURL=findIndex.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// /workspace/Energy-Consumption/~/rxjs/add/operator/findIndex.js\n// module id = 783\n// module chunks = 0 1","\"use strict\";\nvar Observable_1 = require('../../Observable');\nvar first_1 = require('../../operator/first');\nObservable_1.Observable.prototype.first = first_1.first;\n//# sourceMappingURL=first.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// /workspace/Energy-Consumption/~/rxjs/add/operator/first.js\n// module id = 784\n// module chunks = 0 1","\"use strict\";\nvar Observable_1 = require('../../Observable');\nvar groupBy_1 = require('../../operator/groupBy');\nObservable_1.Observable.prototype.groupBy = groupBy_1.groupBy;\n//# sourceMappingURL=groupBy.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// /workspace/Energy-Consumption/~/rxjs/add/operator/groupBy.js\n// module id = 785\n// module chunks = 0 1","\"use strict\";\nvar Observable_1 = require('../../Observable');\nvar ignoreElements_1 = require('../../operator/ignoreElements');\nObservable_1.Observable.prototype.ignoreElements = ignoreElements_1.ignoreElements;\n//# sourceMappingURL=ignoreElements.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// /workspace/Energy-Consumption/~/rxjs/add/operator/ignoreElements.js\n// module id = 786\n// module chunks = 0 1","\"use strict\";\nvar Observable_1 = require('../../Observable');\nvar isEmpty_1 = require('../../operator/isEmpty');\nObservable_1.Observable.prototype.isEmpty = isEmpty_1.isEmpty;\n//# sourceMappingURL=isEmpty.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// /workspace/Energy-Consumption/~/rxjs/add/operator/isEmpty.js\n// module id = 787\n// module chunks = 0 1","\"use strict\";\nvar Observable_1 = require('../../Observable');\nvar last_1 = require('../../operator/last');\nObservable_1.Observable.prototype.last = last_1.last;\n//# sourceMappingURL=last.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// /workspace/Energy-Consumption/~/rxjs/add/operator/last.js\n// module id = 788\n// module chunks = 0 1","\"use strict\";\nvar Observable_1 = require('../../Observable');\nvar let_1 = require('../../operator/let');\nObservable_1.Observable.prototype.let = let_1.letProto;\nObservable_1.Observable.prototype.letBind = let_1.letProto;\n//# sourceMappingURL=let.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// /workspace/Energy-Consumption/~/rxjs/add/operator/let.js\n// module id = 789\n// module chunks = 0 1","\"use strict\";\nvar Observable_1 = require('../../Observable');\nvar map_1 = require('../../operator/map');\nObservable_1.Observable.prototype.map = map_1.map;\n//# sourceMappingURL=map.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// /workspace/Energy-Consumption/~/rxjs/add/operator/map.js\n// module id = 790\n// module chunks = 0 1","\"use strict\";\nvar Observable_1 = require('../../Observable');\nvar mapTo_1 = require('../../operator/mapTo');\nObservable_1.Observable.prototype.mapTo = mapTo_1.mapTo;\n//# sourceMappingURL=mapTo.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// /workspace/Energy-Consumption/~/rxjs/add/operator/mapTo.js\n// module id = 791\n// module chunks = 0 1","\"use strict\";\nvar Observable_1 = require('../../Observable');\nvar materialize_1 = require('../../operator/materialize');\nObservable_1.Observable.prototype.materialize = materialize_1.materialize;\n//# sourceMappingURL=materialize.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// /workspace/Energy-Consumption/~/rxjs/add/operator/materialize.js\n// module id = 792\n// module chunks = 0 1","\"use strict\";\nvar Observable_1 = require('../../Observable');\nvar max_1 = require('../../operator/max');\nObservable_1.Observable.prototype.max = max_1.max;\n//# sourceMappingURL=max.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// /workspace/Energy-Consumption/~/rxjs/add/operator/max.js\n// module id = 793\n// module chunks = 0 1","\"use strict\";\nvar Observable_1 = require('../../Observable');\nvar merge_1 = require('../../operator/merge');\nObservable_1.Observable.prototype.merge = merge_1.merge;\n//# sourceMappingURL=merge.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// /workspace/Energy-Consumption/~/rxjs/add/operator/merge.js\n// module id = 794\n// module chunks = 0 1","\"use strict\";\nvar Observable_1 = require('../../Observable');\nvar mergeAll_1 = require('../../operator/mergeAll');\nObservable_1.Observable.prototype.mergeAll = mergeAll_1.mergeAll;\n//# sourceMappingURL=mergeAll.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// /workspace/Energy-Consumption/~/rxjs/add/operator/mergeAll.js\n// module id = 795\n// module chunks = 0 1","\"use strict\";\nvar Observable_1 = require('../../Observable');\nvar mergeMap_1 = require('../../operator/mergeMap');\nObservable_1.Observable.prototype.mergeMap = mergeMap_1.mergeMap;\nObservable_1.Observable.prototype.flatMap = mergeMap_1.mergeMap;\n//# sourceMappingURL=mergeMap.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// /workspace/Energy-Consumption/~/rxjs/add/operator/mergeMap.js\n// module id = 796\n// module chunks = 0 1","\"use strict\";\nvar Observable_1 = require('../../Observable');\nvar mergeMapTo_1 = require('../../operator/mergeMapTo');\nObservable_1.Observable.prototype.flatMapTo = mergeMapTo_1.mergeMapTo;\nObservable_1.Observable.prototype.mergeMapTo = mergeMapTo_1.mergeMapTo;\n//# sourceMappingURL=mergeMapTo.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// /workspace/Energy-Consumption/~/rxjs/add/operator/mergeMapTo.js\n// module id = 797\n// module chunks = 0 1","\"use strict\";\nvar Observable_1 = require('../../Observable');\nvar mergeScan_1 = require('../../operator/mergeScan');\nObservable_1.Observable.prototype.mergeScan = mergeScan_1.mergeScan;\n//# sourceMappingURL=mergeScan.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// /workspace/Energy-Consumption/~/rxjs/add/operator/mergeScan.js\n// module id = 798\n// module chunks = 0 1","\"use strict\";\nvar Observable_1 = require('../../Observable');\nvar min_1 = require('../../operator/min');\nObservable_1.Observable.prototype.min = min_1.min;\n//# sourceMappingURL=min.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// /workspace/Energy-Consumption/~/rxjs/add/operator/min.js\n// module id = 799\n// module chunks = 0 1","\"use strict\";\nvar Observable_1 = require('../../Observable');\nvar multicast_1 = require('../../operator/multicast');\nObservable_1.Observable.prototype.multicast = multicast_1.multicast;\n//# sourceMappingURL=multicast.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// /workspace/Energy-Consumption/~/rxjs/add/operator/multicast.js\n// module id = 800\n// module chunks = 0 1","\"use strict\";\nvar Observable_1 = require('../../Observable');\nvar observeOn_1 = require('../../operator/observeOn');\nObservable_1.Observable.prototype.observeOn = observeOn_1.observeOn;\n//# sourceMappingURL=observeOn.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// /workspace/Energy-Consumption/~/rxjs/add/operator/observeOn.js\n// module id = 801\n// module chunks = 0 1","\"use strict\";\nvar Observable_1 = require('../../Observable');\nvar onErrorResumeNext_1 = require('../../operator/onErrorResumeNext');\nObservable_1.Observable.prototype.onErrorResumeNext = onErrorResumeNext_1.onErrorResumeNext;\n//# sourceMappingURL=onErrorResumeNext.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// /workspace/Energy-Consumption/~/rxjs/add/operator/onErrorResumeNext.js\n// module id = 802\n// module chunks = 0 1","\"use strict\";\nvar Observable_1 = require('../../Observable');\nvar pairwise_1 = require('../../operator/pairwise');\nObservable_1.Observable.prototype.pairwise = pairwise_1.pairwise;\n//# sourceMappingURL=pairwise.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// /workspace/Energy-Consumption/~/rxjs/add/operator/pairwise.js\n// module id = 803\n// module chunks = 0 1","\"use strict\";\nvar Observable_1 = require('../../Observable');\nvar partition_1 = require('../../operator/partition');\nObservable_1.Observable.prototype.partition = partition_1.partition;\n//# sourceMappingURL=partition.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// /workspace/Energy-Consumption/~/rxjs/add/operator/partition.js\n// module id = 804\n// module chunks = 0 1","\"use strict\";\nvar Observable_1 = require('../../Observable');\nvar pluck_1 = require('../../operator/pluck');\nObservable_1.Observable.prototype.pluck = pluck_1.pluck;\n//# sourceMappingURL=pluck.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// /workspace/Energy-Consumption/~/rxjs/add/operator/pluck.js\n// module id = 805\n// module chunks = 0 1","\"use strict\";\nvar Observable_1 = require('../../Observable');\nvar publish_1 = require('../../operator/publish');\nObservable_1.Observable.prototype.publish = publish_1.publish;\n//# sourceMappingURL=publish.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// /workspace/Energy-Consumption/~/rxjs/add/operator/publish.js\n// module id = 806\n// module chunks = 0 1","\"use strict\";\nvar Observable_1 = require('../../Observable');\nvar publishBehavior_1 = require('../../operator/publishBehavior');\nObservable_1.Observable.prototype.publishBehavior = publishBehavior_1.publishBehavior;\n//# sourceMappingURL=publishBehavior.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// /workspace/Energy-Consumption/~/rxjs/add/operator/publishBehavior.js\n// module id = 807\n// module chunks = 0 1","\"use strict\";\nvar Observable_1 = require('../../Observable');\nvar publishLast_1 = require('../../operator/publishLast');\nObservable_1.Observable.prototype.publishLast = publishLast_1.publishLast;\n//# sourceMappingURL=publishLast.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// /workspace/Energy-Consumption/~/rxjs/add/operator/publishLast.js\n// module id = 808\n// module chunks = 0 1","\"use strict\";\nvar Observable_1 = require('../../Observable');\nvar publishReplay_1 = require('../../operator/publishReplay');\nObservable_1.Observable.prototype.publishReplay = publishReplay_1.publishReplay;\n//# sourceMappingURL=publishReplay.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// /workspace/Energy-Consumption/~/rxjs/add/operator/publishReplay.js\n// module id = 809\n// module chunks = 0 1","\"use strict\";\nvar Observable_1 = require('../../Observable');\nvar race_1 = require('../../operator/race');\nObservable_1.Observable.prototype.race = race_1.race;\n//# sourceMappingURL=race.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// /workspace/Energy-Consumption/~/rxjs/add/operator/race.js\n// module id = 810\n// module chunks = 0 1","\"use strict\";\nvar Observable_1 = require('../../Observable');\nvar reduce_1 = require('../../operator/reduce');\nObservable_1.Observable.prototype.reduce = reduce_1.reduce;\n//# sourceMappingURL=reduce.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// /workspace/Energy-Consumption/~/rxjs/add/operator/reduce.js\n// module id = 811\n// module chunks = 0 1","\"use strict\";\nvar Observable_1 = require('../../Observable');\nvar repeat_1 = require('../../operator/repeat');\nObservable_1.Observable.prototype.repeat = repeat_1.repeat;\n//# sourceMappingURL=repeat.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// /workspace/Energy-Consumption/~/rxjs/add/operator/repeat.js\n// module id = 812\n// module chunks = 0 1","\"use strict\";\nvar Observable_1 = require('../../Observable');\nvar repeatWhen_1 = require('../../operator/repeatWhen');\nObservable_1.Observable.prototype.repeatWhen = repeatWhen_1.repeatWhen;\n//# sourceMappingURL=repeatWhen.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// /workspace/Energy-Consumption/~/rxjs/add/operator/repeatWhen.js\n// module id = 813\n// module chunks = 0 1","\"use strict\";\nvar Observable_1 = require('../../Observable');\nvar retry_1 = require('../../operator/retry');\nObservable_1.Observable.prototype.retry = retry_1.retry;\n//# sourceMappingURL=retry.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// /workspace/Energy-Consumption/~/rxjs/add/operator/retry.js\n// module id = 814\n// module chunks = 0 1","\"use strict\";\nvar Observable_1 = require('../../Observable');\nvar retryWhen_1 = require('../../operator/retryWhen');\nObservable_1.Observable.prototype.retryWhen = retryWhen_1.retryWhen;\n//# sourceMappingURL=retryWhen.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// /workspace/Energy-Consumption/~/rxjs/add/operator/retryWhen.js\n// module id = 815\n// module chunks = 0 1","\"use strict\";\nvar Observable_1 = require('../../Observable');\nvar sample_1 = require('../../operator/sample');\nObservable_1.Observable.prototype.sample = sample_1.sample;\n//# sourceMappingURL=sample.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// /workspace/Energy-Consumption/~/rxjs/add/operator/sample.js\n// module id = 816\n// module chunks = 0 1","\"use strict\";\nvar Observable_1 = require('../../Observable');\nvar sampleTime_1 = require('../../operator/sampleTime');\nObservable_1.Observable.prototype.sampleTime = sampleTime_1.sampleTime;\n//# sourceMappingURL=sampleTime.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// /workspace/Energy-Consumption/~/rxjs/add/operator/sampleTime.js\n// module id = 817\n// module chunks = 0 1","\"use strict\";\nvar Observable_1 = require('../../Observable');\nvar scan_1 = require('../../operator/scan');\nObservable_1.Observable.prototype.scan = scan_1.scan;\n//# sourceMappingURL=scan.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// /workspace/Energy-Consumption/~/rxjs/add/operator/scan.js\n// module id = 818\n// module chunks = 0 1","\"use strict\";\nvar Observable_1 = require('../../Observable');\nvar sequenceEqual_1 = require('../../operator/sequenceEqual');\nObservable_1.Observable.prototype.sequenceEqual = sequenceEqual_1.sequenceEqual;\n//# sourceMappingURL=sequenceEqual.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// /workspace/Energy-Consumption/~/rxjs/add/operator/sequenceEqual.js\n// module id = 819\n// module chunks = 0 1","\"use strict\";\nvar Observable_1 = require('../../Observable');\nvar share_1 = require('../../operator/share');\nObservable_1.Observable.prototype.share = share_1.share;\n//# sourceMappingURL=share.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// /workspace/Energy-Consumption/~/rxjs/add/operator/share.js\n// module id = 820\n// module chunks = 0 1","\"use strict\";\nvar Observable_1 = require('../../Observable');\nvar single_1 = require('../../operator/single');\nObservable_1.Observable.prototype.single = single_1.single;\n//# sourceMappingURL=single.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// /workspace/Energy-Consumption/~/rxjs/add/operator/single.js\n// module id = 821\n// module chunks = 0 1","\"use strict\";\nvar Observable_1 = require('../../Observable');\nvar skip_1 = require('../../operator/skip');\nObservable_1.Observable.prototype.skip = skip_1.skip;\n//# sourceMappingURL=skip.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// /workspace/Energy-Consumption/~/rxjs/add/operator/skip.js\n// module id = 822\n// module chunks = 0 1","\"use strict\";\nvar Observable_1 = require('../../Observable');\nvar skipUntil_1 = require('../../operator/skipUntil');\nObservable_1.Observable.prototype.skipUntil = skipUntil_1.skipUntil;\n//# sourceMappingURL=skipUntil.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// /workspace/Energy-Consumption/~/rxjs/add/operator/skipUntil.js\n// module id = 823\n// module chunks = 0 1","\"use strict\";\nvar Observable_1 = require('../../Observable');\nvar skipWhile_1 = require('../../operator/skipWhile');\nObservable_1.Observable.prototype.skipWhile = skipWhile_1.skipWhile;\n//# sourceMappingURL=skipWhile.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// /workspace/Energy-Consumption/~/rxjs/add/operator/skipWhile.js\n// module id = 824\n// module chunks = 0 1","\"use strict\";\nvar Observable_1 = require('../../Observable');\nvar startWith_1 = require('../../operator/startWith');\nObservable_1.Observable.prototype.startWith = startWith_1.startWith;\n//# sourceMappingURL=startWith.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// /workspace/Energy-Consumption/~/rxjs/add/operator/startWith.js\n// module id = 825\n// module chunks = 0 1","\"use strict\";\nvar Observable_1 = require('../../Observable');\nvar subscribeOn_1 = require('../../operator/subscribeOn');\nObservable_1.Observable.prototype.subscribeOn = subscribeOn_1.subscribeOn;\n//# sourceMappingURL=subscribeOn.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// /workspace/Energy-Consumption/~/rxjs/add/operator/subscribeOn.js\n// module id = 826\n// module chunks = 0 1","\"use strict\";\nvar Observable_1 = require('../../Observable');\nvar switch_1 = require('../../operator/switch');\nObservable_1.Observable.prototype.switch = switch_1._switch;\nObservable_1.Observable.prototype._switch = switch_1._switch;\n//# sourceMappingURL=switch.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// /workspace/Energy-Consumption/~/rxjs/add/operator/switch.js\n// module id = 827\n// module chunks = 0 1","\"use strict\";\nvar Observable_1 = require('../../Observable');\nvar switchMap_1 = require('../../operator/switchMap');\nObservable_1.Observable.prototype.switchMap = switchMap_1.switchMap;\n//# sourceMappingURL=switchMap.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// /workspace/Energy-Consumption/~/rxjs/add/operator/switchMap.js\n// module id = 828\n// module chunks = 0 1","\"use strict\";\nvar Observable_1 = require('../../Observable');\nvar switchMapTo_1 = require('../../operator/switchMapTo');\nObservable_1.Observable.prototype.switchMapTo = switchMapTo_1.switchMapTo;\n//# sourceMappingURL=switchMapTo.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// /workspace/Energy-Consumption/~/rxjs/add/operator/switchMapTo.js\n// module id = 829\n// module chunks = 0 1","\"use strict\";\nvar Observable_1 = require('../../Observable');\nvar take_1 = require('../../operator/take');\nObservable_1.Observable.prototype.take = take_1.take;\n//# sourceMappingURL=take.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// /workspace/Energy-Consumption/~/rxjs/add/operator/take.js\n// module id = 830\n// module chunks = 0 1","\"use strict\";\nvar Observable_1 = require('../../Observable');\nvar takeLast_1 = require('../../operator/takeLast');\nObservable_1.Observable.prototype.takeLast = takeLast_1.takeLast;\n//# sourceMappingURL=takeLast.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// /workspace/Energy-Consumption/~/rxjs/add/operator/takeLast.js\n// module id = 831\n// module chunks = 0 1","\"use strict\";\nvar Observable_1 = require('../../Observable');\nvar takeUntil_1 = require('../../operator/takeUntil');\nObservable_1.Observable.prototype.takeUntil = takeUntil_1.takeUntil;\n//# sourceMappingURL=takeUntil.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// /workspace/Energy-Consumption/~/rxjs/add/operator/takeUntil.js\n// module id = 832\n// module chunks = 0 1","\"use strict\";\nvar Observable_1 = require('../../Observable');\nvar takeWhile_1 = require('../../operator/takeWhile');\nObservable_1.Observable.prototype.takeWhile = takeWhile_1.takeWhile;\n//# sourceMappingURL=takeWhile.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// /workspace/Energy-Consumption/~/rxjs/add/operator/takeWhile.js\n// module id = 833\n// module chunks = 0 1","\"use strict\";\nvar Observable_1 = require('../../Observable');\nvar throttle_1 = require('../../operator/throttle');\nObservable_1.Observable.prototype.throttle = throttle_1.throttle;\n//# sourceMappingURL=throttle.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// /workspace/Energy-Consumption/~/rxjs/add/operator/throttle.js\n// module id = 834\n// module chunks = 0 1","\"use strict\";\nvar Observable_1 = require('../../Observable');\nvar throttleTime_1 = require('../../operator/throttleTime');\nObservable_1.Observable.prototype.throttleTime = throttleTime_1.throttleTime;\n//# sourceMappingURL=throttleTime.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// /workspace/Energy-Consumption/~/rxjs/add/operator/throttleTime.js\n// module id = 835\n// module chunks = 0 1","\"use strict\";\nvar Observable_1 = require('../../Observable');\nvar timeInterval_1 = require('../../operator/timeInterval');\nObservable_1.Observable.prototype.timeInterval = timeInterval_1.timeInterval;\n//# sourceMappingURL=timeInterval.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// /workspace/Energy-Consumption/~/rxjs/add/operator/timeInterval.js\n// module id = 836\n// module chunks = 0 1","\"use strict\";\nvar Observable_1 = require('../../Observable');\nvar timeout_1 = require('../../operator/timeout');\nObservable_1.Observable.prototype.timeout = timeout_1.timeout;\n//# sourceMappingURL=timeout.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// /workspace/Energy-Consumption/~/rxjs/add/operator/timeout.js\n// module id = 837\n// module chunks = 0 1","\"use strict\";\nvar Observable_1 = require('../../Observable');\nvar timeoutWith_1 = require('../../operator/timeoutWith');\nObservable_1.Observable.prototype.timeoutWith = timeoutWith_1.timeoutWith;\n//# sourceMappingURL=timeoutWith.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// /workspace/Energy-Consumption/~/rxjs/add/operator/timeoutWith.js\n// module id = 838\n// module chunks = 0 1","\"use strict\";\nvar Observable_1 = require('../../Observable');\nvar timestamp_1 = require('../../operator/timestamp');\nObservable_1.Observable.prototype.timestamp = timestamp_1.timestamp;\n//# sourceMappingURL=timestamp.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// /workspace/Energy-Consumption/~/rxjs/add/operator/timestamp.js\n// module id = 839\n// module chunks = 0 1","\"use strict\";\nvar Observable_1 = require('../../Observable');\nvar toArray_1 = require('../../operator/toArray');\nObservable_1.Observable.prototype.toArray = toArray_1.toArray;\n//# sourceMappingURL=toArray.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// /workspace/Energy-Consumption/~/rxjs/add/operator/toArray.js\n// module id = 840\n// module chunks = 0 1","\"use strict\";\nvar Observable_1 = require('../../Observable');\nvar toPromise_1 = require('../../operator/toPromise');\nObservable_1.Observable.prototype.toPromise = toPromise_1.toPromise;\n//# sourceMappingURL=toPromise.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// /workspace/Energy-Consumption/~/rxjs/add/operator/toPromise.js\n// module id = 841\n// module chunks = 0 1","\"use strict\";\nvar Observable_1 = require('../../Observable');\nvar window_1 = require('../../operator/window');\nObservable_1.Observable.prototype.window = window_1.window;\n//# sourceMappingURL=window.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// /workspace/Energy-Consumption/~/rxjs/add/operator/window.js\n// module id = 842\n// module chunks = 0 1","\"use strict\";\nvar Observable_1 = require('../../Observable');\nvar windowCount_1 = require('../../operator/windowCount');\nObservable_1.Observable.prototype.windowCount = windowCount_1.windowCount;\n//# sourceMappingURL=windowCount.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// /workspace/Energy-Consumption/~/rxjs/add/operator/windowCount.js\n// module id = 843\n// module chunks = 0 1","\"use strict\";\nvar Observable_1 = require('../../Observable');\nvar windowTime_1 = require('../../operator/windowTime');\nObservable_1.Observable.prototype.windowTime = windowTime_1.windowTime;\n//# sourceMappingURL=windowTime.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// /workspace/Energy-Consumption/~/rxjs/add/operator/windowTime.js\n// module id = 844\n// module chunks = 0 1","\"use strict\";\nvar Observable_1 = require('../../Observable');\nvar windowToggle_1 = require('../../operator/windowToggle');\nObservable_1.Observable.prototype.windowToggle = windowToggle_1.windowToggle;\n//# sourceMappingURL=windowToggle.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// /workspace/Energy-Consumption/~/rxjs/add/operator/windowToggle.js\n// module id = 845\n// module chunks = 0 1","\"use strict\";\nvar Observable_1 = require('../../Observable');\nvar windowWhen_1 = require('../../operator/windowWhen');\nObservable_1.Observable.prototype.windowWhen = windowWhen_1.windowWhen;\n//# sourceMappingURL=windowWhen.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// /workspace/Energy-Consumption/~/rxjs/add/operator/windowWhen.js\n// module id = 846\n// module chunks = 0 1","\"use strict\";\nvar Observable_1 = require('../../Observable');\nvar withLatestFrom_1 = require('../../operator/withLatestFrom');\nObservable_1.Observable.prototype.withLatestFrom = withLatestFrom_1.withLatestFrom;\n//# sourceMappingURL=withLatestFrom.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// /workspace/Energy-Consumption/~/rxjs/add/operator/withLatestFrom.js\n// module id = 847\n// module chunks = 0 1","\"use strict\";\nvar Observable_1 = require('../../Observable');\nvar zip_1 = require('../../operator/zip');\nObservable_1.Observable.prototype.zip = zip_1.zipProto;\n//# sourceMappingURL=zip.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// /workspace/Energy-Consumption/~/rxjs/add/operator/zip.js\n// module id = 848\n// module chunks = 0 1","\"use strict\";\nvar Observable_1 = require('../../Observable');\nvar zipAll_1 = require('../../operator/zipAll');\nObservable_1.Observable.prototype.zipAll = zipAll_1.zipAll;\n//# sourceMappingURL=zipAll.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// /workspace/Energy-Consumption/~/rxjs/add/operator/zipAll.js\n// module id = 849\n// module chunks = 0 1","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Observable_1 = require('../Observable');\nvar tryCatch_1 = require('../util/tryCatch');\nvar errorObject_1 = require('../util/errorObject');\nvar AsyncSubject_1 = require('../AsyncSubject');\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @extends {Ignored}\n * @hide true\n */\nvar BoundCallbackObservable = (function (_super) {\n    __extends(BoundCallbackObservable, _super);\n    function BoundCallbackObservable(callbackFunc, selector, args, scheduler) {\n        _super.call(this);\n        this.callbackFunc = callbackFunc;\n        this.selector = selector;\n        this.args = args;\n        this.scheduler = scheduler;\n    }\n    /* tslint:enable:max-line-length */\n    /**\n     * Converts a callback API to a function that returns an Observable.\n     *\n     * <span class=\"informal\">Give it a function `f` of type `f(x, callback)` and\n     * it will return a function `g` that when called as `g(x)` will output an\n     * Observable.</span>\n     *\n     * `bindCallback` is not an operator because its input and output are not\n     * Observables. The input is a function `func` with some parameters, but the\n     * last parameter must be a callback function that `func` calls when it is\n     * done. The output of `bindCallback` is a function that takes the same\n     * parameters as `func`, except the last one (the callback). When the output\n     * function is called with arguments, it will return an Observable where the\n     * results will be delivered to.\n     *\n     * @example <caption>Convert jQuery's getJSON to an Observable API</caption>\n     * // Suppose we have jQuery.getJSON('/my/url', callback)\n     * var getJSONAsObservable = Rx.Observable.bindCallback(jQuery.getJSON);\n     * var result = getJSONAsObservable('/my/url');\n     * result.subscribe(x => console.log(x), e => console.error(e));\n     *\n     * @see {@link bindNodeCallback}\n     * @see {@link from}\n     * @see {@link fromPromise}\n     *\n     * @param {function} func Function with a callback as the last parameter.\n     * @param {function} selector A function which takes the arguments from the\n     * callback and maps those a value to emit on the output Observable.\n     * @param {Scheduler} [scheduler] The scheduler on which to schedule the\n     * callbacks.\n     * @return {function(...params: *): Observable} A function which returns the\n     * Observable that delivers the same values the callback would deliver.\n     * @static true\n     * @name bindCallback\n     * @owner Observable\n     */\n    BoundCallbackObservable.create = function (func, selector, scheduler) {\n        if (selector === void 0) { selector = undefined; }\n        return function () {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i - 0] = arguments[_i];\n            }\n            return new BoundCallbackObservable(func, selector, args, scheduler);\n        };\n    };\n    BoundCallbackObservable.prototype._subscribe = function (subscriber) {\n        var callbackFunc = this.callbackFunc;\n        var args = this.args;\n        var scheduler = this.scheduler;\n        var subject = this.subject;\n        if (!scheduler) {\n            if (!subject) {\n                subject = this.subject = new AsyncSubject_1.AsyncSubject();\n                var handler = function handlerFn() {\n                    var innerArgs = [];\n                    for (var _i = 0; _i < arguments.length; _i++) {\n                        innerArgs[_i - 0] = arguments[_i];\n                    }\n                    var source = handlerFn.source;\n                    var selector = source.selector, subject = source.subject;\n                    if (selector) {\n                        var result_1 = tryCatch_1.tryCatch(selector).apply(this, innerArgs);\n                        if (result_1 === errorObject_1.errorObject) {\n                            subject.error(errorObject_1.errorObject.e);\n                        }\n                        else {\n                            subject.next(result_1);\n                            subject.complete();\n                        }\n                    }\n                    else {\n                        subject.next(innerArgs.length === 1 ? innerArgs[0] : innerArgs);\n                        subject.complete();\n                    }\n                };\n                // use named function instance to avoid closure.\n                handler.source = this;\n                var result = tryCatch_1.tryCatch(callbackFunc).apply(this, args.concat(handler));\n                if (result === errorObject_1.errorObject) {\n                    subject.error(errorObject_1.errorObject.e);\n                }\n            }\n            return subject.subscribe(subscriber);\n        }\n        else {\n            return scheduler.schedule(BoundCallbackObservable.dispatch, 0, { source: this, subscriber: subscriber });\n        }\n    };\n    BoundCallbackObservable.dispatch = function (state) {\n        var self = this;\n        var source = state.source, subscriber = state.subscriber;\n        var callbackFunc = source.callbackFunc, args = source.args, scheduler = source.scheduler;\n        var subject = source.subject;\n        if (!subject) {\n            subject = source.subject = new AsyncSubject_1.AsyncSubject();\n            var handler = function handlerFn() {\n                var innerArgs = [];\n                for (var _i = 0; _i < arguments.length; _i++) {\n                    innerArgs[_i - 0] = arguments[_i];\n                }\n                var source = handlerFn.source;\n                var selector = source.selector, subject = source.subject;\n                if (selector) {\n                    var result_2 = tryCatch_1.tryCatch(selector).apply(this, innerArgs);\n                    if (result_2 === errorObject_1.errorObject) {\n                        self.add(scheduler.schedule(dispatchError, 0, { err: errorObject_1.errorObject.e, subject: subject }));\n                    }\n                    else {\n                        self.add(scheduler.schedule(dispatchNext, 0, { value: result_2, subject: subject }));\n                    }\n                }\n                else {\n                    var value = innerArgs.length === 1 ? innerArgs[0] : innerArgs;\n                    self.add(scheduler.schedule(dispatchNext, 0, { value: value, subject: subject }));\n                }\n            };\n            // use named function to pass values in without closure\n            handler.source = source;\n            var result = tryCatch_1.tryCatch(callbackFunc).apply(this, args.concat(handler));\n            if (result === errorObject_1.errorObject) {\n                subject.error(errorObject_1.errorObject.e);\n            }\n        }\n        self.add(subject.subscribe(subscriber));\n    };\n    return BoundCallbackObservable;\n}(Observable_1.Observable));\nexports.BoundCallbackObservable = BoundCallbackObservable;\nfunction dispatchNext(arg) {\n    var value = arg.value, subject = arg.subject;\n    subject.next(value);\n    subject.complete();\n}\nfunction dispatchError(arg) {\n    var err = arg.err, subject = arg.subject;\n    subject.error(err);\n}\n//# sourceMappingURL=BoundCallbackObservable.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// /workspace/Energy-Consumption/~/rxjs/observable/BoundCallbackObservable.js\n// module id = 850\n// module chunks = 0 1","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Observable_1 = require('../Observable');\nvar tryCatch_1 = require('../util/tryCatch');\nvar errorObject_1 = require('../util/errorObject');\nvar AsyncSubject_1 = require('../AsyncSubject');\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @extends {Ignored}\n * @hide true\n */\nvar BoundNodeCallbackObservable = (function (_super) {\n    __extends(BoundNodeCallbackObservable, _super);\n    function BoundNodeCallbackObservable(callbackFunc, selector, args, scheduler) {\n        _super.call(this);\n        this.callbackFunc = callbackFunc;\n        this.selector = selector;\n        this.args = args;\n        this.scheduler = scheduler;\n    }\n    /* tslint:enable:max-line-length */\n    /**\n     * Converts a Node.js-style callback API to a function that returns an\n     * Observable.\n     *\n     * <span class=\"informal\">It's just like {@link bindCallback}, but the\n     * callback is expected to be of type `callback(error, result)`.</span>\n     *\n     * `bindNodeCallback` is not an operator because its input and output are not\n     * Observables. The input is a function `func` with some parameters, but the\n     * last parameter must be a callback function that `func` calls when it is\n     * done. The callback function is expected to follow Node.js conventions,\n     * where the first argument to the callback is an error, while remaining\n     * arguments are the callback result. The output of `bindNodeCallback` is a\n     * function that takes the same parameters as `func`, except the last one (the\n     * callback). When the output function is called with arguments, it will\n     * return an Observable where the results will be delivered to.\n     *\n     * @example <caption>Read a file from the filesystem and get the data as an Observable</caption>\n     * import * as fs from 'fs';\n     * var readFileAsObservable = Rx.Observable.bindNodeCallback(fs.readFile);\n     * var result = readFileAsObservable('./roadNames.txt', 'utf8');\n     * result.subscribe(x => console.log(x), e => console.error(e));\n     *\n     * @see {@link bindCallback}\n     * @see {@link from}\n     * @see {@link fromPromise}\n     *\n     * @param {function} func Function with a callback as the last parameter.\n     * @param {function} selector A function which takes the arguments from the\n     * callback and maps those a value to emit on the output Observable.\n     * @param {Scheduler} [scheduler] The scheduler on which to schedule the\n     * callbacks.\n     * @return {function(...params: *): Observable} A function which returns the\n     * Observable that delivers the same values the Node.js callback would\n     * deliver.\n     * @static true\n     * @name bindNodeCallback\n     * @owner Observable\n     */\n    BoundNodeCallbackObservable.create = function (func, selector, scheduler) {\n        if (selector === void 0) { selector = undefined; }\n        return function () {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i - 0] = arguments[_i];\n            }\n            return new BoundNodeCallbackObservable(func, selector, args, scheduler);\n        };\n    };\n    BoundNodeCallbackObservable.prototype._subscribe = function (subscriber) {\n        var callbackFunc = this.callbackFunc;\n        var args = this.args;\n        var scheduler = this.scheduler;\n        var subject = this.subject;\n        if (!scheduler) {\n            if (!subject) {\n                subject = this.subject = new AsyncSubject_1.AsyncSubject();\n                var handler = function handlerFn() {\n                    var innerArgs = [];\n                    for (var _i = 0; _i < arguments.length; _i++) {\n                        innerArgs[_i - 0] = arguments[_i];\n                    }\n                    var source = handlerFn.source;\n                    var selector = source.selector, subject = source.subject;\n                    var err = innerArgs.shift();\n                    if (err) {\n                        subject.error(err);\n                    }\n                    else if (selector) {\n                        var result_1 = tryCatch_1.tryCatch(selector).apply(this, innerArgs);\n                        if (result_1 === errorObject_1.errorObject) {\n                            subject.error(errorObject_1.errorObject.e);\n                        }\n                        else {\n                            subject.next(result_1);\n                            subject.complete();\n                        }\n                    }\n                    else {\n                        subject.next(innerArgs.length === 1 ? innerArgs[0] : innerArgs);\n                        subject.complete();\n                    }\n                };\n                // use named function instance to avoid closure.\n                handler.source = this;\n                var result = tryCatch_1.tryCatch(callbackFunc).apply(this, args.concat(handler));\n                if (result === errorObject_1.errorObject) {\n                    subject.error(errorObject_1.errorObject.e);\n                }\n            }\n            return subject.subscribe(subscriber);\n        }\n        else {\n            return scheduler.schedule(dispatch, 0, { source: this, subscriber: subscriber });\n        }\n    };\n    return BoundNodeCallbackObservable;\n}(Observable_1.Observable));\nexports.BoundNodeCallbackObservable = BoundNodeCallbackObservable;\nfunction dispatch(state) {\n    var self = this;\n    var source = state.source, subscriber = state.subscriber;\n    // XXX: cast to `any` to access to the private field in `source`.\n    var _a = source, callbackFunc = _a.callbackFunc, args = _a.args, scheduler = _a.scheduler;\n    var subject = source.subject;\n    if (!subject) {\n        subject = source.subject = new AsyncSubject_1.AsyncSubject();\n        var handler = function handlerFn() {\n            var innerArgs = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                innerArgs[_i - 0] = arguments[_i];\n            }\n            var source = handlerFn.source;\n            var selector = source.selector, subject = source.subject;\n            var err = innerArgs.shift();\n            if (err) {\n                subject.error(err);\n            }\n            else if (selector) {\n                var result_2 = tryCatch_1.tryCatch(selector).apply(this, innerArgs);\n                if (result_2 === errorObject_1.errorObject) {\n                    self.add(scheduler.schedule(dispatchError, 0, { err: errorObject_1.errorObject.e, subject: subject }));\n                }\n                else {\n                    self.add(scheduler.schedule(dispatchNext, 0, { value: result_2, subject: subject }));\n                }\n            }\n            else {\n                var value = innerArgs.length === 1 ? innerArgs[0] : innerArgs;\n                self.add(scheduler.schedule(dispatchNext, 0, { value: value, subject: subject }));\n            }\n        };\n        // use named function to pass values in without closure\n        handler.source = source;\n        var result = tryCatch_1.tryCatch(callbackFunc).apply(this, args.concat(handler));\n        if (result === errorObject_1.errorObject) {\n            subject.error(errorObject_1.errorObject.e);\n        }\n    }\n    self.add(subject.subscribe(subscriber));\n}\nfunction dispatchNext(arg) {\n    var value = arg.value, subject = arg.subject;\n    subject.next(value);\n    subject.complete();\n}\nfunction dispatchError(arg) {\n    var err = arg.err, subject = arg.subject;\n    subject.error(err);\n}\n//# sourceMappingURL=BoundNodeCallbackObservable.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// /workspace/Energy-Consumption/~/rxjs/observable/BoundNodeCallbackObservable.js\n// module id = 851\n// module chunks = 0 1","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Observable_1 = require('../Observable');\nvar subscribeToResult_1 = require('../util/subscribeToResult');\nvar OuterSubscriber_1 = require('../OuterSubscriber');\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @extends {Ignored}\n * @hide true\n */\nvar DeferObservable = (function (_super) {\n    __extends(DeferObservable, _super);\n    function DeferObservable(observableFactory) {\n        _super.call(this);\n        this.observableFactory = observableFactory;\n    }\n    /**\n     * Creates an Observable that, on subscribe, calls an Observable factory to\n     * make an Observable for each new Observer.\n     *\n     * <span class=\"informal\">Creates the Observable lazily, that is, only when it\n     * is subscribed.\n     * </span>\n     *\n     * <img src=\"./img/defer.png\" width=\"100%\">\n     *\n     * `defer` allows you to create the Observable only when the Observer\n     * subscribes, and create a fresh Observable for each Observer. It waits until\n     * an Observer subscribes to it, and then it generates an Observable,\n     * typically with an Observable factory function. It does this afresh for each\n     * subscriber, so although each subscriber may think it is subscribing to the\n     * same Observable, in fact each subscriber gets its own individual\n     * Observable.\n     *\n     * @example <caption>Subscribe to either an Observable of clicks or an Observable of interval, at random</caption>\n     * var clicksOrInterval = Rx.Observable.defer(function () {\n     *   if (Math.random() > 0.5) {\n     *     return Rx.Observable.fromEvent(document, 'click');\n     *   } else {\n     *     return Rx.Observable.interval(1000);\n     *   }\n     * });\n     * clicksOrInterval.subscribe(x => console.log(x));\n     *\n     * @see {@link create}\n     *\n     * @param {function(): Observable|Promise} observableFactory The Observable\n     * factory function to invoke for each Observer that subscribes to the output\n     * Observable. May also return a Promise, which will be converted on the fly\n     * to an Observable.\n     * @return {Observable} An Observable whose Observers' subscriptions trigger\n     * an invocation of the given Observable factory function.\n     * @static true\n     * @name defer\n     * @owner Observable\n     */\n    DeferObservable.create = function (observableFactory) {\n        return new DeferObservable(observableFactory);\n    };\n    DeferObservable.prototype._subscribe = function (subscriber) {\n        return new DeferSubscriber(subscriber, this.observableFactory);\n    };\n    return DeferObservable;\n}(Observable_1.Observable));\nexports.DeferObservable = DeferObservable;\nvar DeferSubscriber = (function (_super) {\n    __extends(DeferSubscriber, _super);\n    function DeferSubscriber(destination, factory) {\n        _super.call(this, destination);\n        this.factory = factory;\n        this.tryDefer();\n    }\n    DeferSubscriber.prototype.tryDefer = function () {\n        try {\n            this._callFactory();\n        }\n        catch (err) {\n            this._error(err);\n        }\n    };\n    DeferSubscriber.prototype._callFactory = function () {\n        var result = this.factory();\n        if (result) {\n            this.add(subscribeToResult_1.subscribeToResult(this, result));\n        }\n    };\n    return DeferSubscriber;\n}(OuterSubscriber_1.OuterSubscriber));\n//# sourceMappingURL=DeferObservable.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// /workspace/Energy-Consumption/~/rxjs/observable/DeferObservable.js\n// module id = 852\n// module chunks = 0 1","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Observable_1 = require('../Observable');\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @extends {Ignored}\n * @hide true\n */\nvar ErrorObservable = (function (_super) {\n    __extends(ErrorObservable, _super);\n    function ErrorObservable(error, scheduler) {\n        _super.call(this);\n        this.error = error;\n        this.scheduler = scheduler;\n    }\n    /**\n     * Creates an Observable that emits no items to the Observer and immediately\n     * emits an error notification.\n     *\n     * <span class=\"informal\">Just emits 'error', and nothing else.\n     * </span>\n     *\n     * <img src=\"./img/throw.png\" width=\"100%\">\n     *\n     * This static operator is useful for creating a simple Observable that only\n     * emits the error notification. It can be used for composing with other\n     * Observables, such as in a {@link mergeMap}.\n     *\n     * @example <caption>Emit the number 7, then emit an error.</caption>\n     * var result = Rx.Observable.throw(new Error('oops!')).startWith(7);\n     * result.subscribe(x => console.log(x), e => console.error(e));\n     *\n     * @example <caption>Map and flattens numbers to the sequence 'a', 'b', 'c', but throw an error for 13</caption>\n     * var interval = Rx.Observable.interval(1000);\n     * var result = interval.mergeMap(x =>\n     *   x === 13 ?\n     *     Rx.Observable.throw('Thirteens are bad') :\n     *     Rx.Observable.of('a', 'b', 'c')\n     * );\n     * result.subscribe(x => console.log(x), e => console.error(e));\n     *\n     * @see {@link create}\n     * @see {@link empty}\n     * @see {@link never}\n     * @see {@link of}\n     *\n     * @param {any} error The particular Error to pass to the error notification.\n     * @param {Scheduler} [scheduler] A {@link Scheduler} to use for scheduling\n     * the emission of the error notification.\n     * @return {Observable} An error Observable: emits only the error notification\n     * using the given error argument.\n     * @static true\n     * @name throw\n     * @owner Observable\n     */\n    ErrorObservable.create = function (error, scheduler) {\n        return new ErrorObservable(error, scheduler);\n    };\n    ErrorObservable.dispatch = function (arg) {\n        var error = arg.error, subscriber = arg.subscriber;\n        subscriber.error(error);\n    };\n    ErrorObservable.prototype._subscribe = function (subscriber) {\n        var error = this.error;\n        var scheduler = this.scheduler;\n        if (scheduler) {\n            return scheduler.schedule(ErrorObservable.dispatch, 0, {\n                error: error, subscriber: subscriber\n            });\n        }\n        else {\n            subscriber.error(error);\n        }\n    };\n    return ErrorObservable;\n}(Observable_1.Observable));\nexports.ErrorObservable = ErrorObservable;\n//# sourceMappingURL=ErrorObservable.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// /workspace/Energy-Consumption/~/rxjs/observable/ErrorObservable.js\n// module id = 853\n// module chunks = 0 1","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Observable_1 = require('../Observable');\nvar EmptyObservable_1 = require('./EmptyObservable');\nvar isArray_1 = require('../util/isArray');\nvar subscribeToResult_1 = require('../util/subscribeToResult');\nvar OuterSubscriber_1 = require('../OuterSubscriber');\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @extends {Ignored}\n * @hide true\n */\nvar ForkJoinObservable = (function (_super) {\n    __extends(ForkJoinObservable, _super);\n    function ForkJoinObservable(sources, resultSelector) {\n        _super.call(this);\n        this.sources = sources;\n        this.resultSelector = resultSelector;\n    }\n    /* tslint:enable:max-line-length */\n    /**\n     * @param sources\n     * @return {any}\n     * @static true\n     * @name forkJoin\n     * @owner Observable\n     */\n    ForkJoinObservable.create = function () {\n        var sources = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            sources[_i - 0] = arguments[_i];\n        }\n        if (sources === null || arguments.length === 0) {\n            return new EmptyObservable_1.EmptyObservable();\n        }\n        var resultSelector = null;\n        if (typeof sources[sources.length - 1] === 'function') {\n            resultSelector = sources.pop();\n        }\n        // if the first and only other argument besides the resultSelector is an array\n        // assume it's been called with `forkJoin([obs1, obs2, obs3], resultSelector)`\n        if (sources.length === 1 && isArray_1.isArray(sources[0])) {\n            sources = sources[0];\n        }\n        if (sources.length === 0) {\n            return new EmptyObservable_1.EmptyObservable();\n        }\n        return new ForkJoinObservable(sources, resultSelector);\n    };\n    ForkJoinObservable.prototype._subscribe = function (subscriber) {\n        return new ForkJoinSubscriber(subscriber, this.sources, this.resultSelector);\n    };\n    return ForkJoinObservable;\n}(Observable_1.Observable));\nexports.ForkJoinObservable = ForkJoinObservable;\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar ForkJoinSubscriber = (function (_super) {\n    __extends(ForkJoinSubscriber, _super);\n    function ForkJoinSubscriber(destination, sources, resultSelector) {\n        _super.call(this, destination);\n        this.sources = sources;\n        this.resultSelector = resultSelector;\n        this.completed = 0;\n        this.haveValues = 0;\n        var len = sources.length;\n        this.total = len;\n        this.values = new Array(len);\n        for (var i = 0; i < len; i++) {\n            var source = sources[i];\n            var innerSubscription = subscribeToResult_1.subscribeToResult(this, source, null, i);\n            if (innerSubscription) {\n                innerSubscription.outerIndex = i;\n                this.add(innerSubscription);\n            }\n        }\n    }\n    ForkJoinSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {\n        this.values[outerIndex] = innerValue;\n        if (!innerSub._hasValue) {\n            innerSub._hasValue = true;\n            this.haveValues++;\n        }\n    };\n    ForkJoinSubscriber.prototype.notifyComplete = function (innerSub) {\n        var destination = this.destination;\n        var _a = this, haveValues = _a.haveValues, resultSelector = _a.resultSelector, values = _a.values;\n        var len = values.length;\n        if (!innerSub._hasValue) {\n            destination.complete();\n            return;\n        }\n        this.completed++;\n        if (this.completed !== len) {\n            return;\n        }\n        if (haveValues === len) {\n            var value = resultSelector ? resultSelector.apply(this, values) : values;\n            destination.next(value);\n        }\n        destination.complete();\n    };\n    return ForkJoinSubscriber;\n}(OuterSubscriber_1.OuterSubscriber));\n//# sourceMappingURL=ForkJoinObservable.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// /workspace/Energy-Consumption/~/rxjs/observable/ForkJoinObservable.js\n// module id = 854\n// module chunks = 0 1","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Observable_1 = require('../Observable');\nvar tryCatch_1 = require('../util/tryCatch');\nvar isFunction_1 = require('../util/isFunction');\nvar errorObject_1 = require('../util/errorObject');\nvar Subscription_1 = require('../Subscription');\nfunction isNodeStyleEventEmmitter(sourceObj) {\n    return !!sourceObj && typeof sourceObj.addListener === 'function' && typeof sourceObj.removeListener === 'function';\n}\nfunction isJQueryStyleEventEmitter(sourceObj) {\n    return !!sourceObj && typeof sourceObj.on === 'function' && typeof sourceObj.off === 'function';\n}\nfunction isNodeList(sourceObj) {\n    return !!sourceObj && sourceObj.toString() === '[object NodeList]';\n}\nfunction isHTMLCollection(sourceObj) {\n    return !!sourceObj && sourceObj.toString() === '[object HTMLCollection]';\n}\nfunction isEventTarget(sourceObj) {\n    return !!sourceObj && typeof sourceObj.addEventListener === 'function' && typeof sourceObj.removeEventListener === 'function';\n}\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @extends {Ignored}\n * @hide true\n */\nvar FromEventObservable = (function (_super) {\n    __extends(FromEventObservable, _super);\n    function FromEventObservable(sourceObj, eventName, selector, options) {\n        _super.call(this);\n        this.sourceObj = sourceObj;\n        this.eventName = eventName;\n        this.selector = selector;\n        this.options = options;\n    }\n    /* tslint:enable:max-line-length */\n    /**\n     * Creates an Observable that emits events of a specific type coming from the\n     * given event target.\n     *\n     * <span class=\"informal\">Creates an Observable from DOM events, or Node\n     * EventEmitter events or others.</span>\n     *\n     * <img src=\"./img/fromEvent.png\" width=\"100%\">\n     *\n     * Creates an Observable by attaching an event listener to an \"event target\",\n     * which may be an object with `addEventListener` and `removeEventListener`,\n     * a Node.js EventEmitter, a jQuery style EventEmitter, a NodeList from the\n     * DOM, or an HTMLCollection from the DOM. The event handler is attached when\n     * the output Observable is subscribed, and removed when the Subscription is\n     * unsubscribed.\n     *\n     * @example <caption>Emits clicks happening on the DOM document</caption>\n     * var clicks = Rx.Observable.fromEvent(document, 'click');\n     * clicks.subscribe(x => console.log(x));\n     *\n     * @see {@link from}\n     * @see {@link fromEventPattern}\n     *\n     * @param {EventTargetLike} target The DOMElement, event target, Node.js\n     * EventEmitter, NodeList or HTMLCollection to attach the event handler to.\n     * @param {string} eventName The event name of interest, being emitted by the\n     * `target`.\n     * @parm {EventListenerOptions} [options] Options to pass through to addEventListener\n     * @param {SelectorMethodSignature<T>} [selector] An optional function to\n     * post-process results. It takes the arguments from the event handler and\n     * should return a single value.\n     * @return {Observable<T>}\n     * @static true\n     * @name fromEvent\n     * @owner Observable\n     */\n    FromEventObservable.create = function (target, eventName, options, selector) {\n        if (isFunction_1.isFunction(options)) {\n            selector = options;\n            options = undefined;\n        }\n        return new FromEventObservable(target, eventName, selector, options);\n    };\n    FromEventObservable.setupSubscription = function (sourceObj, eventName, handler, subscriber, options) {\n        var unsubscribe;\n        if (isNodeList(sourceObj) || isHTMLCollection(sourceObj)) {\n            for (var i = 0, len = sourceObj.length; i < len; i++) {\n                FromEventObservable.setupSubscription(sourceObj[i], eventName, handler, subscriber, options);\n            }\n        }\n        else if (isEventTarget(sourceObj)) {\n            var source_1 = sourceObj;\n            sourceObj.addEventListener(eventName, handler, options);\n            unsubscribe = function () { return source_1.removeEventListener(eventName, handler); };\n        }\n        else if (isJQueryStyleEventEmitter(sourceObj)) {\n            var source_2 = sourceObj;\n            sourceObj.on(eventName, handler);\n            unsubscribe = function () { return source_2.off(eventName, handler); };\n        }\n        else if (isNodeStyleEventEmmitter(sourceObj)) {\n            var source_3 = sourceObj;\n            sourceObj.addListener(eventName, handler);\n            unsubscribe = function () { return source_3.removeListener(eventName, handler); };\n        }\n        subscriber.add(new Subscription_1.Subscription(unsubscribe));\n    };\n    FromEventObservable.prototype._subscribe = function (subscriber) {\n        var sourceObj = this.sourceObj;\n        var eventName = this.eventName;\n        var options = this.options;\n        var selector = this.selector;\n        var handler = selector ? function () {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i - 0] = arguments[_i];\n            }\n            var result = tryCatch_1.tryCatch(selector).apply(void 0, args);\n            if (result === errorObject_1.errorObject) {\n                subscriber.error(errorObject_1.errorObject.e);\n            }\n            else {\n                subscriber.next(result);\n            }\n        } : function (e) { return subscriber.next(e); };\n        FromEventObservable.setupSubscription(sourceObj, eventName, handler, subscriber, options);\n    };\n    return FromEventObservable;\n}(Observable_1.Observable));\nexports.FromEventObservable = FromEventObservable;\n//# sourceMappingURL=FromEventObservable.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// /workspace/Energy-Consumption/~/rxjs/observable/FromEventObservable.js\n// module id = 855\n// module chunks = 0 1","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Observable_1 = require('../Observable');\nvar Subscription_1 = require('../Subscription');\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @extends {Ignored}\n * @hide true\n */\nvar FromEventPatternObservable = (function (_super) {\n    __extends(FromEventPatternObservable, _super);\n    function FromEventPatternObservable(addHandler, removeHandler, selector) {\n        _super.call(this);\n        this.addHandler = addHandler;\n        this.removeHandler = removeHandler;\n        this.selector = selector;\n    }\n    /**\n     * Creates an Observable from an API based on addHandler/removeHandler\n     * functions.\n     *\n     * <span class=\"informal\">Converts any addHandler/removeHandler API to an\n     * Observable.</span>\n     *\n     * <img src=\"./img/fromEventPattern.png\" width=\"100%\">\n     *\n     * Creates an Observable by using the `addHandler` and `removeHandler`\n     * functions to add and remove the handlers, with an optional selector\n     * function to project the event arguments to a result. The `addHandler` is\n     * called when the output Observable is subscribed, and `removeHandler` is\n     * called when the Subscription is unsubscribed.\n     *\n     * @example <caption>Emits clicks happening on the DOM document</caption>\n     * function addClickHandler(handler) {\n     *   document.addEventListener('click', handler);\n     * }\n     *\n     * function removeClickHandler(handler) {\n     *   document.removeEventListener('click', handler);\n     * }\n     *\n     * var clicks = Rx.Observable.fromEventPattern(\n     *   addClickHandler,\n     *   removeClickHandler\n     * );\n     * clicks.subscribe(x => console.log(x));\n     *\n     * @see {@link from}\n     * @see {@link fromEvent}\n     *\n     * @param {function(handler: Function): any} addHandler A function that takes\n     * a `handler` function as argument and attaches it somehow to the actual\n     * source of events.\n     * @param {function(handler: Function): void} removeHandler A function that\n     * takes a `handler` function as argument and removes it in case it was\n     * previously attached using `addHandler`.\n     * @param {function(...args: any): T} [selector] An optional function to\n     * post-process results. It takes the arguments from the event handler and\n     * should return a single value.\n     * @return {Observable<T>}\n     * @static true\n     * @name fromEventPattern\n     * @owner Observable\n     */\n    FromEventPatternObservable.create = function (addHandler, removeHandler, selector) {\n        return new FromEventPatternObservable(addHandler, removeHandler, selector);\n    };\n    FromEventPatternObservable.prototype._subscribe = function (subscriber) {\n        var _this = this;\n        var removeHandler = this.removeHandler;\n        var handler = !!this.selector ? function () {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i - 0] = arguments[_i];\n            }\n            _this._callSelector(subscriber, args);\n        } : function (e) { subscriber.next(e); };\n        this._callAddHandler(handler, subscriber);\n        subscriber.add(new Subscription_1.Subscription(function () {\n            //TODO: determine whether or not to forward to error handler\n            removeHandler(handler);\n        }));\n    };\n    FromEventPatternObservable.prototype._callSelector = function (subscriber, args) {\n        try {\n            var result = this.selector.apply(this, args);\n            subscriber.next(result);\n        }\n        catch (e) {\n            subscriber.error(e);\n        }\n    };\n    FromEventPatternObservable.prototype._callAddHandler = function (handler, errorSubscriber) {\n        try {\n            this.addHandler(handler);\n        }\n        catch (e) {\n            errorSubscriber.error(e);\n        }\n    };\n    return FromEventPatternObservable;\n}(Observable_1.Observable));\nexports.FromEventPatternObservable = FromEventPatternObservable;\n//# sourceMappingURL=FromEventPatternObservable.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// /workspace/Energy-Consumption/~/rxjs/observable/FromEventPatternObservable.js\n// module id = 856\n// module chunks = 0 1","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Observable_1 = require('../Observable');\nvar isScheduler_1 = require('../util/isScheduler');\nvar selfSelector = function (value) { return value; };\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @extends {Ignored}\n * @hide true\n */\nvar GenerateObservable = (function (_super) {\n    __extends(GenerateObservable, _super);\n    function GenerateObservable(initialState, condition, iterate, resultSelector, scheduler) {\n        _super.call(this);\n        this.initialState = initialState;\n        this.condition = condition;\n        this.iterate = iterate;\n        this.resultSelector = resultSelector;\n        this.scheduler = scheduler;\n    }\n    GenerateObservable.create = function (initialStateOrOptions, condition, iterate, resultSelectorOrObservable, scheduler) {\n        if (arguments.length == 1) {\n            return new GenerateObservable(initialStateOrOptions.initialState, initialStateOrOptions.condition, initialStateOrOptions.iterate, initialStateOrOptions.resultSelector || selfSelector, initialStateOrOptions.scheduler);\n        }\n        if (resultSelectorOrObservable === undefined || isScheduler_1.isScheduler(resultSelectorOrObservable)) {\n            return new GenerateObservable(initialStateOrOptions, condition, iterate, selfSelector, resultSelectorOrObservable);\n        }\n        return new GenerateObservable(initialStateOrOptions, condition, iterate, resultSelectorOrObservable, scheduler);\n    };\n    GenerateObservable.prototype._subscribe = function (subscriber) {\n        var state = this.initialState;\n        if (this.scheduler) {\n            return this.scheduler.schedule(GenerateObservable.dispatch, 0, {\n                subscriber: subscriber,\n                iterate: this.iterate,\n                condition: this.condition,\n                resultSelector: this.resultSelector,\n                state: state });\n        }\n        var _a = this, condition = _a.condition, resultSelector = _a.resultSelector, iterate = _a.iterate;\n        do {\n            if (condition) {\n                var conditionResult = void 0;\n                try {\n                    conditionResult = condition(state);\n                }\n                catch (err) {\n                    subscriber.error(err);\n                    return;\n                }\n                if (!conditionResult) {\n                    subscriber.complete();\n                    break;\n                }\n            }\n            var value = void 0;\n            try {\n                value = resultSelector(state);\n            }\n            catch (err) {\n                subscriber.error(err);\n                return;\n            }\n            subscriber.next(value);\n            if (subscriber.closed) {\n                break;\n            }\n            try {\n                state = iterate(state);\n            }\n            catch (err) {\n                subscriber.error(err);\n                return;\n            }\n        } while (true);\n    };\n    GenerateObservable.dispatch = function (state) {\n        var subscriber = state.subscriber, condition = state.condition;\n        if (subscriber.closed) {\n            return;\n        }\n        if (state.needIterate) {\n            try {\n                state.state = state.iterate(state.state);\n            }\n            catch (err) {\n                subscriber.error(err);\n                return;\n            }\n        }\n        else {\n            state.needIterate = true;\n        }\n        if (condition) {\n            var conditionResult = void 0;\n            try {\n                conditionResult = condition(state.state);\n            }\n            catch (err) {\n                subscriber.error(err);\n                return;\n            }\n            if (!conditionResult) {\n                subscriber.complete();\n                return;\n            }\n            if (subscriber.closed) {\n                return;\n            }\n        }\n        var value;\n        try {\n            value = state.resultSelector(state.state);\n        }\n        catch (err) {\n            subscriber.error(err);\n            return;\n        }\n        if (subscriber.closed) {\n            return;\n        }\n        subscriber.next(value);\n        if (subscriber.closed) {\n            return;\n        }\n        return this.schedule(state);\n    };\n    return GenerateObservable;\n}(Observable_1.Observable));\nexports.GenerateObservable = GenerateObservable;\n//# sourceMappingURL=GenerateObservable.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// /workspace/Energy-Consumption/~/rxjs/observable/GenerateObservable.js\n// module id = 857\n// module chunks = 0 1","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Observable_1 = require('../Observable');\nvar subscribeToResult_1 = require('../util/subscribeToResult');\nvar OuterSubscriber_1 = require('../OuterSubscriber');\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @extends {Ignored}\n * @hide true\n */\nvar IfObservable = (function (_super) {\n    __extends(IfObservable, _super);\n    function IfObservable(condition, thenSource, elseSource) {\n        _super.call(this);\n        this.condition = condition;\n        this.thenSource = thenSource;\n        this.elseSource = elseSource;\n    }\n    IfObservable.create = function (condition, thenSource, elseSource) {\n        return new IfObservable(condition, thenSource, elseSource);\n    };\n    IfObservable.prototype._subscribe = function (subscriber) {\n        var _a = this, condition = _a.condition, thenSource = _a.thenSource, elseSource = _a.elseSource;\n        return new IfSubscriber(subscriber, condition, thenSource, elseSource);\n    };\n    return IfObservable;\n}(Observable_1.Observable));\nexports.IfObservable = IfObservable;\nvar IfSubscriber = (function (_super) {\n    __extends(IfSubscriber, _super);\n    function IfSubscriber(destination, condition, thenSource, elseSource) {\n        _super.call(this, destination);\n        this.condition = condition;\n        this.thenSource = thenSource;\n        this.elseSource = elseSource;\n        this.tryIf();\n    }\n    IfSubscriber.prototype.tryIf = function () {\n        var _a = this, condition = _a.condition, thenSource = _a.thenSource, elseSource = _a.elseSource;\n        var result;\n        try {\n            result = condition();\n            var source = result ? thenSource : elseSource;\n            if (source) {\n                this.add(subscribeToResult_1.subscribeToResult(this, source));\n            }\n            else {\n                this._complete();\n            }\n        }\n        catch (err) {\n            this._error(err);\n        }\n    };\n    return IfSubscriber;\n}(OuterSubscriber_1.OuterSubscriber));\n//# sourceMappingURL=IfObservable.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// /workspace/Energy-Consumption/~/rxjs/observable/IfObservable.js\n// module id = 858\n// module chunks = 0 1","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar isNumeric_1 = require('../util/isNumeric');\nvar Observable_1 = require('../Observable');\nvar async_1 = require('../scheduler/async');\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @extends {Ignored}\n * @hide true\n */\nvar IntervalObservable = (function (_super) {\n    __extends(IntervalObservable, _super);\n    function IntervalObservable(period, scheduler) {\n        if (period === void 0) { period = 0; }\n        if (scheduler === void 0) { scheduler = async_1.async; }\n        _super.call(this);\n        this.period = period;\n        this.scheduler = scheduler;\n        if (!isNumeric_1.isNumeric(period) || period < 0) {\n            this.period = 0;\n        }\n        if (!scheduler || typeof scheduler.schedule !== 'function') {\n            this.scheduler = async_1.async;\n        }\n    }\n    /**\n     * Creates an Observable that emits sequential numbers every specified\n     * interval of time, on a specified Scheduler.\n     *\n     * <span class=\"informal\">Emits incremental numbers periodically in time.\n     * </span>\n     *\n     * <img src=\"./img/interval.png\" width=\"100%\">\n     *\n     * `interval` returns an Observable that emits an infinite sequence of\n     * ascending integers, with a constant interval of time of your choosing\n     * between those emissions. The first emission is not sent immediately, but\n     * only after the first period has passed. By default, this operator uses the\n     * `async` Scheduler to provide a notion of time, but you may pass any\n     * Scheduler to it.\n     *\n     * @example <caption>Emits ascending numbers, one every second (1000ms)</caption>\n     * var numbers = Rx.Observable.interval(1000);\n     * numbers.subscribe(x => console.log(x));\n     *\n     * @see {@link timer}\n     * @see {@link delay}\n     *\n     * @param {number} [period=0] The interval size in milliseconds (by default)\n     * or the time unit determined by the scheduler's clock.\n     * @param {Scheduler} [scheduler=async] The Scheduler to use for scheduling\n     * the emission of values, and providing a notion of \"time\".\n     * @return {Observable} An Observable that emits a sequential number each time\n     * interval.\n     * @static true\n     * @name interval\n     * @owner Observable\n     */\n    IntervalObservable.create = function (period, scheduler) {\n        if (period === void 0) { period = 0; }\n        if (scheduler === void 0) { scheduler = async_1.async; }\n        return new IntervalObservable(period, scheduler);\n    };\n    IntervalObservable.dispatch = function (state) {\n        var index = state.index, subscriber = state.subscriber, period = state.period;\n        subscriber.next(index);\n        if (subscriber.closed) {\n            return;\n        }\n        state.index += 1;\n        this.schedule(state, period);\n    };\n    IntervalObservable.prototype._subscribe = function (subscriber) {\n        var index = 0;\n        var period = this.period;\n        var scheduler = this.scheduler;\n        subscriber.add(scheduler.schedule(IntervalObservable.dispatch, period, {\n            index: index, subscriber: subscriber, period: period\n        }));\n    };\n    return IntervalObservable;\n}(Observable_1.Observable));\nexports.IntervalObservable = IntervalObservable;\n//# sourceMappingURL=IntervalObservable.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// /workspace/Energy-Consumption/~/rxjs/observable/IntervalObservable.js\n// module id = 859\n// module chunks = 0 1","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Observable_1 = require('../Observable');\nvar noop_1 = require('../util/noop');\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @extends {Ignored}\n * @hide true\n */\nvar NeverObservable = (function (_super) {\n    __extends(NeverObservable, _super);\n    function NeverObservable() {\n        _super.call(this);\n    }\n    /**\n     * Creates an Observable that emits no items to the Observer.\n     *\n     * <span class=\"informal\">An Observable that never emits anything.</span>\n     *\n     * <img src=\"./img/never.png\" width=\"100%\">\n     *\n     * This static operator is useful for creating a simple Observable that emits\n     * neither values nor errors nor the completion notification. It can be used\n     * for testing purposes or for composing with other Observables. Please not\n     * that by never emitting a complete notification, this Observable keeps the\n     * subscription from being disposed automatically. Subscriptions need to be\n     * manually disposed.\n     *\n     * @example <caption>Emit the number 7, then never emit anything else (not even complete).</caption>\n     * function info() {\n     *   console.log('Will not be called');\n     * }\n     * var result = Rx.Observable.never().startWith(7);\n     * result.subscribe(x => console.log(x), info, info);\n     *\n     * @see {@link create}\n     * @see {@link empty}\n     * @see {@link of}\n     * @see {@link throw}\n     *\n     * @return {Observable} A \"never\" Observable: never emits anything.\n     * @static true\n     * @name never\n     * @owner Observable\n     */\n    NeverObservable.create = function () {\n        return new NeverObservable();\n    };\n    NeverObservable.prototype._subscribe = function (subscriber) {\n        noop_1.noop();\n    };\n    return NeverObservable;\n}(Observable_1.Observable));\nexports.NeverObservable = NeverObservable;\n//# sourceMappingURL=NeverObservable.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// /workspace/Energy-Consumption/~/rxjs/observable/NeverObservable.js\n// module id = 860\n// module chunks = 0 1","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Observable_1 = require('../Observable');\nfunction dispatch(state) {\n    var obj = state.obj, keys = state.keys, length = state.length, index = state.index, subscriber = state.subscriber;\n    if (index === length) {\n        subscriber.complete();\n        return;\n    }\n    var key = keys[index];\n    subscriber.next([key, obj[key]]);\n    state.index = index + 1;\n    this.schedule(state);\n}\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @extends {Ignored}\n * @hide true\n */\nvar PairsObservable = (function (_super) {\n    __extends(PairsObservable, _super);\n    function PairsObservable(obj, scheduler) {\n        _super.call(this);\n        this.obj = obj;\n        this.scheduler = scheduler;\n        this.keys = Object.keys(obj);\n    }\n    /**\n     * Convert an object into an observable sequence of [key, value] pairs\n     * using an optional Scheduler to enumerate the object.\n     *\n     * @example <caption>Converts a javascript object to an Observable</caption>\n     * var obj = {\n     *   foo: 42,\n     *   bar: 56,\n     *   baz: 78\n     * };\n     *\n     * var source = Rx.Observable.pairs(obj);\n     *\n     * var subscription = source.subscribe(\n     *   function (x) {\n     *     console.log('Next: %s', x);\n     *   },\n     *   function (err) {\n     *     console.log('Error: %s', err);\n     *   },\n     *   function () {\n     *     console.log('Completed');\n     *   });\n     *\n     * @param {Object} obj The object to inspect and turn into an\n     * Observable sequence.\n     * @param {Scheduler} [scheduler] An optional Scheduler to run the\n     * enumeration of the input sequence on.\n     * @returns {(Observable<Array<string | T>>)} An observable sequence of\n     * [key, value] pairs from the object.\n     */\n    PairsObservable.create = function (obj, scheduler) {\n        return new PairsObservable(obj, scheduler);\n    };\n    PairsObservable.prototype._subscribe = function (subscriber) {\n        var _a = this, keys = _a.keys, scheduler = _a.scheduler;\n        var length = keys.length;\n        if (scheduler) {\n            return scheduler.schedule(dispatch, 0, {\n                obj: this.obj, keys: keys, length: length, index: 0, subscriber: subscriber\n            });\n        }\n        else {\n            for (var idx = 0; idx < length; idx++) {\n                var key = keys[idx];\n                subscriber.next([key, this.obj[key]]);\n            }\n            subscriber.complete();\n        }\n    };\n    return PairsObservable;\n}(Observable_1.Observable));\nexports.PairsObservable = PairsObservable;\n//# sourceMappingURL=PairsObservable.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// /workspace/Energy-Consumption/~/rxjs/observable/PairsObservable.js\n// module id = 861\n// module chunks = 0 1","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Observable_1 = require('../Observable');\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @extends {Ignored}\n * @hide true\n */\nvar RangeObservable = (function (_super) {\n    __extends(RangeObservable, _super);\n    function RangeObservable(start, count, scheduler) {\n        _super.call(this);\n        this.start = start;\n        this._count = count;\n        this.scheduler = scheduler;\n    }\n    /**\n     * Creates an Observable that emits a sequence of numbers within a specified\n     * range.\n     *\n     * <span class=\"informal\">Emits a sequence of numbers in a range.</span>\n     *\n     * <img src=\"./img/range.png\" width=\"100%\">\n     *\n     * `range` operator emits a range of sequential integers, in order, where you\n     * select the `start` of the range and its `length`. By default, uses no\n     * Scheduler and just delivers the notifications synchronously, but may use\n     * an optional Scheduler to regulate those deliveries.\n     *\n     * @example <caption>Emits the numbers 1 to 10</caption>\n     * var numbers = Rx.Observable.range(1, 10);\n     * numbers.subscribe(x => console.log(x));\n     *\n     * @see {@link timer}\n     * @see {@link interval}\n     *\n     * @param {number} [start=0] The value of the first integer in the sequence.\n     * @param {number} [count=0] The number of sequential integers to generate.\n     * @param {Scheduler} [scheduler] A {@link Scheduler} to use for scheduling\n     * the emissions of the notifications.\n     * @return {Observable} An Observable of numbers that emits a finite range of\n     * sequential integers.\n     * @static true\n     * @name range\n     * @owner Observable\n     */\n    RangeObservable.create = function (start, count, scheduler) {\n        if (start === void 0) { start = 0; }\n        if (count === void 0) { count = 0; }\n        return new RangeObservable(start, count, scheduler);\n    };\n    RangeObservable.dispatch = function (state) {\n        var start = state.start, index = state.index, count = state.count, subscriber = state.subscriber;\n        if (index >= count) {\n            subscriber.complete();\n            return;\n        }\n        subscriber.next(start);\n        if (subscriber.closed) {\n            return;\n        }\n        state.index = index + 1;\n        state.start = start + 1;\n        this.schedule(state);\n    };\n    RangeObservable.prototype._subscribe = function (subscriber) {\n        var index = 0;\n        var start = this.start;\n        var count = this._count;\n        var scheduler = this.scheduler;\n        if (scheduler) {\n            return scheduler.schedule(RangeObservable.dispatch, 0, {\n                index: index, count: count, start: start, subscriber: subscriber\n            });\n        }\n        else {\n            do {\n                if (index++ >= count) {\n                    subscriber.complete();\n                    break;\n                }\n                subscriber.next(start++);\n                if (subscriber.closed) {\n                    break;\n                }\n            } while (true);\n        }\n    };\n    return RangeObservable;\n}(Observable_1.Observable));\nexports.RangeObservable = RangeObservable;\n//# sourceMappingURL=RangeObservable.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// /workspace/Energy-Consumption/~/rxjs/observable/RangeObservable.js\n// module id = 862\n// module chunks = 0 1","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Observable_1 = require('../Observable');\nvar asap_1 = require('../scheduler/asap');\nvar isNumeric_1 = require('../util/isNumeric');\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @extends {Ignored}\n * @hide true\n */\nvar SubscribeOnObservable = (function (_super) {\n    __extends(SubscribeOnObservable, _super);\n    function SubscribeOnObservable(source, delayTime, scheduler) {\n        if (delayTime === void 0) { delayTime = 0; }\n        if (scheduler === void 0) { scheduler = asap_1.asap; }\n        _super.call(this);\n        this.source = source;\n        this.delayTime = delayTime;\n        this.scheduler = scheduler;\n        if (!isNumeric_1.isNumeric(delayTime) || delayTime < 0) {\n            this.delayTime = 0;\n        }\n        if (!scheduler || typeof scheduler.schedule !== 'function') {\n            this.scheduler = asap_1.asap;\n        }\n    }\n    SubscribeOnObservable.create = function (source, delay, scheduler) {\n        if (delay === void 0) { delay = 0; }\n        if (scheduler === void 0) { scheduler = asap_1.asap; }\n        return new SubscribeOnObservable(source, delay, scheduler);\n    };\n    SubscribeOnObservable.dispatch = function (arg) {\n        var source = arg.source, subscriber = arg.subscriber;\n        return source.subscribe(subscriber);\n    };\n    SubscribeOnObservable.prototype._subscribe = function (subscriber) {\n        var delay = this.delayTime;\n        var source = this.source;\n        var scheduler = this.scheduler;\n        return scheduler.schedule(SubscribeOnObservable.dispatch, delay, {\n            source: source, subscriber: subscriber\n        });\n    };\n    return SubscribeOnObservable;\n}(Observable_1.Observable));\nexports.SubscribeOnObservable = SubscribeOnObservable;\n//# sourceMappingURL=SubscribeOnObservable.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// /workspace/Energy-Consumption/~/rxjs/observable/SubscribeOnObservable.js\n// module id = 863\n// module chunks = 0 1","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar isNumeric_1 = require('../util/isNumeric');\nvar Observable_1 = require('../Observable');\nvar async_1 = require('../scheduler/async');\nvar isScheduler_1 = require('../util/isScheduler');\nvar isDate_1 = require('../util/isDate');\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @extends {Ignored}\n * @hide true\n */\nvar TimerObservable = (function (_super) {\n    __extends(TimerObservable, _super);\n    function TimerObservable(dueTime, period, scheduler) {\n        if (dueTime === void 0) { dueTime = 0; }\n        _super.call(this);\n        this.period = -1;\n        this.dueTime = 0;\n        if (isNumeric_1.isNumeric(period)) {\n            this.period = Number(period) < 1 && 1 || Number(period);\n        }\n        else if (isScheduler_1.isScheduler(period)) {\n            scheduler = period;\n        }\n        if (!isScheduler_1.isScheduler(scheduler)) {\n            scheduler = async_1.async;\n        }\n        this.scheduler = scheduler;\n        this.dueTime = isDate_1.isDate(dueTime) ?\n            (+dueTime - this.scheduler.now()) :\n            dueTime;\n    }\n    /**\n     * Creates an Observable that starts emitting after an `initialDelay` and\n     * emits ever increasing numbers after each `period` of time thereafter.\n     *\n     * <span class=\"informal\">Its like {@link interval}, but you can specify when\n     * should the emissions start.</span>\n     *\n     * <img src=\"./img/timer.png\" width=\"100%\">\n     *\n     * `timer` returns an Observable that emits an infinite sequence of ascending\n     * integers, with a constant interval of time, `period` of your choosing\n     * between those emissions. The first emission happens after the specified\n     * `initialDelay`. The initial delay may be a {@link Date}. By default, this\n     * operator uses the `async` Scheduler to provide a notion of time, but you\n     * may pass any Scheduler to it. If `period` is not specified, the output\n     * Observable emits only one value, `0`. Otherwise, it emits an infinite\n     * sequence.\n     *\n     * @example <caption>Emits ascending numbers, one every second (1000ms), starting after 3 seconds</caption>\n     * var numbers = Rx.Observable.timer(3000, 1000);\n     * numbers.subscribe(x => console.log(x));\n     *\n     * @example <caption>Emits one number after five seconds</caption>\n     * var numbers = Rx.Observable.timer(5000);\n     * numbers.subscribe(x => console.log(x));\n     *\n     * @see {@link interval}\n     * @see {@link delay}\n     *\n     * @param {number|Date} initialDelay The initial delay time to wait before\n     * emitting the first value of `0`.\n     * @param {number} [period] The period of time between emissions of the\n     * subsequent numbers.\n     * @param {Scheduler} [scheduler=async] The Scheduler to use for scheduling\n     * the emission of values, and providing a notion of \"time\".\n     * @return {Observable} An Observable that emits a `0` after the\n     * `initialDelay` and ever increasing numbers after each `period` of time\n     * thereafter.\n     * @static true\n     * @name timer\n     * @owner Observable\n     */\n    TimerObservable.create = function (initialDelay, period, scheduler) {\n        if (initialDelay === void 0) { initialDelay = 0; }\n        return new TimerObservable(initialDelay, period, scheduler);\n    };\n    TimerObservable.dispatch = function (state) {\n        var index = state.index, period = state.period, subscriber = state.subscriber;\n        var action = this;\n        subscriber.next(index);\n        if (subscriber.closed) {\n            return;\n        }\n        else if (period === -1) {\n            return subscriber.complete();\n        }\n        state.index = index + 1;\n        action.schedule(state, period);\n    };\n    TimerObservable.prototype._subscribe = function (subscriber) {\n        var index = 0;\n        var _a = this, period = _a.period, dueTime = _a.dueTime, scheduler = _a.scheduler;\n        return scheduler.schedule(TimerObservable.dispatch, dueTime, {\n            index: index, period: period, subscriber: subscriber\n        });\n    };\n    return TimerObservable;\n}(Observable_1.Observable));\nexports.TimerObservable = TimerObservable;\n//# sourceMappingURL=TimerObservable.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// /workspace/Energy-Consumption/~/rxjs/observable/TimerObservable.js\n// module id = 864\n// module chunks = 0 1","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Observable_1 = require('../Observable');\nvar subscribeToResult_1 = require('../util/subscribeToResult');\nvar OuterSubscriber_1 = require('../OuterSubscriber');\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @extends {Ignored}\n * @hide true\n */\nvar UsingObservable = (function (_super) {\n    __extends(UsingObservable, _super);\n    function UsingObservable(resourceFactory, observableFactory) {\n        _super.call(this);\n        this.resourceFactory = resourceFactory;\n        this.observableFactory = observableFactory;\n    }\n    UsingObservable.create = function (resourceFactory, observableFactory) {\n        return new UsingObservable(resourceFactory, observableFactory);\n    };\n    UsingObservable.prototype._subscribe = function (subscriber) {\n        var _a = this, resourceFactory = _a.resourceFactory, observableFactory = _a.observableFactory;\n        var resource;\n        try {\n            resource = resourceFactory();\n            return new UsingSubscriber(subscriber, resource, observableFactory);\n        }\n        catch (err) {\n            subscriber.error(err);\n        }\n    };\n    return UsingObservable;\n}(Observable_1.Observable));\nexports.UsingObservable = UsingObservable;\nvar UsingSubscriber = (function (_super) {\n    __extends(UsingSubscriber, _super);\n    function UsingSubscriber(destination, resource, observableFactory) {\n        _super.call(this, destination);\n        this.resource = resource;\n        this.observableFactory = observableFactory;\n        destination.add(resource);\n        this.tryUse();\n    }\n    UsingSubscriber.prototype.tryUse = function () {\n        try {\n            var source = this.observableFactory.call(this, this.resource);\n            if (source) {\n                this.add(subscribeToResult_1.subscribeToResult(this, source));\n            }\n        }\n        catch (err) {\n            this._error(err);\n        }\n    };\n    return UsingSubscriber;\n}(OuterSubscriber_1.OuterSubscriber));\n//# sourceMappingURL=UsingObservable.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// /workspace/Energy-Consumption/~/rxjs/observable/UsingObservable.js\n// module id = 865\n// module chunks = 0 1","\"use strict\";\nvar BoundCallbackObservable_1 = require('./BoundCallbackObservable');\nexports.bindCallback = BoundCallbackObservable_1.BoundCallbackObservable.create;\n//# sourceMappingURL=bindCallback.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// /workspace/Energy-Consumption/~/rxjs/observable/bindCallback.js\n// module id = 866\n// module chunks = 0 1","\"use strict\";\nvar BoundNodeCallbackObservable_1 = require('./BoundNodeCallbackObservable');\nexports.bindNodeCallback = BoundNodeCallbackObservable_1.BoundNodeCallbackObservable.create;\n//# sourceMappingURL=bindNodeCallback.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// /workspace/Energy-Consumption/~/rxjs/observable/bindNodeCallback.js\n// module id = 867\n// module chunks = 0 1","\"use strict\";\nvar isScheduler_1 = require('../util/isScheduler');\nvar isArray_1 = require('../util/isArray');\nvar ArrayObservable_1 = require('./ArrayObservable');\nvar combineLatest_1 = require('../operator/combineLatest');\n/* tslint:enable:max-line-length */\n/**\n * Combines multiple Observables to create an Observable whose values are\n * calculated from the latest values of each of its input Observables.\n *\n * <span class=\"informal\">Whenever any input Observable emits a value, it\n * computes a formula using the latest values from all the inputs, then emits\n * the output of that formula.</span>\n *\n * <img src=\"./img/combineLatest.png\" width=\"100%\">\n *\n * `combineLatest` combines the values from all the Observables passed as\n * arguments. This is done by subscribing to each Observable, in order, and\n * collecting an array of each of the most recent values any time any of the\n * input Observables emits, then either taking that array and passing it as\n * arguments to an optional `project` function and emitting the return value of\n * that, or just emitting the array of recent values directly if there is no\n * `project` function.\n *\n * @example <caption>Dynamically calculate the Body-Mass Index from an Observable of weight and one for height</caption>\n * var weight = Rx.Observable.of(70, 72, 76, 79, 75);\n * var height = Rx.Observable.of(1.76, 1.77, 1.78);\n * var bmi = Rx.Observable.combineLatest(weight, height, (w, h) => w / (h * h));\n * bmi.subscribe(x => console.log('BMI is ' + x));\n *\n * @see {@link combineAll}\n * @see {@link merge}\n * @see {@link withLatestFrom}\n *\n * @param {Observable} observable1 An input Observable to combine with the\n * source Observable.\n * @param {Observable} observable2 An input Observable to combine with the\n * source Observable. More than one input Observables may be given as argument.\n * @param {function} [project] An optional function to project the values from\n * the combined latest values into a new value on the output Observable.\n * @param {Scheduler} [scheduler=null] The Scheduler to use for subscribing to\n * each input Observable.\n * @return {Observable} An Observable of projected values from the most recent\n * values from each input Observable, or an array of the most recent values from\n * each input Observable.\n * @static true\n * @name combineLatest\n * @owner Observable\n */\nfunction combineLatest() {\n    var observables = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        observables[_i - 0] = arguments[_i];\n    }\n    var project = null;\n    var scheduler = null;\n    if (isScheduler_1.isScheduler(observables[observables.length - 1])) {\n        scheduler = observables.pop();\n    }\n    if (typeof observables[observables.length - 1] === 'function') {\n        project = observables.pop();\n    }\n    // if the first and only other argument besides the resultSelector is an array\n    // assume it's been called with `combineLatest([obs1, obs2, obs3], project)`\n    if (observables.length === 1 && isArray_1.isArray(observables[0])) {\n        observables = observables[0];\n    }\n    return new ArrayObservable_1.ArrayObservable(observables, scheduler).lift(new combineLatest_1.CombineLatestOperator(project));\n}\nexports.combineLatest = combineLatest;\n//# sourceMappingURL=combineLatest.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// /workspace/Energy-Consumption/~/rxjs/observable/combineLatest.js\n// module id = 868\n// module chunks = 0 1","\"use strict\";\nvar concat_1 = require('../operator/concat');\nexports.concat = concat_1.concatStatic;\n//# sourceMappingURL=concat.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// /workspace/Energy-Consumption/~/rxjs/observable/concat.js\n// module id = 869\n// module chunks = 0 1","\"use strict\";\nvar DeferObservable_1 = require('./DeferObservable');\nexports.defer = DeferObservable_1.DeferObservable.create;\n//# sourceMappingURL=defer.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// /workspace/Energy-Consumption/~/rxjs/observable/defer.js\n// module id = 870\n// module chunks = 0 1","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Subject_1 = require('../../Subject');\nvar Subscriber_1 = require('../../Subscriber');\nvar Observable_1 = require('../../Observable');\nvar Subscription_1 = require('../../Subscription');\nvar root_1 = require('../../util/root');\nvar ReplaySubject_1 = require('../../ReplaySubject');\nvar tryCatch_1 = require('../../util/tryCatch');\nvar errorObject_1 = require('../../util/errorObject');\nvar assign_1 = require('../../util/assign');\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @extends {Ignored}\n * @hide true\n */\nvar WebSocketSubject = (function (_super) {\n    __extends(WebSocketSubject, _super);\n    function WebSocketSubject(urlConfigOrSource, destination) {\n        if (urlConfigOrSource instanceof Observable_1.Observable) {\n            _super.call(this, destination, urlConfigOrSource);\n        }\n        else {\n            _super.call(this);\n            this.WebSocketCtor = root_1.root.WebSocket;\n            this._output = new Subject_1.Subject();\n            if (typeof urlConfigOrSource === 'string') {\n                this.url = urlConfigOrSource;\n            }\n            else {\n                // WARNING: config object could override important members here.\n                assign_1.assign(this, urlConfigOrSource);\n            }\n            if (!this.WebSocketCtor) {\n                throw new Error('no WebSocket constructor can be found');\n            }\n            this.destination = new ReplaySubject_1.ReplaySubject();\n        }\n    }\n    WebSocketSubject.prototype.resultSelector = function (e) {\n        return JSON.parse(e.data);\n    };\n    /**\n     * @param urlConfigOrSource\n     * @return {WebSocketSubject}\n     * @static true\n     * @name webSocket\n     * @owner Observable\n     */\n    WebSocketSubject.create = function (urlConfigOrSource) {\n        return new WebSocketSubject(urlConfigOrSource);\n    };\n    WebSocketSubject.prototype.lift = function (operator) {\n        var sock = new WebSocketSubject(this, this.destination);\n        sock.operator = operator;\n        return sock;\n    };\n    // TODO: factor this out to be a proper Operator/Subscriber implementation and eliminate closures\n    WebSocketSubject.prototype.multiplex = function (subMsg, unsubMsg, messageFilter) {\n        var self = this;\n        return new Observable_1.Observable(function (observer) {\n            var result = tryCatch_1.tryCatch(subMsg)();\n            if (result === errorObject_1.errorObject) {\n                observer.error(errorObject_1.errorObject.e);\n            }\n            else {\n                self.next(result);\n            }\n            var subscription = self.subscribe(function (x) {\n                var result = tryCatch_1.tryCatch(messageFilter)(x);\n                if (result === errorObject_1.errorObject) {\n                    observer.error(errorObject_1.errorObject.e);\n                }\n                else if (result) {\n                    observer.next(x);\n                }\n            }, function (err) { return observer.error(err); }, function () { return observer.complete(); });\n            return function () {\n                var result = tryCatch_1.tryCatch(unsubMsg)();\n                if (result === errorObject_1.errorObject) {\n                    observer.error(errorObject_1.errorObject.e);\n                }\n                else {\n                    self.next(result);\n                }\n                subscription.unsubscribe();\n            };\n        });\n    };\n    WebSocketSubject.prototype._connectSocket = function () {\n        var _this = this;\n        var WebSocketCtor = this.WebSocketCtor;\n        var observer = this._output;\n        var socket = null;\n        try {\n            socket = this.protocol ?\n                new WebSocketCtor(this.url, this.protocol) :\n                new WebSocketCtor(this.url);\n            this.socket = socket;\n        }\n        catch (e) {\n            observer.error(e);\n            return;\n        }\n        var subscription = new Subscription_1.Subscription(function () {\n            _this.socket = null;\n            if (socket && socket.readyState === 1) {\n                socket.close();\n            }\n        });\n        socket.onopen = function (e) {\n            var openObserver = _this.openObserver;\n            if (openObserver) {\n                openObserver.next(e);\n            }\n            var queue = _this.destination;\n            _this.destination = Subscriber_1.Subscriber.create(function (x) { return socket.readyState === 1 && socket.send(x); }, function (e) {\n                var closingObserver = _this.closingObserver;\n                if (closingObserver) {\n                    closingObserver.next(undefined);\n                }\n                if (e && e.code) {\n                    socket.close(e.code, e.reason);\n                }\n                else {\n                    observer.error(new TypeError('WebSocketSubject.error must be called with an object with an error code, ' +\n                        'and an optional reason: { code: number, reason: string }'));\n                }\n                _this.destination = new ReplaySubject_1.ReplaySubject();\n                _this.socket = null;\n            }, function () {\n                var closingObserver = _this.closingObserver;\n                if (closingObserver) {\n                    closingObserver.next(undefined);\n                }\n                socket.close();\n                _this.destination = new ReplaySubject_1.ReplaySubject();\n                _this.socket = null;\n            });\n            if (queue && queue instanceof ReplaySubject_1.ReplaySubject) {\n                subscription.add(queue.subscribe(_this.destination));\n            }\n        };\n        socket.onerror = function (e) { return observer.error(e); };\n        socket.onclose = function (e) {\n            var closeObserver = _this.closeObserver;\n            if (closeObserver) {\n                closeObserver.next(e);\n            }\n            if (e.wasClean) {\n                observer.complete();\n            }\n            else {\n                observer.error(e);\n            }\n        };\n        socket.onmessage = function (e) {\n            var result = tryCatch_1.tryCatch(_this.resultSelector)(e);\n            if (result === errorObject_1.errorObject) {\n                observer.error(errorObject_1.errorObject.e);\n            }\n            else {\n                observer.next(result);\n            }\n        };\n    };\n    WebSocketSubject.prototype._subscribe = function (subscriber) {\n        var _this = this;\n        var source = this.source;\n        if (source) {\n            return source.subscribe(subscriber);\n        }\n        if (!this.socket) {\n            this._connectSocket();\n        }\n        var subscription = new Subscription_1.Subscription();\n        subscription.add(this._output.subscribe(subscriber));\n        subscription.add(function () {\n            var socket = _this.socket;\n            if (_this._output.observers.length === 0 && socket && socket.readyState === 1) {\n                socket.close();\n                _this.socket = null;\n            }\n        });\n        return subscription;\n    };\n    WebSocketSubject.prototype.unsubscribe = function () {\n        var _a = this, source = _a.source, socket = _a.socket;\n        if (socket && socket.readyState === 1) {\n            socket.close();\n            this.socket = null;\n        }\n        _super.prototype.unsubscribe.call(this);\n        if (!source) {\n            this.destination = new ReplaySubject_1.ReplaySubject();\n        }\n    };\n    return WebSocketSubject;\n}(Subject_1.AnonymousSubject));\nexports.WebSocketSubject = WebSocketSubject;\n//# sourceMappingURL=WebSocketSubject.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// /workspace/Energy-Consumption/~/rxjs/observable/dom/WebSocketSubject.js\n// module id = 871\n// module chunks = 0 1","\"use strict\";\nvar AjaxObservable_1 = require('./AjaxObservable');\nexports.ajax = AjaxObservable_1.AjaxObservable.create;\n//# sourceMappingURL=ajax.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// /workspace/Energy-Consumption/~/rxjs/observable/dom/ajax.js\n// module id = 872\n// module chunks = 0 1","\"use strict\";\nvar WebSocketSubject_1 = require('./WebSocketSubject');\nexports.webSocket = WebSocketSubject_1.WebSocketSubject.create;\n//# sourceMappingURL=webSocket.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// /workspace/Energy-Consumption/~/rxjs/observable/dom/webSocket.js\n// module id = 873\n// module chunks = 0 1","\"use strict\";\nvar EmptyObservable_1 = require('./EmptyObservable');\nexports.empty = EmptyObservable_1.EmptyObservable.create;\n//# sourceMappingURL=empty.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// /workspace/Energy-Consumption/~/rxjs/observable/empty.js\n// module id = 874\n// module chunks = 0 1","\"use strict\";\nvar ForkJoinObservable_1 = require('./ForkJoinObservable');\nexports.forkJoin = ForkJoinObservable_1.ForkJoinObservable.create;\n//# sourceMappingURL=forkJoin.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// /workspace/Energy-Consumption/~/rxjs/observable/forkJoin.js\n// module id = 875\n// module chunks = 0 1","\"use strict\";\nvar FromEventObservable_1 = require('./FromEventObservable');\nexports.fromEvent = FromEventObservable_1.FromEventObservable.create;\n//# sourceMappingURL=fromEvent.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// /workspace/Energy-Consumption/~/rxjs/observable/fromEvent.js\n// module id = 876\n// module chunks = 0 1","\"use strict\";\nvar FromEventPatternObservable_1 = require('./FromEventPatternObservable');\nexports.fromEventPattern = FromEventPatternObservable_1.FromEventPatternObservable.create;\n//# sourceMappingURL=fromEventPattern.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// /workspace/Energy-Consumption/~/rxjs/observable/fromEventPattern.js\n// module id = 877\n// module chunks = 0 1","\"use strict\";\nvar IfObservable_1 = require('./IfObservable');\nexports._if = IfObservable_1.IfObservable.create;\n//# sourceMappingURL=if.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// /workspace/Energy-Consumption/~/rxjs/observable/if.js\n// module id = 878\n// module chunks = 0 1","\"use strict\";\nvar IntervalObservable_1 = require('./IntervalObservable');\nexports.interval = IntervalObservable_1.IntervalObservable.create;\n//# sourceMappingURL=interval.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// /workspace/Energy-Consumption/~/rxjs/observable/interval.js\n// module id = 879\n// module chunks = 0 1","\"use strict\";\nvar merge_1 = require('../operator/merge');\nexports.merge = merge_1.mergeStatic;\n//# sourceMappingURL=merge.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// /workspace/Energy-Consumption/~/rxjs/observable/merge.js\n// module id = 880\n// module chunks = 0 1","\"use strict\";\nvar NeverObservable_1 = require('./NeverObservable');\nexports.never = NeverObservable_1.NeverObservable.create;\n//# sourceMappingURL=never.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// /workspace/Energy-Consumption/~/rxjs/observable/never.js\n// module id = 881\n// module chunks = 0 1","\"use strict\";\nvar PairsObservable_1 = require('./PairsObservable');\nexports.pairs = PairsObservable_1.PairsObservable.create;\n//# sourceMappingURL=pairs.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// /workspace/Energy-Consumption/~/rxjs/observable/pairs.js\n// module id = 882\n// module chunks = 0 1","\"use strict\";\nvar RangeObservable_1 = require('./RangeObservable');\nexports.range = RangeObservable_1.RangeObservable.create;\n//# sourceMappingURL=range.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// /workspace/Energy-Consumption/~/rxjs/observable/range.js\n// module id = 883\n// module chunks = 0 1","\"use strict\";\nvar ErrorObservable_1 = require('./ErrorObservable');\nexports._throw = ErrorObservable_1.ErrorObservable.create;\n//# sourceMappingURL=throw.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// /workspace/Energy-Consumption/~/rxjs/observable/throw.js\n// module id = 884\n// module chunks = 0 1","\"use strict\";\nvar TimerObservable_1 = require('./TimerObservable');\nexports.timer = TimerObservable_1.TimerObservable.create;\n//# sourceMappingURL=timer.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// /workspace/Energy-Consumption/~/rxjs/observable/timer.js\n// module id = 885\n// module chunks = 0 1","\"use strict\";\nvar UsingObservable_1 = require('./UsingObservable');\nexports.using = UsingObservable_1.UsingObservable.create;\n//# sourceMappingURL=using.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// /workspace/Energy-Consumption/~/rxjs/observable/using.js\n// module id = 886\n// module chunks = 0 1","\"use strict\";\nvar zip_1 = require('../operator/zip');\nexports.zip = zip_1.zipStatic;\n//# sourceMappingURL=zip.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// /workspace/Energy-Consumption/~/rxjs/observable/zip.js\n// module id = 887\n// module chunks = 0 1","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar tryCatch_1 = require('../util/tryCatch');\nvar errorObject_1 = require('../util/errorObject');\nvar OuterSubscriber_1 = require('../OuterSubscriber');\nvar subscribeToResult_1 = require('../util/subscribeToResult');\n/**\n * Ignores source values for a duration determined by another Observable, then\n * emits the most recent value from the source Observable, then repeats this\n * process.\n *\n * <span class=\"informal\">It's like {@link auditTime}, but the silencing\n * duration is determined by a second Observable.</span>\n *\n * <img src=\"./img/audit.png\" width=\"100%\">\n *\n * `audit` is similar to `throttle`, but emits the last value from the silenced\n * time window, instead of the first value. `audit` emits the most recent value\n * from the source Observable on the output Observable as soon as its internal\n * timer becomes disabled, and ignores source values while the timer is enabled.\n * Initially, the timer is disabled. As soon as the first source value arrives,\n * the timer is enabled by calling the `durationSelector` function with the\n * source value, which returns the \"duration\" Observable. When the duration\n * Observable emits a value or completes, the timer is disabled, then the most\n * recent source value is emitted on the output Observable, and this process\n * repeats for the next source value.\n *\n * @example <caption>Emit clicks at a rate of at most one click per second</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.audit(ev => Rx.Observable.interval(1000));\n * result.subscribe(x => console.log(x));\n *\n * @see {@link auditTime}\n * @see {@link debounce}\n * @see {@link delayWhen}\n * @see {@link sample}\n * @see {@link throttle}\n *\n * @param {function(value: T): Observable|Promise} durationSelector A function\n * that receives a value from the source Observable, for computing the silencing\n * duration, returned as an Observable or a Promise.\n * @return {Observable<T>} An Observable that performs rate-limiting of\n * emissions from the source Observable.\n * @method audit\n * @owner Observable\n */\nfunction audit(durationSelector) {\n    return this.lift(new AuditOperator(durationSelector));\n}\nexports.audit = audit;\nvar AuditOperator = (function () {\n    function AuditOperator(durationSelector) {\n        this.durationSelector = durationSelector;\n    }\n    AuditOperator.prototype.call = function (subscriber, source) {\n        return source._subscribe(new AuditSubscriber(subscriber, this.durationSelector));\n    };\n    return AuditOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar AuditSubscriber = (function (_super) {\n    __extends(AuditSubscriber, _super);\n    function AuditSubscriber(destination, durationSelector) {\n        _super.call(this, destination);\n        this.durationSelector = durationSelector;\n        this.hasValue = false;\n    }\n    AuditSubscriber.prototype._next = function (value) {\n        this.value = value;\n        this.hasValue = true;\n        if (!this.throttled) {\n            var duration = tryCatch_1.tryCatch(this.durationSelector)(value);\n            if (duration === errorObject_1.errorObject) {\n                this.destination.error(errorObject_1.errorObject.e);\n            }\n            else {\n                this.add(this.throttled = subscribeToResult_1.subscribeToResult(this, duration));\n            }\n        }\n    };\n    AuditSubscriber.prototype.clearThrottle = function () {\n        var _a = this, value = _a.value, hasValue = _a.hasValue, throttled = _a.throttled;\n        if (throttled) {\n            this.remove(throttled);\n            this.throttled = null;\n            throttled.unsubscribe();\n        }\n        if (hasValue) {\n            this.value = null;\n            this.hasValue = false;\n            this.destination.next(value);\n        }\n    };\n    AuditSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex) {\n        this.clearThrottle();\n    };\n    AuditSubscriber.prototype.notifyComplete = function () {\n        this.clearThrottle();\n    };\n    return AuditSubscriber;\n}(OuterSubscriber_1.OuterSubscriber));\n//# sourceMappingURL=audit.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// /workspace/Energy-Consumption/~/rxjs/operator/audit.js\n// module id = 888\n// module chunks = 0 1","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar async_1 = require('../scheduler/async');\nvar Subscriber_1 = require('../Subscriber');\n/**\n * Ignores source values for `duration` milliseconds, then emits the most recent\n * value from the source Observable, then repeats this process.\n *\n * <span class=\"informal\">When it sees a source values, it ignores that plus\n * the next ones for `duration` milliseconds, and then it emits the most recent\n * value from the source.</span>\n *\n * <img src=\"./img/auditTime.png\" width=\"100%\">\n *\n * `auditTime` is similar to `throttleTime`, but emits the last value from the\n * silenced time window, instead of the first value. `auditTime` emits the most\n * recent value from the source Observable on the output Observable as soon as\n * its internal timer becomes disabled, and ignores source values while the\n * timer is enabled. Initially, the timer is disabled. As soon as the first\n * source value arrives, the timer is enabled. After `duration` milliseconds (or\n * the time unit determined internally by the optional `scheduler`) has passed,\n * the timer is disabled, then the most recent source value is emitted on the\n * output Observable, and this process repeats for the next source value.\n * Optionally takes a {@link Scheduler} for managing timers.\n *\n * @example <caption>Emit clicks at a rate of at most one click per second</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.auditTime(1000);\n * result.subscribe(x => console.log(x));\n *\n * @see {@link audit}\n * @see {@link debounceTime}\n * @see {@link delay}\n * @see {@link sampleTime}\n * @see {@link throttleTime}\n *\n * @param {number} duration Time to wait before emitting the most recent source\n * value, measured in milliseconds or the time unit determined internally\n * by the optional `scheduler`.\n * @param {Scheduler} [scheduler=async] The {@link Scheduler} to use for\n * managing the timers that handle the rate-limiting behavior.\n * @return {Observable<T>} An Observable that performs rate-limiting of\n * emissions from the source Observable.\n * @method auditTime\n * @owner Observable\n */\nfunction auditTime(duration, scheduler) {\n    if (scheduler === void 0) { scheduler = async_1.async; }\n    return this.lift(new AuditTimeOperator(duration, scheduler));\n}\nexports.auditTime = auditTime;\nvar AuditTimeOperator = (function () {\n    function AuditTimeOperator(duration, scheduler) {\n        this.duration = duration;\n        this.scheduler = scheduler;\n    }\n    AuditTimeOperator.prototype.call = function (subscriber, source) {\n        return source._subscribe(new AuditTimeSubscriber(subscriber, this.duration, this.scheduler));\n    };\n    return AuditTimeOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar AuditTimeSubscriber = (function (_super) {\n    __extends(AuditTimeSubscriber, _super);\n    function AuditTimeSubscriber(destination, duration, scheduler) {\n        _super.call(this, destination);\n        this.duration = duration;\n        this.scheduler = scheduler;\n        this.hasValue = false;\n    }\n    AuditTimeSubscriber.prototype._next = function (value) {\n        this.value = value;\n        this.hasValue = true;\n        if (!this.throttled) {\n            this.add(this.throttled = this.scheduler.schedule(dispatchNext, this.duration, this));\n        }\n    };\n    AuditTimeSubscriber.prototype.clearThrottle = function () {\n        var _a = this, value = _a.value, hasValue = _a.hasValue, throttled = _a.throttled;\n        if (throttled) {\n            this.remove(throttled);\n            this.throttled = null;\n            throttled.unsubscribe();\n        }\n        if (hasValue) {\n            this.value = null;\n            this.hasValue = false;\n            this.destination.next(value);\n        }\n    };\n    return AuditTimeSubscriber;\n}(Subscriber_1.Subscriber));\nfunction dispatchNext(subscriber) {\n    subscriber.clearThrottle();\n}\n//# sourceMappingURL=auditTime.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// /workspace/Energy-Consumption/~/rxjs/operator/auditTime.js\n// module id = 889\n// module chunks = 0 1","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar OuterSubscriber_1 = require('../OuterSubscriber');\nvar subscribeToResult_1 = require('../util/subscribeToResult');\n/**\n * Buffers the source Observable values until `closingNotifier` emits.\n *\n * <span class=\"informal\">Collects values from the past as an array, and emits\n * that array only when another Observable emits.</span>\n *\n * <img src=\"./img/buffer.png\" width=\"100%\">\n *\n * Buffers the incoming Observable values until the given `closingNotifier`\n * Observable emits a value, at which point it emits the buffer on the output\n * Observable and starts a new buffer internally, awaiting the next time\n * `closingNotifier` emits.\n *\n * @example <caption>On every click, emit array of most recent interval events</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var interval = Rx.Observable.interval(1000);\n * var buffered = interval.buffer(clicks);\n * buffered.subscribe(x => console.log(x));\n *\n * @see {@link bufferCount}\n * @see {@link bufferTime}\n * @see {@link bufferToggle}\n * @see {@link bufferWhen}\n * @see {@link window}\n *\n * @param {Observable<any>} closingNotifier An Observable that signals the\n * buffer to be emitted on the output Observable.\n * @return {Observable<T[]>} An Observable of buffers, which are arrays of\n * values.\n * @method buffer\n * @owner Observable\n */\nfunction buffer(closingNotifier) {\n    return this.lift(new BufferOperator(closingNotifier));\n}\nexports.buffer = buffer;\nvar BufferOperator = (function () {\n    function BufferOperator(closingNotifier) {\n        this.closingNotifier = closingNotifier;\n    }\n    BufferOperator.prototype.call = function (subscriber, source) {\n        return source._subscribe(new BufferSubscriber(subscriber, this.closingNotifier));\n    };\n    return BufferOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar BufferSubscriber = (function (_super) {\n    __extends(BufferSubscriber, _super);\n    function BufferSubscriber(destination, closingNotifier) {\n        _super.call(this, destination);\n        this.buffer = [];\n        this.add(subscribeToResult_1.subscribeToResult(this, closingNotifier));\n    }\n    BufferSubscriber.prototype._next = function (value) {\n        this.buffer.push(value);\n    };\n    BufferSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {\n        var buffer = this.buffer;\n        this.buffer = [];\n        this.destination.next(buffer);\n    };\n    return BufferSubscriber;\n}(OuterSubscriber_1.OuterSubscriber));\n//# sourceMappingURL=buffer.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// /workspace/Energy-Consumption/~/rxjs/operator/buffer.js\n// module id = 890\n// module chunks = 0 1","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Subscriber_1 = require('../Subscriber');\n/**\n * Buffers the source Observable values until the size hits the maximum\n * `bufferSize` given.\n *\n * <span class=\"informal\">Collects values from the past as an array, and emits\n * that array only when its size reaches `bufferSize`.</span>\n *\n * <img src=\"./img/bufferCount.png\" width=\"100%\">\n *\n * Buffers a number of values from the source Observable by `bufferSize` then\n * emits the buffer and clears it, and starts a new buffer each\n * `startBufferEvery` values. If `startBufferEvery` is not provided or is\n * `null`, then new buffers are started immediately at the start of the source\n * and when each buffer closes and is emitted.\n *\n * @example <caption>Emit the last two click events as an array</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var buffered = clicks.bufferCount(2);\n * buffered.subscribe(x => console.log(x));\n *\n * @example <caption>On every click, emit the last two click events as an array</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var buffered = clicks.bufferCount(2, 1);\n * buffered.subscribe(x => console.log(x));\n *\n * @see {@link buffer}\n * @see {@link bufferTime}\n * @see {@link bufferToggle}\n * @see {@link bufferWhen}\n * @see {@link pairwise}\n * @see {@link windowCount}\n *\n * @param {number} bufferSize The maximum size of the buffer emitted.\n * @param {number} [startBufferEvery] Interval at which to start a new buffer.\n * For example if `startBufferEvery` is `2`, then a new buffer will be started\n * on every other value from the source. A new buffer is started at the\n * beginning of the source by default.\n * @return {Observable<T[]>} An Observable of arrays of buffered values.\n * @method bufferCount\n * @owner Observable\n */\nfunction bufferCount(bufferSize, startBufferEvery) {\n    if (startBufferEvery === void 0) { startBufferEvery = null; }\n    return this.lift(new BufferCountOperator(bufferSize, startBufferEvery));\n}\nexports.bufferCount = bufferCount;\nvar BufferCountOperator = (function () {\n    function BufferCountOperator(bufferSize, startBufferEvery) {\n        this.bufferSize = bufferSize;\n        this.startBufferEvery = startBufferEvery;\n    }\n    BufferCountOperator.prototype.call = function (subscriber, source) {\n        return source._subscribe(new BufferCountSubscriber(subscriber, this.bufferSize, this.startBufferEvery));\n    };\n    return BufferCountOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar BufferCountSubscriber = (function (_super) {\n    __extends(BufferCountSubscriber, _super);\n    function BufferCountSubscriber(destination, bufferSize, startBufferEvery) {\n        _super.call(this, destination);\n        this.bufferSize = bufferSize;\n        this.startBufferEvery = startBufferEvery;\n        this.buffers = [[]];\n        this.count = 0;\n    }\n    BufferCountSubscriber.prototype._next = function (value) {\n        var count = (this.count += 1);\n        var destination = this.destination;\n        var bufferSize = this.bufferSize;\n        var startBufferEvery = (this.startBufferEvery == null) ? bufferSize : this.startBufferEvery;\n        var buffers = this.buffers;\n        var len = buffers.length;\n        var remove = -1;\n        if (count % startBufferEvery === 0) {\n            buffers.push([]);\n        }\n        for (var i = 0; i < len; i++) {\n            var buffer = buffers[i];\n            buffer.push(value);\n            if (buffer.length === bufferSize) {\n                remove = i;\n                destination.next(buffer);\n            }\n        }\n        if (remove !== -1) {\n            buffers.splice(remove, 1);\n        }\n    };\n    BufferCountSubscriber.prototype._complete = function () {\n        var destination = this.destination;\n        var buffers = this.buffers;\n        while (buffers.length > 0) {\n            var buffer = buffers.shift();\n            if (buffer.length > 0) {\n                destination.next(buffer);\n            }\n        }\n        _super.prototype._complete.call(this);\n    };\n    return BufferCountSubscriber;\n}(Subscriber_1.Subscriber));\n//# sourceMappingURL=bufferCount.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// /workspace/Energy-Consumption/~/rxjs/operator/bufferCount.js\n// module id = 891\n// module chunks = 0 1","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar async_1 = require('../scheduler/async');\nvar Subscriber_1 = require('../Subscriber');\nvar isScheduler_1 = require('../util/isScheduler');\n/**\n * Buffers the source Observable values for a specific time period.\n *\n * <span class=\"informal\">Collects values from the past as an array, and emits\n * those arrays periodically in time.</span>\n *\n * <img src=\"./img/bufferTime.png\" width=\"100%\">\n *\n * Buffers values from the source for a specific time duration `bufferTimeSpan`.\n * Unless the optional argument `bufferCreationInterval` is given, it emits and\n * resets the buffer every `bufferTimeSpan` milliseconds. If\n * `bufferCreationInterval` is given, this operator opens the buffer every\n * `bufferCreationInterval` milliseconds and closes (emits and resets) the\n * buffer every `bufferTimeSpan` milliseconds. When the optional argument\n * `maxBufferSize` is specified, the buffer will be closed either after\n * `bufferTimeSpan` milliseconds or when it contains `maxBufferSize` elements.\n *\n * @example <caption>Every second, emit an array of the recent click events</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var buffered = clicks.bufferTime(1000);\n * buffered.subscribe(x => console.log(x));\n *\n * @example <caption>Every 5 seconds, emit the click events from the next 2 seconds</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var buffered = clicks.bufferTime(2000, 5000);\n * buffered.subscribe(x => console.log(x));\n *\n * @see {@link buffer}\n * @see {@link bufferCount}\n * @see {@link bufferToggle}\n * @see {@link bufferWhen}\n * @see {@link windowTime}\n *\n * @param {number} bufferTimeSpan The amount of time to fill each buffer array.\n * @param {number} [bufferCreationInterval] The interval at which to start new\n * buffers.\n * @param {number} [maxBufferSize] The maximum buffer size.\n * @param {Scheduler} [scheduler=async] The scheduler on which to schedule the\n * intervals that determine buffer boundaries.\n * @return {Observable<T[]>} An observable of arrays of buffered values.\n * @method bufferTime\n * @owner Observable\n */\nfunction bufferTime(bufferTimeSpan) {\n    var length = arguments.length;\n    var scheduler = async_1.async;\n    if (isScheduler_1.isScheduler(arguments[arguments.length - 1])) {\n        scheduler = arguments[arguments.length - 1];\n        length--;\n    }\n    var bufferCreationInterval = null;\n    if (length >= 2) {\n        bufferCreationInterval = arguments[1];\n    }\n    var maxBufferSize = Number.POSITIVE_INFINITY;\n    if (length >= 3) {\n        maxBufferSize = arguments[2];\n    }\n    return this.lift(new BufferTimeOperator(bufferTimeSpan, bufferCreationInterval, maxBufferSize, scheduler));\n}\nexports.bufferTime = bufferTime;\nvar BufferTimeOperator = (function () {\n    function BufferTimeOperator(bufferTimeSpan, bufferCreationInterval, maxBufferSize, scheduler) {\n        this.bufferTimeSpan = bufferTimeSpan;\n        this.bufferCreationInterval = bufferCreationInterval;\n        this.maxBufferSize = maxBufferSize;\n        this.scheduler = scheduler;\n    }\n    BufferTimeOperator.prototype.call = function (subscriber, source) {\n        return source._subscribe(new BufferTimeSubscriber(subscriber, this.bufferTimeSpan, this.bufferCreationInterval, this.maxBufferSize, this.scheduler));\n    };\n    return BufferTimeOperator;\n}());\nvar Context = (function () {\n    function Context() {\n        this.buffer = [];\n    }\n    return Context;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar BufferTimeSubscriber = (function (_super) {\n    __extends(BufferTimeSubscriber, _super);\n    function BufferTimeSubscriber(destination, bufferTimeSpan, bufferCreationInterval, maxBufferSize, scheduler) {\n        _super.call(this, destination);\n        this.bufferTimeSpan = bufferTimeSpan;\n        this.bufferCreationInterval = bufferCreationInterval;\n        this.maxBufferSize = maxBufferSize;\n        this.scheduler = scheduler;\n        this.contexts = [];\n        var context = this.openContext();\n        this.timespanOnly = bufferCreationInterval == null || bufferCreationInterval < 0;\n        if (this.timespanOnly) {\n            var timeSpanOnlyState = { subscriber: this, context: context, bufferTimeSpan: bufferTimeSpan };\n            this.add(context.closeAction = scheduler.schedule(dispatchBufferTimeSpanOnly, bufferTimeSpan, timeSpanOnlyState));\n        }\n        else {\n            var closeState = { subscriber: this, context: context };\n            var creationState = { bufferTimeSpan: bufferTimeSpan, bufferCreationInterval: bufferCreationInterval, subscriber: this, scheduler: scheduler };\n            this.add(context.closeAction = scheduler.schedule(dispatchBufferClose, bufferTimeSpan, closeState));\n            this.add(scheduler.schedule(dispatchBufferCreation, bufferCreationInterval, creationState));\n        }\n    }\n    BufferTimeSubscriber.prototype._next = function (value) {\n        var contexts = this.contexts;\n        var len = contexts.length;\n        var filledBufferContext;\n        for (var i = 0; i < len; i++) {\n            var context = contexts[i];\n            var buffer = context.buffer;\n            buffer.push(value);\n            if (buffer.length == this.maxBufferSize) {\n                filledBufferContext = context;\n            }\n        }\n        if (filledBufferContext) {\n            this.onBufferFull(filledBufferContext);\n        }\n    };\n    BufferTimeSubscriber.prototype._error = function (err) {\n        this.contexts.length = 0;\n        _super.prototype._error.call(this, err);\n    };\n    BufferTimeSubscriber.prototype._complete = function () {\n        var _a = this, contexts = _a.contexts, destination = _a.destination;\n        while (contexts.length > 0) {\n            var context = contexts.shift();\n            destination.next(context.buffer);\n        }\n        _super.prototype._complete.call(this);\n    };\n    BufferTimeSubscriber.prototype._unsubscribe = function () {\n        this.contexts = null;\n    };\n    BufferTimeSubscriber.prototype.onBufferFull = function (context) {\n        this.closeContext(context);\n        var closeAction = context.closeAction;\n        closeAction.unsubscribe();\n        this.remove(closeAction);\n        if (this.timespanOnly) {\n            context = this.openContext();\n            var bufferTimeSpan = this.bufferTimeSpan;\n            var timeSpanOnlyState = { subscriber: this, context: context, bufferTimeSpan: bufferTimeSpan };\n            this.add(context.closeAction = this.scheduler.schedule(dispatchBufferTimeSpanOnly, bufferTimeSpan, timeSpanOnlyState));\n        }\n    };\n    BufferTimeSubscriber.prototype.openContext = function () {\n        var context = new Context();\n        this.contexts.push(context);\n        return context;\n    };\n    BufferTimeSubscriber.prototype.closeContext = function (context) {\n        this.destination.next(context.buffer);\n        var contexts = this.contexts;\n        var spliceIndex = contexts ? contexts.indexOf(context) : -1;\n        if (spliceIndex >= 0) {\n            contexts.splice(contexts.indexOf(context), 1);\n        }\n    };\n    return BufferTimeSubscriber;\n}(Subscriber_1.Subscriber));\nfunction dispatchBufferTimeSpanOnly(state) {\n    var subscriber = state.subscriber;\n    var prevContext = state.context;\n    if (prevContext) {\n        subscriber.closeContext(prevContext);\n    }\n    if (!subscriber.closed) {\n        state.context = subscriber.openContext();\n        state.context.closeAction = this.schedule(state, state.bufferTimeSpan);\n    }\n}\nfunction dispatchBufferCreation(state) {\n    var bufferCreationInterval = state.bufferCreationInterval, bufferTimeSpan = state.bufferTimeSpan, subscriber = state.subscriber, scheduler = state.scheduler;\n    var context = subscriber.openContext();\n    var action = this;\n    if (!subscriber.closed) {\n        subscriber.add(context.closeAction = scheduler.schedule(dispatchBufferClose, bufferTimeSpan, { subscriber: subscriber, context: context }));\n        action.schedule(state, bufferCreationInterval);\n    }\n}\nfunction dispatchBufferClose(arg) {\n    var subscriber = arg.subscriber, context = arg.context;\n    subscriber.closeContext(context);\n}\n//# sourceMappingURL=bufferTime.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// /workspace/Energy-Consumption/~/rxjs/operator/bufferTime.js\n// module id = 892\n// module chunks = 0 1","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Subscription_1 = require('../Subscription');\nvar subscribeToResult_1 = require('../util/subscribeToResult');\nvar OuterSubscriber_1 = require('../OuterSubscriber');\n/**\n * Buffers the source Observable values starting from an emission from\n * `openings` and ending when the output of `closingSelector` emits.\n *\n * <span class=\"informal\">Collects values from the past as an array. Starts\n * collecting only when `opening` emits, and calls the `closingSelector`\n * function to get an Observable that tells when to close the buffer.</span>\n *\n * <img src=\"./img/bufferToggle.png\" width=\"100%\">\n *\n * Buffers values from the source by opening the buffer via signals from an\n * Observable provided to `openings`, and closing and sending the buffers when\n * a Subscribable or Promise returned by the `closingSelector` function emits.\n *\n * @example <caption>Every other second, emit the click events from the next 500ms</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var openings = Rx.Observable.interval(1000);\n * var buffered = clicks.bufferToggle(openings, i =>\n *   i % 2 ? Rx.Observable.interval(500) : Rx.Observable.empty()\n * );\n * buffered.subscribe(x => console.log(x));\n *\n * @see {@link buffer}\n * @see {@link bufferCount}\n * @see {@link bufferTime}\n * @see {@link bufferWhen}\n * @see {@link windowToggle}\n *\n * @param {SubscribableOrPromise<O>} openings A Subscribable or Promise of notifications to start new\n * buffers.\n * @param {function(value: O): SubscribableOrPromise} closingSelector A function that takes\n * the value emitted by the `openings` observable and returns a Subscribable or Promise,\n * which, when it emits, signals that the associated buffer should be emitted\n * and cleared.\n * @return {Observable<T[]>} An observable of arrays of buffered values.\n * @method bufferToggle\n * @owner Observable\n */\nfunction bufferToggle(openings, closingSelector) {\n    return this.lift(new BufferToggleOperator(openings, closingSelector));\n}\nexports.bufferToggle = bufferToggle;\nvar BufferToggleOperator = (function () {\n    function BufferToggleOperator(openings, closingSelector) {\n        this.openings = openings;\n        this.closingSelector = closingSelector;\n    }\n    BufferToggleOperator.prototype.call = function (subscriber, source) {\n        return source._subscribe(new BufferToggleSubscriber(subscriber, this.openings, this.closingSelector));\n    };\n    return BufferToggleOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar BufferToggleSubscriber = (function (_super) {\n    __extends(BufferToggleSubscriber, _super);\n    function BufferToggleSubscriber(destination, openings, closingSelector) {\n        _super.call(this, destination);\n        this.openings = openings;\n        this.closingSelector = closingSelector;\n        this.contexts = [];\n        this.add(subscribeToResult_1.subscribeToResult(this, openings));\n    }\n    BufferToggleSubscriber.prototype._next = function (value) {\n        var contexts = this.contexts;\n        var len = contexts.length;\n        for (var i = 0; i < len; i++) {\n            contexts[i].buffer.push(value);\n        }\n    };\n    BufferToggleSubscriber.prototype._error = function (err) {\n        var contexts = this.contexts;\n        while (contexts.length > 0) {\n            var context = contexts.shift();\n            context.subscription.unsubscribe();\n            context.buffer = null;\n            context.subscription = null;\n        }\n        this.contexts = null;\n        _super.prototype._error.call(this, err);\n    };\n    BufferToggleSubscriber.prototype._complete = function () {\n        var contexts = this.contexts;\n        while (contexts.length > 0) {\n            var context = contexts.shift();\n            this.destination.next(context.buffer);\n            context.subscription.unsubscribe();\n            context.buffer = null;\n            context.subscription = null;\n        }\n        this.contexts = null;\n        _super.prototype._complete.call(this);\n    };\n    BufferToggleSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {\n        outerValue ? this.closeBuffer(outerValue) : this.openBuffer(innerValue);\n    };\n    BufferToggleSubscriber.prototype.notifyComplete = function (innerSub) {\n        this.closeBuffer(innerSub.context);\n    };\n    BufferToggleSubscriber.prototype.openBuffer = function (value) {\n        try {\n            var closingSelector = this.closingSelector;\n            var closingNotifier = closingSelector.call(this, value);\n            if (closingNotifier) {\n                this.trySubscribe(closingNotifier);\n            }\n        }\n        catch (err) {\n            this._error(err);\n        }\n    };\n    BufferToggleSubscriber.prototype.closeBuffer = function (context) {\n        var contexts = this.contexts;\n        if (contexts && context) {\n            var buffer = context.buffer, subscription = context.subscription;\n            this.destination.next(buffer);\n            contexts.splice(contexts.indexOf(context), 1);\n            this.remove(subscription);\n            subscription.unsubscribe();\n        }\n    };\n    BufferToggleSubscriber.prototype.trySubscribe = function (closingNotifier) {\n        var contexts = this.contexts;\n        var buffer = [];\n        var subscription = new Subscription_1.Subscription();\n        var context = { buffer: buffer, subscription: subscription };\n        contexts.push(context);\n        var innerSubscription = subscribeToResult_1.subscribeToResult(this, closingNotifier, context);\n        if (!innerSubscription || innerSubscription.closed) {\n            this.closeBuffer(context);\n        }\n        else {\n            innerSubscription.context = context;\n            this.add(innerSubscription);\n            subscription.add(innerSubscription);\n        }\n    };\n    return BufferToggleSubscriber;\n}(OuterSubscriber_1.OuterSubscriber));\n//# sourceMappingURL=bufferToggle.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// /workspace/Energy-Consumption/~/rxjs/operator/bufferToggle.js\n// module id = 893\n// module chunks = 0 1","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Subscription_1 = require('../Subscription');\nvar tryCatch_1 = require('../util/tryCatch');\nvar errorObject_1 = require('../util/errorObject');\nvar OuterSubscriber_1 = require('../OuterSubscriber');\nvar subscribeToResult_1 = require('../util/subscribeToResult');\n/**\n * Buffers the source Observable values, using a factory function of closing\n * Observables to determine when to close, emit, and reset the buffer.\n *\n * <span class=\"informal\">Collects values from the past as an array. When it\n * starts collecting values, it calls a function that returns an Observable that\n * tells when to close the buffer and restart collecting.</span>\n *\n * <img src=\"./img/bufferWhen.png\" width=\"100%\">\n *\n * Opens a buffer immediately, then closes the buffer when the observable\n * returned by calling `closingSelector` function emits a value. When it closes\n * the buffer, it immediately opens a new buffer and repeats the process.\n *\n * @example <caption>Emit an array of the last clicks every [1-5] random seconds</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var buffered = clicks.bufferWhen(() =>\n *   Rx.Observable.interval(1000 + Math.random() * 4000)\n * );\n * buffered.subscribe(x => console.log(x));\n *\n * @see {@link buffer}\n * @see {@link bufferCount}\n * @see {@link bufferTime}\n * @see {@link bufferToggle}\n * @see {@link windowWhen}\n *\n * @param {function(): Observable} closingSelector A function that takes no\n * arguments and returns an Observable that signals buffer closure.\n * @return {Observable<T[]>} An observable of arrays of buffered values.\n * @method bufferWhen\n * @owner Observable\n */\nfunction bufferWhen(closingSelector) {\n    return this.lift(new BufferWhenOperator(closingSelector));\n}\nexports.bufferWhen = bufferWhen;\nvar BufferWhenOperator = (function () {\n    function BufferWhenOperator(closingSelector) {\n        this.closingSelector = closingSelector;\n    }\n    BufferWhenOperator.prototype.call = function (subscriber, source) {\n        return source._subscribe(new BufferWhenSubscriber(subscriber, this.closingSelector));\n    };\n    return BufferWhenOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar BufferWhenSubscriber = (function (_super) {\n    __extends(BufferWhenSubscriber, _super);\n    function BufferWhenSubscriber(destination, closingSelector) {\n        _super.call(this, destination);\n        this.closingSelector = closingSelector;\n        this.subscribing = false;\n        this.openBuffer();\n    }\n    BufferWhenSubscriber.prototype._next = function (value) {\n        this.buffer.push(value);\n    };\n    BufferWhenSubscriber.prototype._complete = function () {\n        var buffer = this.buffer;\n        if (buffer) {\n            this.destination.next(buffer);\n        }\n        _super.prototype._complete.call(this);\n    };\n    BufferWhenSubscriber.prototype._unsubscribe = function () {\n        this.buffer = null;\n        this.subscribing = false;\n    };\n    BufferWhenSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {\n        this.openBuffer();\n    };\n    BufferWhenSubscriber.prototype.notifyComplete = function () {\n        if (this.subscribing) {\n            this.complete();\n        }\n        else {\n            this.openBuffer();\n        }\n    };\n    BufferWhenSubscriber.prototype.openBuffer = function () {\n        var closingSubscription = this.closingSubscription;\n        if (closingSubscription) {\n            this.remove(closingSubscription);\n            closingSubscription.unsubscribe();\n        }\n        var buffer = this.buffer;\n        if (this.buffer) {\n            this.destination.next(buffer);\n        }\n        this.buffer = [];\n        var closingNotifier = tryCatch_1.tryCatch(this.closingSelector)();\n        if (closingNotifier === errorObject_1.errorObject) {\n            this.error(errorObject_1.errorObject.e);\n        }\n        else {\n            closingSubscription = new Subscription_1.Subscription();\n            this.closingSubscription = closingSubscription;\n            this.add(closingSubscription);\n            this.subscribing = true;\n            closingSubscription.add(subscribeToResult_1.subscribeToResult(this, closingNotifier));\n            this.subscribing = false;\n        }\n    };\n    return BufferWhenSubscriber;\n}(OuterSubscriber_1.OuterSubscriber));\n//# sourceMappingURL=bufferWhen.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// /workspace/Energy-Consumption/~/rxjs/operator/bufferWhen.js\n// module id = 894\n// module chunks = 0 1","\"use strict\";\nvar Observable_1 = require('../Observable');\nvar ReplaySubject_1 = require('../ReplaySubject');\n/**\n * @param bufferSize\n * @param windowTime\n * @param scheduler\n * @return {Observable<any>}\n * @method cache\n * @owner Observable\n */\nfunction cache(bufferSize, windowTime, scheduler) {\n    if (bufferSize === void 0) { bufferSize = Number.POSITIVE_INFINITY; }\n    if (windowTime === void 0) { windowTime = Number.POSITIVE_INFINITY; }\n    var subject;\n    var source = this;\n    var refs = 0;\n    var outerSub;\n    var getSubject = function () {\n        subject = new ReplaySubject_1.ReplaySubject(bufferSize, windowTime, scheduler);\n        return subject;\n    };\n    return new Observable_1.Observable(function (observer) {\n        if (!subject) {\n            subject = getSubject();\n            outerSub = source.subscribe(function (value) { return subject.next(value); }, function (err) {\n                var s = subject;\n                subject = null;\n                s.error(err);\n            }, function () { return subject.complete(); });\n        }\n        refs++;\n        if (!subject) {\n            subject = getSubject();\n        }\n        var innerSub = subject.subscribe(observer);\n        return function () {\n            refs--;\n            if (innerSub) {\n                innerSub.unsubscribe();\n            }\n            if (refs === 0) {\n                outerSub.unsubscribe();\n            }\n        };\n    });\n}\nexports.cache = cache;\n//# sourceMappingURL=cache.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// /workspace/Energy-Consumption/~/rxjs/operator/cache.js\n// module id = 895\n// module chunks = 0 1","\"use strict\";\nvar combineLatest_1 = require('./combineLatest');\n/**\n * Converts a higher-order Observable into a first-order Observable by waiting\n * for the outer Observable to complete, then applying {@link combineLatest}.\n *\n * <span class=\"informal\">Flattens an Observable-of-Observables by applying\n * {@link combineLatest} when the Observable-of-Observables completes.</span>\n *\n * <img src=\"./img/combineAll.png\" width=\"100%\">\n *\n * Takes an Observable of Observables, and collects all Observables from it.\n * Once the outer Observable completes, it subscribes to all collected\n * Observables and combines their values using the {@link combineLatest}\n * strategy, such that:\n * - Every time an inner Observable emits, the output Observable emits.\n * - When the returned observable emits, it emits all of the latest values by:\n *   - If a `project` function is provided, it is called with each recent value\n *     from each inner Observable in whatever order they arrived, and the result\n *     of the `project` function is what is emitted by the output Observable.\n *   - If there is no `project` function, an array of all of the most recent\n *     values is emitted by the output Observable.\n *\n * @example <caption>Map two click events to a finite interval Observable, then apply combineAll</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var higherOrder = clicks.map(ev =>\n *   Rx.Observable.interval(Math.random()*2000).take(3)\n * ).take(2);\n * var result = higherOrder.combineAll();\n * result.subscribe(x => console.log(x));\n *\n * @see {@link combineLatest}\n * @see {@link mergeAll}\n *\n * @param {function} [project] An optional function to map the most recent\n * values from each inner Observable into a new result. Takes each of the most\n * recent values from each collected inner Observable as arguments, in order.\n * @return {Observable} An Observable of projected results or arrays of recent\n * values.\n * @method combineAll\n * @owner Observable\n */\nfunction combineAll(project) {\n    return this.lift(new combineLatest_1.CombineLatestOperator(project));\n}\nexports.combineAll = combineAll;\n//# sourceMappingURL=combineAll.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// /workspace/Energy-Consumption/~/rxjs/operator/combineAll.js\n// module id = 896\n// module chunks = 0 1","\"use strict\";\nvar mergeMapTo_1 = require('./mergeMapTo');\n/**\n * Projects each source value to the same Observable which is merged multiple\n * times in a serialized fashion on the output Observable.\n *\n * <span class=\"informal\">It's like {@link concatMap}, but maps each value\n * always to the same inner Observable.</span>\n *\n * <img src=\"./img/concatMapTo.png\" width=\"100%\">\n *\n * Maps each source value to the given Observable `innerObservable` regardless\n * of the source value, and then flattens those resulting Observables into one\n * single Observable, which is the output Observable. Each new `innerObservable`\n * instance emitted on the output Observable is concatenated with the previous\n * `innerObservable` instance.\n *\n * __Warning:__ if source values arrive endlessly and faster than their\n * corresponding inner Observables can complete, it will result in memory issues\n * as inner Observables amass in an unbounded buffer waiting for their turn to\n * be subscribed to.\n *\n * Note: `concatMapTo` is equivalent to `mergeMapTo` with concurrency parameter\n * set to `1`.\n *\n * @example <caption>For each click event, tick every second from 0 to 3, with no concurrency</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.concatMapTo(Rx.Observable.interval(1000).take(4));\n * result.subscribe(x => console.log(x));\n *\n * @see {@link concat}\n * @see {@link concatAll}\n * @see {@link concatMap}\n * @see {@link mergeMapTo}\n * @see {@link switchMapTo}\n *\n * @param {Observable} innerObservable An Observable to replace each value from\n * the source Observable.\n * @param {function(outerValue: T, innerValue: I, outerIndex: number, innerIndex: number): any} [resultSelector]\n * A function to produce the value on the output Observable based on the values\n * and the indices of the source (outer) emission and the inner Observable\n * emission. The arguments passed to this function are:\n * - `outerValue`: the value that came from the source\n * - `innerValue`: the value that came from the projected Observable\n * - `outerIndex`: the \"index\" of the value that came from the source\n * - `innerIndex`: the \"index\" of the value from the projected Observable\n * @return {Observable} An observable of values merged together by joining the\n * passed observable with itself, one after the other, for each value emitted\n * from the source.\n * @method concatMapTo\n * @owner Observable\n */\nfunction concatMapTo(innerObservable, resultSelector) {\n    return this.lift(new mergeMapTo_1.MergeMapToOperator(innerObservable, resultSelector, 1));\n}\nexports.concatMapTo = concatMapTo;\n//# sourceMappingURL=concatMapTo.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// /workspace/Energy-Consumption/~/rxjs/operator/concatMapTo.js\n// module id = 897\n// module chunks = 0 1","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Subscriber_1 = require('../Subscriber');\n/**\n * Counts the number of emissions on the source and emits that number when the\n * source completes.\n *\n * <span class=\"informal\">Tells how many values were emitted, when the source\n * completes.</span>\n *\n * <img src=\"./img/count.png\" width=\"100%\">\n *\n * `count` transforms an Observable that emits values into an Observable that\n * emits a single value that represents the number of values emitted by the\n * source Observable. If the source Observable terminates with an error, `count`\n * will pass this error notification along without emitting an value first. If\n * the source Observable does not terminate at all, `count` will neither emit\n * a value nor terminate. This operator takes an optional `predicate` function\n * as argument, in which case the output emission will represent the number of\n * source values that matched `true` with the `predicate`.\n *\n * @example <caption>Counts how many seconds have passed before the first click happened</caption>\n * var seconds = Rx.Observable.interval(1000);\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var secondsBeforeClick = seconds.takeUntil(clicks);\n * var result = secondsBeforeClick.count();\n * result.subscribe(x => console.log(x));\n *\n * @example <caption>Counts how many odd numbers are there between 1 and 7</caption>\n * var numbers = Rx.Observable.range(1, 7);\n * var result = numbers.count(i => i % 2 === 1);\n * result.subscribe(x => console.log(x));\n *\n * @see {@link max}\n * @see {@link min}\n * @see {@link reduce}\n *\n * @param {function(value: T, i: number, source: Observable<T>): boolean} [predicate] A\n * boolean function to select what values are to be counted. It is provided with\n * arguments of:\n * - `value`: the value from the source Observable.\n * - `index`: the (zero-based) \"index\" of the value from the source Observable.\n * - `source`: the source Observable instance itself.\n * @return {Observable} An Observable of one number that represents the count as\n * described above.\n * @method count\n * @owner Observable\n */\nfunction count(predicate) {\n    return this.lift(new CountOperator(predicate, this));\n}\nexports.count = count;\nvar CountOperator = (function () {\n    function CountOperator(predicate, source) {\n        this.predicate = predicate;\n        this.source = source;\n    }\n    CountOperator.prototype.call = function (subscriber, source) {\n        return source._subscribe(new CountSubscriber(subscriber, this.predicate, this.source));\n    };\n    return CountOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar CountSubscriber = (function (_super) {\n    __extends(CountSubscriber, _super);\n    function CountSubscriber(destination, predicate, source) {\n        _super.call(this, destination);\n        this.predicate = predicate;\n        this.source = source;\n        this.count = 0;\n        this.index = 0;\n    }\n    CountSubscriber.prototype._next = function (value) {\n        if (this.predicate) {\n            this._tryPredicate(value);\n        }\n        else {\n            this.count++;\n        }\n    };\n    CountSubscriber.prototype._tryPredicate = function (value) {\n        var result;\n        try {\n            result = this.predicate(value, this.index++, this.source);\n        }\n        catch (err) {\n            this.destination.error(err);\n            return;\n        }\n        if (result) {\n            this.count++;\n        }\n    };\n    CountSubscriber.prototype._complete = function () {\n        this.destination.next(this.count);\n        this.destination.complete();\n    };\n    return CountSubscriber;\n}(Subscriber_1.Subscriber));\n//# sourceMappingURL=count.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// /workspace/Energy-Consumption/~/rxjs/operator/count.js\n// module id = 898\n// module chunks = 0 1","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar OuterSubscriber_1 = require('../OuterSubscriber');\nvar subscribeToResult_1 = require('../util/subscribeToResult');\n/**\n * Emits a value from the source Observable only after a particular time span\n * determined by another Observable has passed without another source emission.\n *\n * <span class=\"informal\">It's like {@link debounceTime}, but the time span of\n * emission silence is determined by a second Observable.</span>\n *\n * <img src=\"./img/debounce.png\" width=\"100%\">\n *\n * `debounce` delays values emitted by the source Observable, but drops previous\n * pending delayed emissions if a new value arrives on the source Observable.\n * This operator keeps track of the most recent value from the source\n * Observable, and spawns a duration Observable by calling the\n * `durationSelector` function. The value is emitted only when the duration\n * Observable emits a value or completes, and if no other value was emitted on\n * the source Observable since the duration Observable was spawned. If a new\n * value appears before the duration Observable emits, the previous value will\n * be dropped and will not be emitted on the output Observable.\n *\n * Like {@link debounceTime}, this is a rate-limiting operator, and also a\n * delay-like operator since output emissions do not necessarily occur at the\n * same time as they did on the source Observable.\n *\n * @example <caption>Emit the most recent click after a burst of clicks</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.debounce(() => Rx.Observable.interval(1000));\n * result.subscribe(x => console.log(x));\n *\n * @see {@link audit}\n * @see {@link debounceTime}\n * @see {@link delayWhen}\n * @see {@link throttle}\n *\n * @param {function(value: T): Observable|Promise} durationSelector A function\n * that receives a value from the source Observable, for computing the timeout\n * duration for each source value, returned as an Observable or a Promise.\n * @return {Observable} An Observable that delays the emissions of the source\n * Observable by the specified duration Observable returned by\n * `durationSelector`, and may drop some values if they occur too frequently.\n * @method debounce\n * @owner Observable\n */\nfunction debounce(durationSelector) {\n    return this.lift(new DebounceOperator(durationSelector));\n}\nexports.debounce = debounce;\nvar DebounceOperator = (function () {\n    function DebounceOperator(durationSelector) {\n        this.durationSelector = durationSelector;\n    }\n    DebounceOperator.prototype.call = function (subscriber, source) {\n        return source._subscribe(new DebounceSubscriber(subscriber, this.durationSelector));\n    };\n    return DebounceOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar DebounceSubscriber = (function (_super) {\n    __extends(DebounceSubscriber, _super);\n    function DebounceSubscriber(destination, durationSelector) {\n        _super.call(this, destination);\n        this.durationSelector = durationSelector;\n        this.hasValue = false;\n        this.durationSubscription = null;\n    }\n    DebounceSubscriber.prototype._next = function (value) {\n        try {\n            var result = this.durationSelector.call(this, value);\n            if (result) {\n                this._tryNext(value, result);\n            }\n        }\n        catch (err) {\n            this.destination.error(err);\n        }\n    };\n    DebounceSubscriber.prototype._complete = function () {\n        this.emitValue();\n        this.destination.complete();\n    };\n    DebounceSubscriber.prototype._tryNext = function (value, duration) {\n        var subscription = this.durationSubscription;\n        this.value = value;\n        this.hasValue = true;\n        if (subscription) {\n            subscription.unsubscribe();\n            this.remove(subscription);\n        }\n        subscription = subscribeToResult_1.subscribeToResult(this, duration);\n        if (!subscription.closed) {\n            this.add(this.durationSubscription = subscription);\n        }\n    };\n    DebounceSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {\n        this.emitValue();\n    };\n    DebounceSubscriber.prototype.notifyComplete = function () {\n        this.emitValue();\n    };\n    DebounceSubscriber.prototype.emitValue = function () {\n        if (this.hasValue) {\n            var value = this.value;\n            var subscription = this.durationSubscription;\n            if (subscription) {\n                this.durationSubscription = null;\n                subscription.unsubscribe();\n                this.remove(subscription);\n            }\n            this.value = null;\n            this.hasValue = false;\n            _super.prototype._next.call(this, value);\n        }\n    };\n    return DebounceSubscriber;\n}(OuterSubscriber_1.OuterSubscriber));\n//# sourceMappingURL=debounce.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// /workspace/Energy-Consumption/~/rxjs/operator/debounce.js\n// module id = 899\n// module chunks = 0 1","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Subscriber_1 = require('../Subscriber');\nvar async_1 = require('../scheduler/async');\n/**\n * Emits a value from the source Observable only after a particular time span\n * has passed without another source emission.\n *\n * <span class=\"informal\">It's like {@link delay}, but passes only the most\n * recent value from each burst of emissions.</span>\n *\n * <img src=\"./img/debounceTime.png\" width=\"100%\">\n *\n * `debounceTime` delays values emitted by the source Observable, but drops\n * previous pending delayed emissions if a new value arrives on the source\n * Observable. This operator keeps track of the most recent value from the\n * source Observable, and emits that only when `dueTime` enough time has passed\n * without any other value appearing on the source Observable. If a new value\n * appears before `dueTime` silence occurs, the previous value will be dropped\n * and will not be emitted on the output Observable.\n *\n * This is a rate-limiting operator, because it is impossible for more than one\n * value to be emitted in any time window of duration `dueTime`, but it is also\n * a delay-like operator since output emissions do not occur at the same time as\n * they did on the source Observable. Optionally takes a {@link Scheduler} for\n * managing timers.\n *\n * @example <caption>Emit the most recent click after a burst of clicks</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.debounceTime(1000);\n * result.subscribe(x => console.log(x));\n *\n * @see {@link auditTime}\n * @see {@link debounce}\n * @see {@link delay}\n * @see {@link sampleTime}\n * @see {@link throttleTime}\n *\n * @param {number} dueTime The timeout duration in milliseconds (or the time\n * unit determined internally by the optional `scheduler`) for the window of\n * time required to wait for emission silence before emitting the most recent\n * source value.\n * @param {Scheduler} [scheduler=async] The {@link Scheduler} to use for\n * managing the timers that handle the timeout for each value.\n * @return {Observable} An Observable that delays the emissions of the source\n * Observable by the specified `dueTime`, and may drop some values if they occur\n * too frequently.\n * @method debounceTime\n * @owner Observable\n */\nfunction debounceTime(dueTime, scheduler) {\n    if (scheduler === void 0) { scheduler = async_1.async; }\n    return this.lift(new DebounceTimeOperator(dueTime, scheduler));\n}\nexports.debounceTime = debounceTime;\nvar DebounceTimeOperator = (function () {\n    function DebounceTimeOperator(dueTime, scheduler) {\n        this.dueTime = dueTime;\n        this.scheduler = scheduler;\n    }\n    DebounceTimeOperator.prototype.call = function (subscriber, source) {\n        return source._subscribe(new DebounceTimeSubscriber(subscriber, this.dueTime, this.scheduler));\n    };\n    return DebounceTimeOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar DebounceTimeSubscriber = (function (_super) {\n    __extends(DebounceTimeSubscriber, _super);\n    function DebounceTimeSubscriber(destination, dueTime, scheduler) {\n        _super.call(this, destination);\n        this.dueTime = dueTime;\n        this.scheduler = scheduler;\n        this.debouncedSubscription = null;\n        this.lastValue = null;\n        this.hasValue = false;\n    }\n    DebounceTimeSubscriber.prototype._next = function (value) {\n        this.clearDebounce();\n        this.lastValue = value;\n        this.hasValue = true;\n        this.add(this.debouncedSubscription = this.scheduler.schedule(dispatchNext, this.dueTime, this));\n    };\n    DebounceTimeSubscriber.prototype._complete = function () {\n        this.debouncedNext();\n        this.destination.complete();\n    };\n    DebounceTimeSubscriber.prototype.debouncedNext = function () {\n        this.clearDebounce();\n        if (this.hasValue) {\n            this.destination.next(this.lastValue);\n            this.lastValue = null;\n            this.hasValue = false;\n        }\n    };\n    DebounceTimeSubscriber.prototype.clearDebounce = function () {\n        var debouncedSubscription = this.debouncedSubscription;\n        if (debouncedSubscription !== null) {\n            this.remove(debouncedSubscription);\n            debouncedSubscription.unsubscribe();\n            this.debouncedSubscription = null;\n        }\n    };\n    return DebounceTimeSubscriber;\n}(Subscriber_1.Subscriber));\nfunction dispatchNext(subscriber) {\n    subscriber.debouncedNext();\n}\n//# sourceMappingURL=debounceTime.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// /workspace/Energy-Consumption/~/rxjs/operator/debounceTime.js\n// module id = 900\n// module chunks = 0 1","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Subscriber_1 = require('../Subscriber');\n/**\n * Emits a given value if the source Observable completes without emitting any\n * `next` value, otherwise mirrors the source Observable.\n *\n * <span class=\"informal\">If the source Observable turns out to be empty, then\n * this operator will emit a default value.</span>\n *\n * <img src=\"./img/defaultIfEmpty.png\" width=\"100%\">\n *\n * `defaultIfEmpty` emits the values emitted by the source Observable or a\n * specified default value if the source Observable is empty (completes without\n * having emitted any `next` value).\n *\n * @example <caption>If no clicks happen in 5 seconds, then emit \"no clicks\"</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var clicksBeforeFive = clicks.takeUntil(Rx.Observable.interval(5000));\n * var result = clicksBeforeFive.defaultIfEmpty('no clicks');\n * result.subscribe(x => console.log(x));\n *\n * @see {@link empty}\n * @see {@link last}\n *\n * @param {any} [defaultValue=null] The default value used if the source\n * Observable is empty.\n * @return {Observable} An Observable that emits either the specified\n * `defaultValue` if the source Observable emits no items, or the values emitted\n * by the source Observable.\n * @method defaultIfEmpty\n * @owner Observable\n */\nfunction defaultIfEmpty(defaultValue) {\n    if (defaultValue === void 0) { defaultValue = null; }\n    return this.lift(new DefaultIfEmptyOperator(defaultValue));\n}\nexports.defaultIfEmpty = defaultIfEmpty;\nvar DefaultIfEmptyOperator = (function () {\n    function DefaultIfEmptyOperator(defaultValue) {\n        this.defaultValue = defaultValue;\n    }\n    DefaultIfEmptyOperator.prototype.call = function (subscriber, source) {\n        return source._subscribe(new DefaultIfEmptySubscriber(subscriber, this.defaultValue));\n    };\n    return DefaultIfEmptyOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar DefaultIfEmptySubscriber = (function (_super) {\n    __extends(DefaultIfEmptySubscriber, _super);\n    function DefaultIfEmptySubscriber(destination, defaultValue) {\n        _super.call(this, destination);\n        this.defaultValue = defaultValue;\n        this.isEmpty = true;\n    }\n    DefaultIfEmptySubscriber.prototype._next = function (value) {\n        this.isEmpty = false;\n        this.destination.next(value);\n    };\n    DefaultIfEmptySubscriber.prototype._complete = function () {\n        if (this.isEmpty) {\n            this.destination.next(this.defaultValue);\n        }\n        this.destination.complete();\n    };\n    return DefaultIfEmptySubscriber;\n}(Subscriber_1.Subscriber));\n//# sourceMappingURL=defaultIfEmpty.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// /workspace/Energy-Consumption/~/rxjs/operator/defaultIfEmpty.js\n// module id = 901\n// module chunks = 0 1","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar async_1 = require('../scheduler/async');\nvar isDate_1 = require('../util/isDate');\nvar Subscriber_1 = require('../Subscriber');\nvar Notification_1 = require('../Notification');\n/**\n * Delays the emission of items from the source Observable by a given timeout or\n * until a given Date.\n *\n * <span class=\"informal\">Time shifts each item by some specified amount of\n * milliseconds.</span>\n *\n * <img src=\"./img/delay.png\" width=\"100%\">\n *\n * If the delay argument is a Number, this operator time shifts the source\n * Observable by that amount of time expressed in milliseconds. The relative\n * time intervals between the values are preserved.\n *\n * If the delay argument is a Date, this operator time shifts the start of the\n * Observable execution until the given date occurs.\n *\n * @example <caption>Delay each click by one second</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var delayedClicks = clicks.delay(1000); // each click emitted after 1 second\n * delayedClicks.subscribe(x => console.log(x));\n *\n * @example <caption>Delay all clicks until a future date happens</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var date = new Date('March 15, 2050 12:00:00'); // in the future\n * var delayedClicks = clicks.delay(date); // click emitted only after that date\n * delayedClicks.subscribe(x => console.log(x));\n *\n * @see {@link debounceTime}\n * @see {@link delayWhen}\n *\n * @param {number|Date} delay The delay duration in milliseconds (a `number`) or\n * a `Date` until which the emission of the source items is delayed.\n * @param {Scheduler} [scheduler=async] The Scheduler to use for\n * managing the timers that handle the time-shift for each item.\n * @return {Observable} An Observable that delays the emissions of the source\n * Observable by the specified timeout or Date.\n * @method delay\n * @owner Observable\n */\nfunction delay(delay, scheduler) {\n    if (scheduler === void 0) { scheduler = async_1.async; }\n    var absoluteDelay = isDate_1.isDate(delay);\n    var delayFor = absoluteDelay ? (+delay - scheduler.now()) : Math.abs(delay);\n    return this.lift(new DelayOperator(delayFor, scheduler));\n}\nexports.delay = delay;\nvar DelayOperator = (function () {\n    function DelayOperator(delay, scheduler) {\n        this.delay = delay;\n        this.scheduler = scheduler;\n    }\n    DelayOperator.prototype.call = function (subscriber, source) {\n        return source._subscribe(new DelaySubscriber(subscriber, this.delay, this.scheduler));\n    };\n    return DelayOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar DelaySubscriber = (function (_super) {\n    __extends(DelaySubscriber, _super);\n    function DelaySubscriber(destination, delay, scheduler) {\n        _super.call(this, destination);\n        this.delay = delay;\n        this.scheduler = scheduler;\n        this.queue = [];\n        this.active = false;\n        this.errored = false;\n    }\n    DelaySubscriber.dispatch = function (state) {\n        var source = state.source;\n        var queue = source.queue;\n        var scheduler = state.scheduler;\n        var destination = state.destination;\n        while (queue.length > 0 && (queue[0].time - scheduler.now()) <= 0) {\n            queue.shift().notification.observe(destination);\n        }\n        if (queue.length > 0) {\n            var delay_1 = Math.max(0, queue[0].time - scheduler.now());\n            this.schedule(state, delay_1);\n        }\n        else {\n            source.active = false;\n        }\n    };\n    DelaySubscriber.prototype._schedule = function (scheduler) {\n        this.active = true;\n        this.add(scheduler.schedule(DelaySubscriber.dispatch, this.delay, {\n            source: this, destination: this.destination, scheduler: scheduler\n        }));\n    };\n    DelaySubscriber.prototype.scheduleNotification = function (notification) {\n        if (this.errored === true) {\n            return;\n        }\n        var scheduler = this.scheduler;\n        var message = new DelayMessage(scheduler.now() + this.delay, notification);\n        this.queue.push(message);\n        if (this.active === false) {\n            this._schedule(scheduler);\n        }\n    };\n    DelaySubscriber.prototype._next = function (value) {\n        this.scheduleNotification(Notification_1.Notification.createNext(value));\n    };\n    DelaySubscriber.prototype._error = function (err) {\n        this.errored = true;\n        this.queue = [];\n        this.destination.error(err);\n    };\n    DelaySubscriber.prototype._complete = function () {\n        this.scheduleNotification(Notification_1.Notification.createComplete());\n    };\n    return DelaySubscriber;\n}(Subscriber_1.Subscriber));\nvar DelayMessage = (function () {\n    function DelayMessage(time, notification) {\n        this.time = time;\n        this.notification = notification;\n    }\n    return DelayMessage;\n}());\n//# sourceMappingURL=delay.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// /workspace/Energy-Consumption/~/rxjs/operator/delay.js\n// module id = 902\n// module chunks = 0 1","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Subscriber_1 = require('../Subscriber');\nvar Observable_1 = require('../Observable');\nvar OuterSubscriber_1 = require('../OuterSubscriber');\nvar subscribeToResult_1 = require('../util/subscribeToResult');\n/**\n * Delays the emission of items from the source Observable by a given time span\n * determined by the emissions of another Observable.\n *\n * <span class=\"informal\">It's like {@link delay}, but the time span of the\n * delay duration is determined by a second Observable.</span>\n *\n * <img src=\"./img/delayWhen.png\" width=\"100%\">\n *\n * `delayWhen` time shifts each emitted value from the source Observable by a\n * time span determined by another Observable. When the source emits a value,\n * the `delayDurationSelector` function is called with the source value as\n * argument, and should return an Observable, called the \"duration\" Observable.\n * The source value is emitted on the output Observable only when the duration\n * Observable emits a value or completes.\n *\n * Optionally, `delayWhen` takes a second argument, `subscriptionDelay`, which\n * is an Observable. When `subscriptionDelay` emits its first value or\n * completes, the source Observable is subscribed to and starts behaving like\n * described in the previous paragraph. If `subscriptionDelay` is not provided,\n * `delayWhen` will subscribe to the source Observable as soon as the output\n * Observable is subscribed.\n *\n * @example <caption>Delay each click by a random amount of time, between 0 and 5 seconds</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var delayedClicks = clicks.delayWhen(event =>\n *   Rx.Observable.interval(Math.random() * 5000)\n * );\n * delayedClicks.subscribe(x => console.log(x));\n *\n * @see {@link debounce}\n * @see {@link delay}\n *\n * @param {function(value: T): Observable} delayDurationSelector A function that\n * returns an Observable for each value emitted by the source Observable, which\n * is then used to delay the emission of that item on the output Observable\n * until the Observable returned from this function emits a value.\n * @param {Observable} subscriptionDelay An Observable that triggers the\n * subscription to the source Observable once it emits any value.\n * @return {Observable} An Observable that delays the emissions of the source\n * Observable by an amount of time specified by the Observable returned by\n * `delayDurationSelector`.\n * @method delayWhen\n * @owner Observable\n */\nfunction delayWhen(delayDurationSelector, subscriptionDelay) {\n    if (subscriptionDelay) {\n        return new SubscriptionDelayObservable(this, subscriptionDelay)\n            .lift(new DelayWhenOperator(delayDurationSelector));\n    }\n    return this.lift(new DelayWhenOperator(delayDurationSelector));\n}\nexports.delayWhen = delayWhen;\nvar DelayWhenOperator = (function () {\n    function DelayWhenOperator(delayDurationSelector) {\n        this.delayDurationSelector = delayDurationSelector;\n    }\n    DelayWhenOperator.prototype.call = function (subscriber, source) {\n        return source._subscribe(new DelayWhenSubscriber(subscriber, this.delayDurationSelector));\n    };\n    return DelayWhenOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar DelayWhenSubscriber = (function (_super) {\n    __extends(DelayWhenSubscriber, _super);\n    function DelayWhenSubscriber(destination, delayDurationSelector) {\n        _super.call(this, destination);\n        this.delayDurationSelector = delayDurationSelector;\n        this.completed = false;\n        this.delayNotifierSubscriptions = [];\n        this.values = [];\n    }\n    DelayWhenSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {\n        this.destination.next(outerValue);\n        this.removeSubscription(innerSub);\n        this.tryComplete();\n    };\n    DelayWhenSubscriber.prototype.notifyError = function (error, innerSub) {\n        this._error(error);\n    };\n    DelayWhenSubscriber.prototype.notifyComplete = function (innerSub) {\n        var value = this.removeSubscription(innerSub);\n        if (value) {\n            this.destination.next(value);\n        }\n        this.tryComplete();\n    };\n    DelayWhenSubscriber.prototype._next = function (value) {\n        try {\n            var delayNotifier = this.delayDurationSelector(value);\n            if (delayNotifier) {\n                this.tryDelay(delayNotifier, value);\n            }\n        }\n        catch (err) {\n            this.destination.error(err);\n        }\n    };\n    DelayWhenSubscriber.prototype._complete = function () {\n        this.completed = true;\n        this.tryComplete();\n    };\n    DelayWhenSubscriber.prototype.removeSubscription = function (subscription) {\n        subscription.unsubscribe();\n        var subscriptionIdx = this.delayNotifierSubscriptions.indexOf(subscription);\n        var value = null;\n        if (subscriptionIdx !== -1) {\n            value = this.values[subscriptionIdx];\n            this.delayNotifierSubscriptions.splice(subscriptionIdx, 1);\n            this.values.splice(subscriptionIdx, 1);\n        }\n        return value;\n    };\n    DelayWhenSubscriber.prototype.tryDelay = function (delayNotifier, value) {\n        var notifierSubscription = subscribeToResult_1.subscribeToResult(this, delayNotifier, value);\n        this.add(notifierSubscription);\n        this.delayNotifierSubscriptions.push(notifierSubscription);\n        this.values.push(value);\n    };\n    DelayWhenSubscriber.prototype.tryComplete = function () {\n        if (this.completed && this.delayNotifierSubscriptions.length === 0) {\n            this.destination.complete();\n        }\n    };\n    return DelayWhenSubscriber;\n}(OuterSubscriber_1.OuterSubscriber));\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar SubscriptionDelayObservable = (function (_super) {\n    __extends(SubscriptionDelayObservable, _super);\n    function SubscriptionDelayObservable(source, subscriptionDelay) {\n        _super.call(this);\n        this.source = source;\n        this.subscriptionDelay = subscriptionDelay;\n    }\n    SubscriptionDelayObservable.prototype._subscribe = function (subscriber) {\n        this.subscriptionDelay.subscribe(new SubscriptionDelaySubscriber(subscriber, this.source));\n    };\n    return SubscriptionDelayObservable;\n}(Observable_1.Observable));\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar SubscriptionDelaySubscriber = (function (_super) {\n    __extends(SubscriptionDelaySubscriber, _super);\n    function SubscriptionDelaySubscriber(parent, source) {\n        _super.call(this);\n        this.parent = parent;\n        this.source = source;\n        this.sourceSubscribed = false;\n    }\n    SubscriptionDelaySubscriber.prototype._next = function (unused) {\n        this.subscribeToSource();\n    };\n    SubscriptionDelaySubscriber.prototype._error = function (err) {\n        this.unsubscribe();\n        this.parent.error(err);\n    };\n    SubscriptionDelaySubscriber.prototype._complete = function () {\n        this.subscribeToSource();\n    };\n    SubscriptionDelaySubscriber.prototype.subscribeToSource = function () {\n        if (!this.sourceSubscribed) {\n            this.sourceSubscribed = true;\n            this.unsubscribe();\n            this.source.subscribe(this.parent);\n        }\n    };\n    return SubscriptionDelaySubscriber;\n}(Subscriber_1.Subscriber));\n//# sourceMappingURL=delayWhen.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// /workspace/Energy-Consumption/~/rxjs/operator/delayWhen.js\n// module id = 903\n// module chunks = 0 1","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Subscriber_1 = require('../Subscriber');\n/**\n * Converts an Observable of {@link Notification} objects into the emissions\n * that they represent.\n *\n * <span class=\"informal\">Unwraps {@link Notification} objects as actual `next`,\n * `error` and `complete` emissions. The opposite of {@link materialize}.</span>\n *\n * <img src=\"./img/dematerialize.png\" width=\"100%\">\n *\n * `dematerialize` is assumed to operate an Observable that only emits\n * {@link Notification} objects as `next` emissions, and does not emit any\n * `error`. Such Observable is the output of a `materialize` operation. Those\n * notifications are then unwrapped using the metadata they contain, and emitted\n * as `next`, `error`, and `complete` on the output Observable.\n *\n * Use this operator in conjunction with {@link materialize}.\n *\n * @example <caption>Convert an Observable of Notifications to an actual Observable</caption>\n * var notifA = new Rx.Notification('N', 'A');\n * var notifB = new Rx.Notification('N', 'B');\n * var notifE = new Rx.Notification('E', void 0,\n *   new TypeError('x.toUpperCase is not a function')\n * );\n * var materialized = Rx.Observable.of(notifA, notifB, notifE);\n * var upperCase = materialized.dematerialize();\n * upperCase.subscribe(x => console.log(x), e => console.error(e));\n *\n * @see {@link Notification}\n * @see {@link materialize}\n *\n * @return {Observable} An Observable that emits items and notifications\n * embedded in Notification objects emitted by the source Observable.\n * @method dematerialize\n * @owner Observable\n */\nfunction dematerialize() {\n    return this.lift(new DeMaterializeOperator());\n}\nexports.dematerialize = dematerialize;\nvar DeMaterializeOperator = (function () {\n    function DeMaterializeOperator() {\n    }\n    DeMaterializeOperator.prototype.call = function (subscriber, source) {\n        return source._subscribe(new DeMaterializeSubscriber(subscriber));\n    };\n    return DeMaterializeOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar DeMaterializeSubscriber = (function (_super) {\n    __extends(DeMaterializeSubscriber, _super);\n    function DeMaterializeSubscriber(destination) {\n        _super.call(this, destination);\n    }\n    DeMaterializeSubscriber.prototype._next = function (value) {\n        value.observe(this.destination);\n    };\n    return DeMaterializeSubscriber;\n}(Subscriber_1.Subscriber));\n//# sourceMappingURL=dematerialize.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// /workspace/Energy-Consumption/~/rxjs/operator/dematerialize.js\n// module id = 904\n// module chunks = 0 1","\"use strict\";\nvar distinct_1 = require('./distinct');\n/**\n * Returns an Observable that emits all items emitted by the source Observable that are distinct by comparison from previous items,\n * using a property accessed by using the key provided to check if the two items are distinct.\n * If a comparator function is provided, then it will be called for each item to test for whether or not that value should be emitted.\n * If a comparator function is not provided, an equality check is used by default.\n * As the internal HashSet of this operator grows larger and larger, care should be taken in the domain of inputs this operator may see.\n * An optional parameter is also provided such that an Observable can be provided to queue the internal HashSet to flush the values it holds.\n * @param {string} key string key for object property lookup on each item.\n * @param {function} [compare] optional comparison function called to test if an item is distinct from previous items in the source.\n * @param {Observable} [flushes] optional Observable for flushing the internal HashSet of the operator.\n * @return {Observable} an Observable that emits items from the source Observable with distinct values.\n * @method distinctKey\n * @owner Observable\n */\nfunction distinctKey(key, compare, flushes) {\n    return distinct_1.distinct.call(this, function (x, y) {\n        if (compare) {\n            return compare(x[key], y[key]);\n        }\n        return x[key] === y[key];\n    }, flushes);\n}\nexports.distinctKey = distinctKey;\n//# sourceMappingURL=distinctKey.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// /workspace/Energy-Consumption/~/rxjs/operator/distinctKey.js\n// module id = 905\n// module chunks = 0 1","\"use strict\";\nvar distinctUntilChanged_1 = require('./distinctUntilChanged');\n/**\n * Returns an Observable that emits all items emitted by the source Observable that are distinct by comparison from the previous item,\n * using a property accessed by using the key provided to check if the two items are distinct.\n * If a comparator function is provided, then it will be called for each item to test for whether or not that value should be emitted.\n * If a comparator function is not provided, an equality check is used by default.\n * @param {string} key string key for object property lookup on each item.\n * @param {function} [compare] optional comparison function called to test if an item is distinct from the previous item in the source.\n * @return {Observable} an Observable that emits items from the source Observable with distinct values based on the key specified.\n * @method distinctUntilKeyChanged\n * @owner Observable\n */\nfunction distinctUntilKeyChanged(key, compare) {\n    return distinctUntilChanged_1.distinctUntilChanged.call(this, function (x, y) {\n        if (compare) {\n            return compare(x[key], y[key]);\n        }\n        return x[key] === y[key];\n    });\n}\nexports.distinctUntilKeyChanged = distinctUntilKeyChanged;\n//# sourceMappingURL=distinctUntilKeyChanged.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// /workspace/Energy-Consumption/~/rxjs/operator/distinctUntilKeyChanged.js\n// module id = 906\n// module chunks = 0 1","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Subscriber_1 = require('../Subscriber');\n/**\n * Perform a side effect for every emission on the source Observable, but return\n * an Observable that is identical to the source.\n *\n * <span class=\"informal\">Intercepts each emission on the source and runs a\n * function, but returns an output which is identical to the source.</span>\n *\n * <img src=\"./img/do.png\" width=\"100%\">\n *\n * Returns a mirrored Observable of the source Observable, but modified so that\n * the provided Observer is called to perform a side effect for every value,\n * error, and completion emitted by the source. Any errors that are thrown in\n * the aforementioned Observer or handlers are safely sent down the error path\n * of the output Observable.\n *\n * This operator is useful for debugging your Observables for the correct values\n * or performing other side effects.\n *\n * Note: this is different to a `subscribe` on the Observable. If the Observable\n * returned by `do` is not subscribed, the side effects specified by the\n * Observer will never happen. `do` therefore simply spies on existing\n * execution, it does not trigger an execution to happen like `subscribe` does.\n *\n * @example <caption>Map every every click to the clientX position of that click, while also logging the click event</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var positions = clicks\n *   .do(ev => console.log(ev))\n *   .map(ev => ev.clientX);\n * positions.subscribe(x => console.log(x));\n *\n * @see {@link map}\n * @see {@link subscribe}\n *\n * @param {Observer|function} [nextOrObserver] A normal Observer object or a\n * callback for `next`.\n * @param {function} [error] Callback for errors in the source.\n * @param {function} [complete] Callback for the completion of the source.\n * @return {Observable} An Observable identical to the source, but runs the\n * specified Observer or callback(s) for each item.\n * @method do\n * @name do\n * @owner Observable\n */\nfunction _do(nextOrObserver, error, complete) {\n    return this.lift(new DoOperator(nextOrObserver, error, complete));\n}\nexports._do = _do;\nvar DoOperator = (function () {\n    function DoOperator(nextOrObserver, error, complete) {\n        this.nextOrObserver = nextOrObserver;\n        this.error = error;\n        this.complete = complete;\n    }\n    DoOperator.prototype.call = function (subscriber, source) {\n        return source._subscribe(new DoSubscriber(subscriber, this.nextOrObserver, this.error, this.complete));\n    };\n    return DoOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar DoSubscriber = (function (_super) {\n    __extends(DoSubscriber, _super);\n    function DoSubscriber(destination, nextOrObserver, error, complete) {\n        _super.call(this, destination);\n        var safeSubscriber = new Subscriber_1.Subscriber(nextOrObserver, error, complete);\n        safeSubscriber.syncErrorThrowable = true;\n        this.add(safeSubscriber);\n        this.safeSubscriber = safeSubscriber;\n    }\n    DoSubscriber.prototype._next = function (value) {\n        var safeSubscriber = this.safeSubscriber;\n        safeSubscriber.next(value);\n        if (safeSubscriber.syncErrorThrown) {\n            this.destination.error(safeSubscriber.syncErrorValue);\n        }\n        else {\n            this.destination.next(value);\n        }\n    };\n    DoSubscriber.prototype._error = function (err) {\n        var safeSubscriber = this.safeSubscriber;\n        safeSubscriber.error(err);\n        if (safeSubscriber.syncErrorThrown) {\n            this.destination.error(safeSubscriber.syncErrorValue);\n        }\n        else {\n            this.destination.error(err);\n        }\n    };\n    DoSubscriber.prototype._complete = function () {\n        var safeSubscriber = this.safeSubscriber;\n        safeSubscriber.complete();\n        if (safeSubscriber.syncErrorThrown) {\n            this.destination.error(safeSubscriber.syncErrorValue);\n        }\n        else {\n            this.destination.complete();\n        }\n    };\n    return DoSubscriber;\n}(Subscriber_1.Subscriber));\n//# sourceMappingURL=do.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// /workspace/Energy-Consumption/~/rxjs/operator/do.js\n// module id = 907\n// module chunks = 0 1","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Subscriber_1 = require('../Subscriber');\nvar ArgumentOutOfRangeError_1 = require('../util/ArgumentOutOfRangeError');\n/**\n * Emits the single value at the specified `index` in a sequence of emissions\n * from the source Observable.\n *\n * <span class=\"informal\">Emits only the i-th value, then completes.</span>\n *\n * <img src=\"./img/elementAt.png\" width=\"100%\">\n *\n * `elementAt` returns an Observable that emits the item at the specified\n * `index` in the source Observable, or a default value if that `index` is out\n * of range and the `default` argument is provided. If the `default` argument is\n * not given and the `index` is out of range, the output Observable will emit an\n * `ArgumentOutOfRangeError` error.\n *\n * @example <caption>Emit only the third click event</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.elementAt(2);\n * result.subscribe(x => console.log(x));\n *\n * @see {@link first}\n * @see {@link last}\n * @see {@link skip}\n * @see {@link single}\n * @see {@link take}\n *\n * @throws {ArgumentOutOfRangeError} When using `elementAt(i)`, it delivers an\n * ArgumentOutOrRangeError to the Observer's `error` callback if `i < 0` or the\n * Observable has completed before emitting the i-th `next` notification.\n *\n * @param {number} index Is the number `i` for the i-th source emission that has\n * happened since the subscription, starting from the number `0`.\n * @param {T} [defaultValue] The default value returned for missing indices.\n * @return {Observable} An Observable that emits a single item, if it is found.\n * Otherwise, will emit the default value if given. If not, then emits an error.\n * @method elementAt\n * @owner Observable\n */\nfunction elementAt(index, defaultValue) {\n    return this.lift(new ElementAtOperator(index, defaultValue));\n}\nexports.elementAt = elementAt;\nvar ElementAtOperator = (function () {\n    function ElementAtOperator(index, defaultValue) {\n        this.index = index;\n        this.defaultValue = defaultValue;\n        if (index < 0) {\n            throw new ArgumentOutOfRangeError_1.ArgumentOutOfRangeError;\n        }\n    }\n    ElementAtOperator.prototype.call = function (subscriber, source) {\n        return source._subscribe(new ElementAtSubscriber(subscriber, this.index, this.defaultValue));\n    };\n    return ElementAtOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar ElementAtSubscriber = (function (_super) {\n    __extends(ElementAtSubscriber, _super);\n    function ElementAtSubscriber(destination, index, defaultValue) {\n        _super.call(this, destination);\n        this.index = index;\n        this.defaultValue = defaultValue;\n    }\n    ElementAtSubscriber.prototype._next = function (x) {\n        if (this.index-- === 0) {\n            this.destination.next(x);\n            this.destination.complete();\n        }\n    };\n    ElementAtSubscriber.prototype._complete = function () {\n        var destination = this.destination;\n        if (this.index >= 0) {\n            if (typeof this.defaultValue !== 'undefined') {\n                destination.next(this.defaultValue);\n            }\n            else {\n                destination.error(new ArgumentOutOfRangeError_1.ArgumentOutOfRangeError);\n            }\n        }\n        destination.complete();\n    };\n    return ElementAtSubscriber;\n}(Subscriber_1.Subscriber));\n//# sourceMappingURL=elementAt.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// /workspace/Energy-Consumption/~/rxjs/operator/elementAt.js\n// module id = 908\n// module chunks = 0 1","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar OuterSubscriber_1 = require('../OuterSubscriber');\nvar subscribeToResult_1 = require('../util/subscribeToResult');\n/**\n * Converts a higher-order Observable into a first-order Observable by dropping\n * inner Observables while the previous inner Observable has not yet completed.\n *\n * <span class=\"informal\">Flattens an Observable-of-Observables by dropping the\n * next inner Observables while the current inner is still executing.</span>\n *\n * <img src=\"./img/exhaust.png\" width=\"100%\">\n *\n * `exhaust` subscribes to an Observable that emits Observables, also known as a\n * higher-order Observable. Each time it observes one of these emitted inner\n * Observables, the output Observable begins emitting the items emitted by that\n * inner Observable. So far, it behaves like {@link mergeAll}. However,\n * `exhaust` ignores every new inner Observable if the previous Observable has\n * not yet completed. Once that one completes, it will accept and flatten the\n * next inner Observable and repeat this process.\n *\n * @example <caption>Run a finite timer for each click, only if there is no currently active timer</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var higherOrder = clicks.map((ev) => Rx.Observable.interval(1000));\n * var result = higherOrder.exhaust();\n * result.subscribe(x => console.log(x));\n *\n * @see {@link combineAll}\n * @see {@link concatAll}\n * @see {@link switch}\n * @see {@link mergeAll}\n * @see {@link exhaustMap}\n * @see {@link zipAll}\n *\n * @return {Observable} Returns an Observable that takes a source of Observables\n * and propagates the first observable exclusively until it completes before\n * subscribing to the next.\n * @method exhaust\n * @owner Observable\n */\nfunction exhaust() {\n    return this.lift(new SwitchFirstOperator());\n}\nexports.exhaust = exhaust;\nvar SwitchFirstOperator = (function () {\n    function SwitchFirstOperator() {\n    }\n    SwitchFirstOperator.prototype.call = function (subscriber, source) {\n        return source._subscribe(new SwitchFirstSubscriber(subscriber));\n    };\n    return SwitchFirstOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar SwitchFirstSubscriber = (function (_super) {\n    __extends(SwitchFirstSubscriber, _super);\n    function SwitchFirstSubscriber(destination) {\n        _super.call(this, destination);\n        this.hasCompleted = false;\n        this.hasSubscription = false;\n    }\n    SwitchFirstSubscriber.prototype._next = function (value) {\n        if (!this.hasSubscription) {\n            this.hasSubscription = true;\n            this.add(subscribeToResult_1.subscribeToResult(this, value));\n        }\n    };\n    SwitchFirstSubscriber.prototype._complete = function () {\n        this.hasCompleted = true;\n        if (!this.hasSubscription) {\n            this.destination.complete();\n        }\n    };\n    SwitchFirstSubscriber.prototype.notifyComplete = function (innerSub) {\n        this.remove(innerSub);\n        this.hasSubscription = false;\n        if (this.hasCompleted) {\n            this.destination.complete();\n        }\n    };\n    return SwitchFirstSubscriber;\n}(OuterSubscriber_1.OuterSubscriber));\n//# sourceMappingURL=exhaust.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// /workspace/Energy-Consumption/~/rxjs/operator/exhaust.js\n// module id = 909\n// module chunks = 0 1","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar OuterSubscriber_1 = require('../OuterSubscriber');\nvar subscribeToResult_1 = require('../util/subscribeToResult');\n/**\n * Projects each source value to an Observable which is merged in the output\n * Observable only if the previous projected Observable has completed.\n *\n * <span class=\"informal\">Maps each value to an Observable, then flattens all of\n * these inner Observables using {@link exhaust}.</span>\n *\n * <img src=\"./img/exhaustMap.png\" width=\"100%\">\n *\n * Returns an Observable that emits items based on applying a function that you\n * supply to each item emitted by the source Observable, where that function\n * returns an (so-called \"inner\") Observable. When it projects a source value to\n * an Observable, the output Observable begins emitting the items emitted by\n * that projected Observable. However, `exhaustMap` ignores every new projected\n * Observable if the previous projected Observable has not yet completed. Once\n * that one completes, it will accept and flatten the next projected Observable\n * and repeat this process.\n *\n * @example <caption>Run a finite timer for each click, only if there is no currently active timer</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.exhaustMap((ev) => Rx.Observable.interval(1000));\n * result.subscribe(x => console.log(x));\n *\n * @see {@link concatMap}\n * @see {@link exhaust}\n * @see {@link mergeMap}\n * @see {@link switchMap}\n *\n * @param {function(value: T, ?index: number): Observable} project A function\n * that, when applied to an item emitted by the source Observable, returns an\n * Observable.\n * @param {function(outerValue: T, innerValue: I, outerIndex: number, innerIndex: number): any} [resultSelector]\n * A function to produce the value on the output Observable based on the values\n * and the indices of the source (outer) emission and the inner Observable\n * emission. The arguments passed to this function are:\n * - `outerValue`: the value that came from the source\n * - `innerValue`: the value that came from the projected Observable\n * - `outerIndex`: the \"index\" of the value that came from the source\n * - `innerIndex`: the \"index\" of the value from the projected Observable\n * @return {Observable} An Observable containing projected Observables\n * of each item of the source, ignoring projected Observables that start before\n * their preceding Observable has completed.\n * @method exhaustMap\n * @owner Observable\n */\nfunction exhaustMap(project, resultSelector) {\n    return this.lift(new SwitchFirstMapOperator(project, resultSelector));\n}\nexports.exhaustMap = exhaustMap;\nvar SwitchFirstMapOperator = (function () {\n    function SwitchFirstMapOperator(project, resultSelector) {\n        this.project = project;\n        this.resultSelector = resultSelector;\n    }\n    SwitchFirstMapOperator.prototype.call = function (subscriber, source) {\n        return source._subscribe(new SwitchFirstMapSubscriber(subscriber, this.project, this.resultSelector));\n    };\n    return SwitchFirstMapOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar SwitchFirstMapSubscriber = (function (_super) {\n    __extends(SwitchFirstMapSubscriber, _super);\n    function SwitchFirstMapSubscriber(destination, project, resultSelector) {\n        _super.call(this, destination);\n        this.project = project;\n        this.resultSelector = resultSelector;\n        this.hasSubscription = false;\n        this.hasCompleted = false;\n        this.index = 0;\n    }\n    SwitchFirstMapSubscriber.prototype._next = function (value) {\n        if (!this.hasSubscription) {\n            this.tryNext(value);\n        }\n    };\n    SwitchFirstMapSubscriber.prototype.tryNext = function (value) {\n        var index = this.index++;\n        var destination = this.destination;\n        try {\n            var result = this.project(value, index);\n            this.hasSubscription = true;\n            this.add(subscribeToResult_1.subscribeToResult(this, result, value, index));\n        }\n        catch (err) {\n            destination.error(err);\n        }\n    };\n    SwitchFirstMapSubscriber.prototype._complete = function () {\n        this.hasCompleted = true;\n        if (!this.hasSubscription) {\n            this.destination.complete();\n        }\n    };\n    SwitchFirstMapSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {\n        var _a = this, resultSelector = _a.resultSelector, destination = _a.destination;\n        if (resultSelector) {\n            this.trySelectResult(outerValue, innerValue, outerIndex, innerIndex);\n        }\n        else {\n            destination.next(innerValue);\n        }\n    };\n    SwitchFirstMapSubscriber.prototype.trySelectResult = function (outerValue, innerValue, outerIndex, innerIndex) {\n        var _a = this, resultSelector = _a.resultSelector, destination = _a.destination;\n        try {\n            var result = resultSelector(outerValue, innerValue, outerIndex, innerIndex);\n            destination.next(result);\n        }\n        catch (err) {\n            destination.error(err);\n        }\n    };\n    SwitchFirstMapSubscriber.prototype.notifyError = function (err) {\n        this.destination.error(err);\n    };\n    SwitchFirstMapSubscriber.prototype.notifyComplete = function (innerSub) {\n        this.remove(innerSub);\n        this.hasSubscription = false;\n        if (this.hasCompleted) {\n            this.destination.complete();\n        }\n    };\n    return SwitchFirstMapSubscriber;\n}(OuterSubscriber_1.OuterSubscriber));\n//# sourceMappingURL=exhaustMap.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// /workspace/Energy-Consumption/~/rxjs/operator/exhaustMap.js\n// module id = 910\n// module chunks = 0 1","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar tryCatch_1 = require('../util/tryCatch');\nvar errorObject_1 = require('../util/errorObject');\nvar OuterSubscriber_1 = require('../OuterSubscriber');\nvar subscribeToResult_1 = require('../util/subscribeToResult');\n/**\n * Recursively projects each source value to an Observable which is merged in\n * the output Observable.\n *\n * <span class=\"informal\">It's similar to {@link mergeMap}, but applies the\n * projection function to every source value as well as every output value.\n * It's recursive.</span>\n *\n * <img src=\"./img/expand.png\" width=\"100%\">\n *\n * Returns an Observable that emits items based on applying a function that you\n * supply to each item emitted by the source Observable, where that function\n * returns an Observable, and then merging those resulting Observables and\n * emitting the results of this merger. *Expand* will re-emit on the output\n * Observable every source value. Then, each output value is given to the\n * `project` function which returns an inner Observable to be merged on the\n * output Observable. Those output values resulting from the projection are also\n * given to the `project` function to produce new output values. This is how\n * *expand* behaves recursively.\n *\n * @example <caption>Start emitting the powers of two on every click, at most 10 of them</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var powersOfTwo = clicks\n *   .mapTo(1)\n *   .expand(x => Rx.Observable.of(2 * x).delay(1000))\n *   .take(10);\n * powersOfTwo.subscribe(x => console.log(x));\n *\n * @see {@link mergeMap}\n * @see {@link mergeScan}\n *\n * @param {function(value: T, index: number) => Observable} project A function\n * that, when applied to an item emitted by the source or the output Observable,\n * returns an Observable.\n * @param {number} [concurrent=Number.POSITIVE_INFINITY] Maximum number of input\n * Observables being subscribed to concurrently.\n * @param {Scheduler} [scheduler=null] The Scheduler to use for subscribing to\n * each projected inner Observable.\n * @return {Observable} An Observable that emits the source values and also\n * result of applying the projection function to each value emitted on the\n * output Observable and and merging the results of the Observables obtained\n * from this transformation.\n * @method expand\n * @owner Observable\n */\nfunction expand(project, concurrent, scheduler) {\n    if (concurrent === void 0) { concurrent = Number.POSITIVE_INFINITY; }\n    if (scheduler === void 0) { scheduler = undefined; }\n    concurrent = (concurrent || 0) < 1 ? Number.POSITIVE_INFINITY : concurrent;\n    return this.lift(new ExpandOperator(project, concurrent, scheduler));\n}\nexports.expand = expand;\nvar ExpandOperator = (function () {\n    function ExpandOperator(project, concurrent, scheduler) {\n        this.project = project;\n        this.concurrent = concurrent;\n        this.scheduler = scheduler;\n    }\n    ExpandOperator.prototype.call = function (subscriber, source) {\n        return source._subscribe(new ExpandSubscriber(subscriber, this.project, this.concurrent, this.scheduler));\n    };\n    return ExpandOperator;\n}());\nexports.ExpandOperator = ExpandOperator;\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar ExpandSubscriber = (function (_super) {\n    __extends(ExpandSubscriber, _super);\n    function ExpandSubscriber(destination, project, concurrent, scheduler) {\n        _super.call(this, destination);\n        this.project = project;\n        this.concurrent = concurrent;\n        this.scheduler = scheduler;\n        this.index = 0;\n        this.active = 0;\n        this.hasCompleted = false;\n        if (concurrent < Number.POSITIVE_INFINITY) {\n            this.buffer = [];\n        }\n    }\n    ExpandSubscriber.dispatch = function (arg) {\n        var subscriber = arg.subscriber, result = arg.result, value = arg.value, index = arg.index;\n        subscriber.subscribeToProjection(result, value, index);\n    };\n    ExpandSubscriber.prototype._next = function (value) {\n        var destination = this.destination;\n        if (destination.closed) {\n            this._complete();\n            return;\n        }\n        var index = this.index++;\n        if (this.active < this.concurrent) {\n            destination.next(value);\n            var result = tryCatch_1.tryCatch(this.project)(value, index);\n            if (result === errorObject_1.errorObject) {\n                destination.error(errorObject_1.errorObject.e);\n            }\n            else if (!this.scheduler) {\n                this.subscribeToProjection(result, value, index);\n            }\n            else {\n                var state = { subscriber: this, result: result, value: value, index: index };\n                this.add(this.scheduler.schedule(ExpandSubscriber.dispatch, 0, state));\n            }\n        }\n        else {\n            this.buffer.push(value);\n        }\n    };\n    ExpandSubscriber.prototype.subscribeToProjection = function (result, value, index) {\n        this.active++;\n        this.add(subscribeToResult_1.subscribeToResult(this, result, value, index));\n    };\n    ExpandSubscriber.prototype._complete = function () {\n        this.hasCompleted = true;\n        if (this.hasCompleted && this.active === 0) {\n            this.destination.complete();\n        }\n    };\n    ExpandSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {\n        this._next(innerValue);\n    };\n    ExpandSubscriber.prototype.notifyComplete = function (innerSub) {\n        var buffer = this.buffer;\n        this.remove(innerSub);\n        this.active--;\n        if (buffer && buffer.length > 0) {\n            this._next(buffer.shift());\n        }\n        if (this.hasCompleted && this.active === 0) {\n            this.destination.complete();\n        }\n    };\n    return ExpandSubscriber;\n}(OuterSubscriber_1.OuterSubscriber));\nexports.ExpandSubscriber = ExpandSubscriber;\n//# sourceMappingURL=expand.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// /workspace/Energy-Consumption/~/rxjs/operator/expand.js\n// module id = 911\n// module chunks = 0 1","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Subscriber_1 = require('../Subscriber');\nvar Subscription_1 = require('../Subscription');\n/**\n * Returns an Observable that mirrors the source Observable, but will call a specified function when\n * the source terminates on complete or error.\n * @param {function} callback function to be called when source terminates.\n * @return {Observable} an Observable that mirrors the source, but will call the specified function on termination.\n * @method finally\n * @owner Observable\n */\nfunction _finally(callback) {\n    return this.lift(new FinallyOperator(callback));\n}\nexports._finally = _finally;\nvar FinallyOperator = (function () {\n    function FinallyOperator(callback) {\n        this.callback = callback;\n    }\n    FinallyOperator.prototype.call = function (subscriber, source) {\n        return source._subscribe(new FinallySubscriber(subscriber, this.callback));\n    };\n    return FinallyOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar FinallySubscriber = (function (_super) {\n    __extends(FinallySubscriber, _super);\n    function FinallySubscriber(destination, callback) {\n        _super.call(this, destination);\n        this.add(new Subscription_1.Subscription(callback));\n    }\n    return FinallySubscriber;\n}(Subscriber_1.Subscriber));\n//# sourceMappingURL=finally.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// /workspace/Energy-Consumption/~/rxjs/operator/finally.js\n// module id = 912\n// module chunks = 0 1","\"use strict\";\nvar find_1 = require('./find');\n/**\n * Emits only the index of the first value emitted by the source Observable that\n * meets some condition.\n *\n * <span class=\"informal\">It's like {@link find}, but emits the index of the\n * found value, not the value itself.</span>\n *\n * <img src=\"./img/findIndex.png\" width=\"100%\">\n *\n * `findIndex` searches for the first item in the source Observable that matches\n * the specified condition embodied by the `predicate`, and returns the\n * (zero-based) index of the first occurrence in the source. Unlike\n * {@link first}, the `predicate` is required in `findIndex`, and does not emit\n * an error if a valid value is not found.\n *\n * @example <caption>Emit the index of first click that happens on a DIV element</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.findIndex(ev => ev.target.tagName === 'DIV');\n * result.subscribe(x => console.log(x));\n *\n * @see {@link filter}\n * @see {@link find}\n * @see {@link first}\n * @see {@link take}\n *\n * @param {function(value: T, index: number, source: Observable<T>): boolean} predicate\n * A function called with each item to test for condition matching.\n * @param {any} [thisArg] An optional argument to determine the value of `this`\n * in the `predicate` function.\n * @return {Observable} An Observable of the index of the first item that\n * matches the condition.\n * @method find\n * @owner Observable\n */\nfunction findIndex(predicate, thisArg) {\n    return this.lift(new find_1.FindValueOperator(predicate, this, true, thisArg));\n}\nexports.findIndex = findIndex;\n//# sourceMappingURL=findIndex.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// /workspace/Energy-Consumption/~/rxjs/operator/findIndex.js\n// module id = 913\n// module chunks = 0 1","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Subscriber_1 = require('../Subscriber');\nvar Subscription_1 = require('../Subscription');\nvar Observable_1 = require('../Observable');\nvar Subject_1 = require('../Subject');\nvar Map_1 = require('../util/Map');\nvar FastMap_1 = require('../util/FastMap');\n/**\n * Groups the items emitted by an Observable according to a specified criterion,\n * and emits these grouped items as `GroupedObservables`, one\n * {@link GroupedObservable} per group.\n *\n * <img src=\"./img/groupBy.png\" width=\"100%\">\n *\n * @param {function(value: T): K} keySelector a function that extracts the key\n * for each item.\n * @param {function(value: T): R} [elementSelector] a function that extracts the\n * return element for each item.\n * @param {function(grouped: GroupedObservable<K,R>): Observable<any>} [durationSelector]\n * a function that returns an Observable to determine how long each group should\n * exist.\n * @return {Observable<GroupedObservable<K,R>>} an Observable that emits\n * GroupedObservables, each of which corresponds to a unique key value and each\n * of which emits those items from the source Observable that share that key\n * value.\n * @method groupBy\n * @owner Observable\n */\nfunction groupBy(keySelector, elementSelector, durationSelector) {\n    return this.lift(new GroupByOperator(this, keySelector, elementSelector, durationSelector));\n}\nexports.groupBy = groupBy;\nvar GroupByOperator = (function () {\n    function GroupByOperator(source, keySelector, elementSelector, durationSelector) {\n        this.source = source;\n        this.keySelector = keySelector;\n        this.elementSelector = elementSelector;\n        this.durationSelector = durationSelector;\n    }\n    GroupByOperator.prototype.call = function (subscriber, source) {\n        return source._subscribe(new GroupBySubscriber(subscriber, this.keySelector, this.elementSelector, this.durationSelector));\n    };\n    return GroupByOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar GroupBySubscriber = (function (_super) {\n    __extends(GroupBySubscriber, _super);\n    function GroupBySubscriber(destination, keySelector, elementSelector, durationSelector) {\n        _super.call(this, destination);\n        this.keySelector = keySelector;\n        this.elementSelector = elementSelector;\n        this.durationSelector = durationSelector;\n        this.groups = null;\n        this.attemptedToUnsubscribe = false;\n        this.count = 0;\n    }\n    GroupBySubscriber.prototype._next = function (value) {\n        var key;\n        try {\n            key = this.keySelector(value);\n        }\n        catch (err) {\n            this.error(err);\n            return;\n        }\n        this._group(value, key);\n    };\n    GroupBySubscriber.prototype._group = function (value, key) {\n        var groups = this.groups;\n        if (!groups) {\n            groups = this.groups = typeof key === 'string' ? new FastMap_1.FastMap() : new Map_1.Map();\n        }\n        var group = groups.get(key);\n        var element;\n        if (this.elementSelector) {\n            try {\n                element = this.elementSelector(value);\n            }\n            catch (err) {\n                this.error(err);\n            }\n        }\n        else {\n            element = value;\n        }\n        if (!group) {\n            groups.set(key, group = new Subject_1.Subject());\n            var groupedObservable = new GroupedObservable(key, group, this);\n            this.destination.next(groupedObservable);\n            if (this.durationSelector) {\n                var duration = void 0;\n                try {\n                    duration = this.durationSelector(new GroupedObservable(key, group));\n                }\n                catch (err) {\n                    this.error(err);\n                    return;\n                }\n                this.add(duration.subscribe(new GroupDurationSubscriber(key, group, this)));\n            }\n        }\n        if (!group.closed) {\n            group.next(element);\n        }\n    };\n    GroupBySubscriber.prototype._error = function (err) {\n        var groups = this.groups;\n        if (groups) {\n            groups.forEach(function (group, key) {\n                group.error(err);\n            });\n            groups.clear();\n        }\n        this.destination.error(err);\n    };\n    GroupBySubscriber.prototype._complete = function () {\n        var groups = this.groups;\n        if (groups) {\n            groups.forEach(function (group, key) {\n                group.complete();\n            });\n            groups.clear();\n        }\n        this.destination.complete();\n    };\n    GroupBySubscriber.prototype.removeGroup = function (key) {\n        this.groups.delete(key);\n    };\n    GroupBySubscriber.prototype.unsubscribe = function () {\n        if (!this.closed && !this.attemptedToUnsubscribe) {\n            this.attemptedToUnsubscribe = true;\n            if (this.count === 0) {\n                _super.prototype.unsubscribe.call(this);\n            }\n        }\n    };\n    return GroupBySubscriber;\n}(Subscriber_1.Subscriber));\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar GroupDurationSubscriber = (function (_super) {\n    __extends(GroupDurationSubscriber, _super);\n    function GroupDurationSubscriber(key, group, parent) {\n        _super.call(this);\n        this.key = key;\n        this.group = group;\n        this.parent = parent;\n    }\n    GroupDurationSubscriber.prototype._next = function (value) {\n        this._complete();\n    };\n    GroupDurationSubscriber.prototype._error = function (err) {\n        var group = this.group;\n        if (!group.closed) {\n            group.error(err);\n        }\n        this.parent.removeGroup(this.key);\n    };\n    GroupDurationSubscriber.prototype._complete = function () {\n        var group = this.group;\n        if (!group.closed) {\n            group.complete();\n        }\n        this.parent.removeGroup(this.key);\n    };\n    return GroupDurationSubscriber;\n}(Subscriber_1.Subscriber));\n/**\n * An Observable representing values belonging to the same group represented by\n * a common key. The values emitted by a GroupedObservable come from the source\n * Observable. The common key is available as the field `key` on a\n * GroupedObservable instance.\n *\n * @class GroupedObservable<K, T>\n */\nvar GroupedObservable = (function (_super) {\n    __extends(GroupedObservable, _super);\n    function GroupedObservable(key, groupSubject, refCountSubscription) {\n        _super.call(this);\n        this.key = key;\n        this.groupSubject = groupSubject;\n        this.refCountSubscription = refCountSubscription;\n    }\n    GroupedObservable.prototype._subscribe = function (subscriber) {\n        var subscription = new Subscription_1.Subscription();\n        var _a = this, refCountSubscription = _a.refCountSubscription, groupSubject = _a.groupSubject;\n        if (refCountSubscription && !refCountSubscription.closed) {\n            subscription.add(new InnerRefCountSubscription(refCountSubscription));\n        }\n        subscription.add(groupSubject.subscribe(subscriber));\n        return subscription;\n    };\n    return GroupedObservable;\n}(Observable_1.Observable));\nexports.GroupedObservable = GroupedObservable;\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar InnerRefCountSubscription = (function (_super) {\n    __extends(InnerRefCountSubscription, _super);\n    function InnerRefCountSubscription(parent) {\n        _super.call(this);\n        this.parent = parent;\n        parent.count++;\n    }\n    InnerRefCountSubscription.prototype.unsubscribe = function () {\n        var parent = this.parent;\n        if (!parent.closed && !this.closed) {\n            _super.prototype.unsubscribe.call(this);\n            parent.count -= 1;\n            if (parent.count === 0 && parent.attemptedToUnsubscribe) {\n                parent.unsubscribe();\n            }\n        }\n    };\n    return InnerRefCountSubscription;\n}(Subscription_1.Subscription));\n//# sourceMappingURL=groupBy.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// /workspace/Energy-Consumption/~/rxjs/operator/groupBy.js\n// module id = 914\n// module chunks = 0 1","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Subscriber_1 = require('../Subscriber');\nvar noop_1 = require('../util/noop');\n/**\n * Ignores all items emitted by the source Observable and only passes calls of `complete` or `error`.\n *\n * <img src=\"./img/ignoreElements.png\" width=\"100%\">\n *\n * @return {Observable} an empty Observable that only calls `complete`\n * or `error`, based on which one is called by the source Observable.\n * @method ignoreElements\n * @owner Observable\n */\nfunction ignoreElements() {\n    return this.lift(new IgnoreElementsOperator());\n}\nexports.ignoreElements = ignoreElements;\n;\nvar IgnoreElementsOperator = (function () {\n    function IgnoreElementsOperator() {\n    }\n    IgnoreElementsOperator.prototype.call = function (subscriber, source) {\n        return source._subscribe(new IgnoreElementsSubscriber(subscriber));\n    };\n    return IgnoreElementsOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar IgnoreElementsSubscriber = (function (_super) {\n    __extends(IgnoreElementsSubscriber, _super);\n    function IgnoreElementsSubscriber() {\n        _super.apply(this, arguments);\n    }\n    IgnoreElementsSubscriber.prototype._next = function (unused) {\n        noop_1.noop();\n    };\n    return IgnoreElementsSubscriber;\n}(Subscriber_1.Subscriber));\n//# sourceMappingURL=ignoreElements.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// /workspace/Energy-Consumption/~/rxjs/operator/ignoreElements.js\n// module id = 915\n// module chunks = 0 1","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Subscriber_1 = require('../Subscriber');\n/**\n * If the source Observable is empty it returns an Observable that emits true, otherwise it emits false.\n *\n * <img src=\"./img/isEmpty.png\" width=\"100%\">\n *\n * @return {Observable} an Observable that emits a Boolean.\n * @method isEmpty\n * @owner Observable\n */\nfunction isEmpty() {\n    return this.lift(new IsEmptyOperator());\n}\nexports.isEmpty = isEmpty;\nvar IsEmptyOperator = (function () {\n    function IsEmptyOperator() {\n    }\n    IsEmptyOperator.prototype.call = function (observer, source) {\n        return source._subscribe(new IsEmptySubscriber(observer));\n    };\n    return IsEmptyOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar IsEmptySubscriber = (function (_super) {\n    __extends(IsEmptySubscriber, _super);\n    function IsEmptySubscriber(destination) {\n        _super.call(this, destination);\n    }\n    IsEmptySubscriber.prototype.notifyComplete = function (isEmpty) {\n        var destination = this.destination;\n        destination.next(isEmpty);\n        destination.complete();\n    };\n    IsEmptySubscriber.prototype._next = function (value) {\n        this.notifyComplete(false);\n    };\n    IsEmptySubscriber.prototype._complete = function () {\n        this.notifyComplete(true);\n    };\n    return IsEmptySubscriber;\n}(Subscriber_1.Subscriber));\n//# sourceMappingURL=isEmpty.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// /workspace/Energy-Consumption/~/rxjs/operator/isEmpty.js\n// module id = 916\n// module chunks = 0 1","\"use strict\";\n/**\n * @param func\n * @return {Observable<R>}\n * @method let\n * @owner Observable\n */\nfunction letProto(func) {\n    return func(this);\n}\nexports.letProto = letProto;\n//# sourceMappingURL=let.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// /workspace/Energy-Consumption/~/rxjs/operator/let.js\n// module id = 917\n// module chunks = 0 1","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Subscriber_1 = require('../Subscriber');\n/**\n * Emits the given constant value on the output Observable every time the source\n * Observable emits a value.\n *\n * <span class=\"informal\">Like {@link map}, but it maps every source value to\n * the same output value every time.</span>\n *\n * <img src=\"./img/mapTo.png\" width=\"100%\">\n *\n * Takes a constant `value` as argument, and emits that whenever the source\n * Observable emits a value. In other words, ignores the actual source value,\n * and simply uses the emission moment to know when to emit the given `value`.\n *\n * @example <caption>Map every every click to the string 'Hi'</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var greetings = clicks.mapTo('Hi');\n * greetings.subscribe(x => console.log(x));\n *\n * @see {@link map}\n *\n * @param {any} value The value to map each source value to.\n * @return {Observable} An Observable that emits the given `value` every time\n * the source Observable emits something.\n * @method mapTo\n * @owner Observable\n */\nfunction mapTo(value) {\n    return this.lift(new MapToOperator(value));\n}\nexports.mapTo = mapTo;\nvar MapToOperator = (function () {\n    function MapToOperator(value) {\n        this.value = value;\n    }\n    MapToOperator.prototype.call = function (subscriber, source) {\n        return source._subscribe(new MapToSubscriber(subscriber, this.value));\n    };\n    return MapToOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar MapToSubscriber = (function (_super) {\n    __extends(MapToSubscriber, _super);\n    function MapToSubscriber(destination, value) {\n        _super.call(this, destination);\n        this.value = value;\n    }\n    MapToSubscriber.prototype._next = function (x) {\n        this.destination.next(this.value);\n    };\n    return MapToSubscriber;\n}(Subscriber_1.Subscriber));\n//# sourceMappingURL=mapTo.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// /workspace/Energy-Consumption/~/rxjs/operator/mapTo.js\n// module id = 918\n// module chunks = 0 1","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Subscriber_1 = require('../Subscriber');\nvar Notification_1 = require('../Notification');\n/**\n * Represents all of the notifications from the source Observable as `next`\n * emissions marked with their original types within {@link Notification}\n * objects.\n *\n * <span class=\"informal\">Wraps `next`, `error` and `complete` emissions in\n * {@link Notification} objects, emitted as `next` on the output Observable.\n * </span>\n *\n * <img src=\"./img/materialize.png\" width=\"100%\">\n *\n * `materialize` returns an Observable that emits a `next` notification for each\n * `next`, `error`, or `complete` emission of the source Observable. When the\n * source Observable emits `complete`, the output Observable will emit `next` as\n * a Notification of type \"complete\", and then it will emit `complete` as well.\n * When the source Observable emits `error`, the output will emit `next` as a\n * Notification of type \"error\", and then `complete`.\n *\n * This operator is useful for producing metadata of the source Observable, to\n * be consumed as `next` emissions. Use it in conjunction with\n * {@link dematerialize}.\n *\n * @example <caption>Convert a faulty Observable to an Observable of Notifications</caption>\n * var letters = Rx.Observable.of('a', 'b', 13, 'd');\n * var upperCase = letters.map(x => x.toUpperCase());\n * var materialized = upperCase.materialize();\n * materialized.subscribe(x => console.log(x));\n *\n * @see {@link Notification}\n * @see {@link dematerialize}\n *\n * @return {Observable<Notification<T>>} An Observable that emits\n * {@link Notification} objects that wrap the original emissions from the source\n * Observable with metadata.\n * @method materialize\n * @owner Observable\n */\nfunction materialize() {\n    return this.lift(new MaterializeOperator());\n}\nexports.materialize = materialize;\nvar MaterializeOperator = (function () {\n    function MaterializeOperator() {\n    }\n    MaterializeOperator.prototype.call = function (subscriber, source) {\n        return source._subscribe(new MaterializeSubscriber(subscriber));\n    };\n    return MaterializeOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar MaterializeSubscriber = (function (_super) {\n    __extends(MaterializeSubscriber, _super);\n    function MaterializeSubscriber(destination) {\n        _super.call(this, destination);\n    }\n    MaterializeSubscriber.prototype._next = function (value) {\n        this.destination.next(Notification_1.Notification.createNext(value));\n    };\n    MaterializeSubscriber.prototype._error = function (err) {\n        var destination = this.destination;\n        destination.next(Notification_1.Notification.createError(err));\n        destination.complete();\n    };\n    MaterializeSubscriber.prototype._complete = function () {\n        var destination = this.destination;\n        destination.next(Notification_1.Notification.createComplete());\n        destination.complete();\n    };\n    return MaterializeSubscriber;\n}(Subscriber_1.Subscriber));\n//# sourceMappingURL=materialize.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// /workspace/Energy-Consumption/~/rxjs/operator/materialize.js\n// module id = 919\n// module chunks = 0 1","\"use strict\";\nvar reduce_1 = require('./reduce');\n/**\n * The Max operator operates on an Observable that emits numbers (or items that can be evaluated as numbers),\n * and when source Observable completes it emits a single item: the item with the largest number.\n *\n * <img src=\"./img/max.png\" width=\"100%\">\n *\n * @param {Function} optional comparer function that it will use instead of its default to compare the value of two\n * items.\n * @return {Observable} an Observable that emits item with the largest number.\n * @method max\n * @owner Observable\n */\nfunction max(comparer) {\n    var max = (typeof comparer === 'function')\n        ? function (x, y) { return comparer(x, y) > 0 ? x : y; }\n        : function (x, y) { return x > y ? x : y; };\n    return this.lift(new reduce_1.ReduceOperator(max));\n}\nexports.max = max;\n//# sourceMappingURL=max.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// /workspace/Energy-Consumption/~/rxjs/operator/max.js\n// module id = 920\n// module chunks = 0 1","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar tryCatch_1 = require('../util/tryCatch');\nvar errorObject_1 = require('../util/errorObject');\nvar subscribeToResult_1 = require('../util/subscribeToResult');\nvar OuterSubscriber_1 = require('../OuterSubscriber');\n/**\n * @param project\n * @param seed\n * @param concurrent\n * @return {Observable<R>|WebSocketSubject<T>|Observable<T>}\n * @method mergeScan\n * @owner Observable\n */\nfunction mergeScan(project, seed, concurrent) {\n    if (concurrent === void 0) { concurrent = Number.POSITIVE_INFINITY; }\n    return this.lift(new MergeScanOperator(project, seed, concurrent));\n}\nexports.mergeScan = mergeScan;\nvar MergeScanOperator = (function () {\n    function MergeScanOperator(project, seed, concurrent) {\n        this.project = project;\n        this.seed = seed;\n        this.concurrent = concurrent;\n    }\n    MergeScanOperator.prototype.call = function (subscriber, source) {\n        return source._subscribe(new MergeScanSubscriber(subscriber, this.project, this.seed, this.concurrent));\n    };\n    return MergeScanOperator;\n}());\nexports.MergeScanOperator = MergeScanOperator;\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar MergeScanSubscriber = (function (_super) {\n    __extends(MergeScanSubscriber, _super);\n    function MergeScanSubscriber(destination, project, acc, concurrent) {\n        _super.call(this, destination);\n        this.project = project;\n        this.acc = acc;\n        this.concurrent = concurrent;\n        this.hasValue = false;\n        this.hasCompleted = false;\n        this.buffer = [];\n        this.active = 0;\n        this.index = 0;\n    }\n    MergeScanSubscriber.prototype._next = function (value) {\n        if (this.active < this.concurrent) {\n            var index = this.index++;\n            var ish = tryCatch_1.tryCatch(this.project)(this.acc, value);\n            var destination = this.destination;\n            if (ish === errorObject_1.errorObject) {\n                destination.error(errorObject_1.errorObject.e);\n            }\n            else {\n                this.active++;\n                this._innerSub(ish, value, index);\n            }\n        }\n        else {\n            this.buffer.push(value);\n        }\n    };\n    MergeScanSubscriber.prototype._innerSub = function (ish, value, index) {\n        this.add(subscribeToResult_1.subscribeToResult(this, ish, value, index));\n    };\n    MergeScanSubscriber.prototype._complete = function () {\n        this.hasCompleted = true;\n        if (this.active === 0 && this.buffer.length === 0) {\n            if (this.hasValue === false) {\n                this.destination.next(this.acc);\n            }\n            this.destination.complete();\n        }\n    };\n    MergeScanSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {\n        var destination = this.destination;\n        this.acc = innerValue;\n        this.hasValue = true;\n        destination.next(innerValue);\n    };\n    MergeScanSubscriber.prototype.notifyComplete = function (innerSub) {\n        var buffer = this.buffer;\n        this.remove(innerSub);\n        this.active--;\n        if (buffer.length > 0) {\n            this._next(buffer.shift());\n        }\n        else if (this.active === 0 && this.hasCompleted) {\n            if (this.hasValue === false) {\n                this.destination.next(this.acc);\n            }\n            this.destination.complete();\n        }\n    };\n    return MergeScanSubscriber;\n}(OuterSubscriber_1.OuterSubscriber));\nexports.MergeScanSubscriber = MergeScanSubscriber;\n//# sourceMappingURL=mergeScan.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// /workspace/Energy-Consumption/~/rxjs/operator/mergeScan.js\n// module id = 921\n// module chunks = 0 1","\"use strict\";\nvar reduce_1 = require('./reduce');\n/**\n * The Min operator operates on an Observable that emits numbers (or items that can be evaluated as numbers),\n * and when source Observable completes it emits a single item: the item with the smallest number.\n *\n * <img src=\"./img/min.png\" width=\"100%\">\n *\n * @param {Function} optional comparer function that it will use instead of its default to compare the value of two items.\n * @return {Observable<R>} an Observable that emits item with the smallest number.\n * @method min\n * @owner Observable\n */\nfunction min(comparer) {\n    var min = (typeof comparer === 'function')\n        ? function (x, y) { return comparer(x, y) < 0 ? x : y; }\n        : function (x, y) { return x < y ? x : y; };\n    return this.lift(new reduce_1.ReduceOperator(min));\n}\nexports.min = min;\n//# sourceMappingURL=min.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// /workspace/Energy-Consumption/~/rxjs/operator/min.js\n// module id = 922\n// module chunks = 0 1","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Subscriber_1 = require('../Subscriber');\n/**\n * Groups pairs of consecutive emissions together and emits them as an array of\n * two values.\n *\n * <span class=\"informal\">Puts the current value and previous value together as\n * an array, and emits that.</span>\n *\n * <img src=\"./img/pairwise.png\" width=\"100%\">\n *\n * The Nth emission from the source Observable will cause the output Observable\n * to emit an array [(N-1)th, Nth] of the previous and the current value, as a\n * pair. For this reason, `pairwise` emits on the second and subsequent\n * emissions from the source Observable, but not on the first emission, because\n * there is no previous value in that case.\n *\n * @example <caption>On every click (starting from the second), emit the relative distance to the previous click</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var pairs = clicks.pairwise();\n * var distance = pairs.map(pair => {\n *   var x0 = pair[0].clientX;\n *   var y0 = pair[0].clientY;\n *   var x1 = pair[1].clientX;\n *   var y1 = pair[1].clientY;\n *   return Math.sqrt(Math.pow(x0 - x1, 2) + Math.pow(y0 - y1, 2));\n * });\n * distance.subscribe(x => console.log(x));\n *\n * @see {@link buffer}\n * @see {@link bufferCount}\n *\n * @return {Observable<Array<T>>} An Observable of pairs (as arrays) of\n * consecutive values from the source Observable.\n * @method pairwise\n * @owner Observable\n */\nfunction pairwise() {\n    return this.lift(new PairwiseOperator());\n}\nexports.pairwise = pairwise;\nvar PairwiseOperator = (function () {\n    function PairwiseOperator() {\n    }\n    PairwiseOperator.prototype.call = function (subscriber, source) {\n        return source._subscribe(new PairwiseSubscriber(subscriber));\n    };\n    return PairwiseOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar PairwiseSubscriber = (function (_super) {\n    __extends(PairwiseSubscriber, _super);\n    function PairwiseSubscriber(destination) {\n        _super.call(this, destination);\n        this.hasPrev = false;\n    }\n    PairwiseSubscriber.prototype._next = function (value) {\n        if (this.hasPrev) {\n            this.destination.next([this.prev, value]);\n        }\n        else {\n            this.hasPrev = true;\n        }\n        this.prev = value;\n    };\n    return PairwiseSubscriber;\n}(Subscriber_1.Subscriber));\n//# sourceMappingURL=pairwise.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// /workspace/Energy-Consumption/~/rxjs/operator/pairwise.js\n// module id = 923\n// module chunks = 0 1","\"use strict\";\nvar not_1 = require('../util/not');\nvar filter_1 = require('./filter');\n/**\n * Splits the source Observable into two, one with values that satisfy a\n * predicate, and another with values that don't satisfy the predicate.\n *\n * <span class=\"informal\">It's like {@link filter}, but returns two Observables:\n * one like the output of {@link filter}, and the other with values that did not\n * pass the condition.</span>\n *\n * <img src=\"./img/partition.png\" width=\"100%\">\n *\n * `partition` outputs an array with two Observables that partition the values\n * from the source Observable through the given `predicate` function. The first\n * Observable in that array emits source values for which the predicate argument\n * returns true. The second Observable emits source values for which the\n * predicate returns false. The first behaves like {@link filter} and the second\n * behaves like {@link filter} with the predicate negated.\n *\n * @example <caption>Partition click events into those on DIV elements and those elsewhere</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var parts = clicks.partition(ev => ev.target.tagName === 'DIV');\n * var clicksOnDivs = parts[0];\n * var clicksElsewhere = parts[1];\n * clicksOnDivs.subscribe(x => console.log('DIV clicked: ', x));\n * clicksElsewhere.subscribe(x => console.log('Other clicked: ', x));\n *\n * @see {@link filter}\n *\n * @param {function(value: T, index: number): boolean} predicate A function that\n * evaluates each value emitted by the source Observable. If it returns `true`,\n * the value is emitted on the first Observable in the returned array, if\n * `false` the value is emitted on the second Observable in the array. The\n * `index` parameter is the number `i` for the i-th source emission that has\n * happened since the subscription, starting from the number `0`.\n * @param {any} [thisArg] An optional argument to determine the value of `this`\n * in the `predicate` function.\n * @return {[Observable<T>, Observable<T>]} An array with two Observables: one\n * with values that passed the predicate, and another with values that did not\n * pass the predicate.\n * @method partition\n * @owner Observable\n */\nfunction partition(predicate, thisArg) {\n    return [\n        filter_1.filter.call(this, predicate),\n        filter_1.filter.call(this, not_1.not(predicate, thisArg))\n    ];\n}\nexports.partition = partition;\n//# sourceMappingURL=partition.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// /workspace/Energy-Consumption/~/rxjs/operator/partition.js\n// module id = 924\n// module chunks = 0 1","\"use strict\";\nvar map_1 = require('./map');\n/**\n * Maps each source value (an object) to its specified nested property.\n *\n * <span class=\"informal\">Like {@link map}, but meant only for picking one of\n * the nested properties of every emitted object.</span>\n *\n * <img src=\"./img/pluck.png\" width=\"100%\">\n *\n * Given a list of strings describing a path to an object property, retrieves\n * the value of a specified nested property from all values in the source\n * Observable. If a property can't be resolved, it will return `undefined` for\n * that value.\n *\n * @example <caption>Map every every click to the tagName of the clicked target element</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var tagNames = clicks.pluck('target', 'tagName');\n * tagNames.subscribe(x => console.log(x));\n *\n * @see {@link map}\n *\n * @param {...string} properties The nested properties to pluck from each source\n * value (an object).\n * @return {Observable} Returns a new Observable of property values from the\n * source values.\n * @method pluck\n * @owner Observable\n */\nfunction pluck() {\n    var properties = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        properties[_i - 0] = arguments[_i];\n    }\n    var length = properties.length;\n    if (length === 0) {\n        throw new Error('list of properties cannot be empty.');\n    }\n    return map_1.map.call(this, plucker(properties, length));\n}\nexports.pluck = pluck;\nfunction plucker(props, length) {\n    var mapper = function (x) {\n        var currentProp = x;\n        for (var i = 0; i < length; i++) {\n            var p = currentProp[props[i]];\n            if (typeof p !== 'undefined') {\n                currentProp = p;\n            }\n            else {\n                return undefined;\n            }\n        }\n        return currentProp;\n    };\n    return mapper;\n}\n//# sourceMappingURL=pluck.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// /workspace/Energy-Consumption/~/rxjs/operator/pluck.js\n// module id = 925\n// module chunks = 0 1","\"use strict\";\nvar Subject_1 = require('../Subject');\nvar multicast_1 = require('./multicast');\n/**\n * Returns a ConnectableObservable, which is a variety of Observable that waits until its connect method is called\n * before it begins emitting items to those Observers that have subscribed to it.\n *\n * <img src=\"./img/publish.png\" width=\"100%\">\n *\n * @param {Function} Optional selector function which can use the multicasted source sequence as many times as needed,\n * without causing multiple subscriptions to the source sequence.\n * Subscribers to the given source will receive all notifications of the source from the time of the subscription on.\n * @return a ConnectableObservable that upon connection causes the source Observable to emit items to its Observers.\n * @method publish\n * @owner Observable\n */\nfunction publish(selector) {\n    return selector ? multicast_1.multicast.call(this, function () { return new Subject_1.Subject(); }, selector) :\n        multicast_1.multicast.call(this, new Subject_1.Subject());\n}\nexports.publish = publish;\n//# sourceMappingURL=publish.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// /workspace/Energy-Consumption/~/rxjs/operator/publish.js\n// module id = 926\n// module chunks = 0 1","\"use strict\";\nvar BehaviorSubject_1 = require('../BehaviorSubject');\nvar multicast_1 = require('./multicast');\n/**\n * @param value\n * @return {ConnectableObservable<T>}\n * @method publishBehavior\n * @owner Observable\n */\nfunction publishBehavior(value) {\n    return multicast_1.multicast.call(this, new BehaviorSubject_1.BehaviorSubject(value));\n}\nexports.publishBehavior = publishBehavior;\n//# sourceMappingURL=publishBehavior.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// /workspace/Energy-Consumption/~/rxjs/operator/publishBehavior.js\n// module id = 927\n// module chunks = 0 1","\"use strict\";\nvar AsyncSubject_1 = require('../AsyncSubject');\nvar multicast_1 = require('./multicast');\n/**\n * @return {ConnectableObservable<T>}\n * @method publishLast\n * @owner Observable\n */\nfunction publishLast() {\n    return multicast_1.multicast.call(this, new AsyncSubject_1.AsyncSubject());\n}\nexports.publishLast = publishLast;\n//# sourceMappingURL=publishLast.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// /workspace/Energy-Consumption/~/rxjs/operator/publishLast.js\n// module id = 928\n// module chunks = 0 1","\"use strict\";\nvar ReplaySubject_1 = require('../ReplaySubject');\nvar multicast_1 = require('./multicast');\n/**\n * @param bufferSize\n * @param windowTime\n * @param scheduler\n * @return {ConnectableObservable<T>}\n * @method publishReplay\n * @owner Observable\n */\nfunction publishReplay(bufferSize, windowTime, scheduler) {\n    if (bufferSize === void 0) { bufferSize = Number.POSITIVE_INFINITY; }\n    if (windowTime === void 0) { windowTime = Number.POSITIVE_INFINITY; }\n    return multicast_1.multicast.call(this, new ReplaySubject_1.ReplaySubject(bufferSize, windowTime, scheduler));\n}\nexports.publishReplay = publishReplay;\n//# sourceMappingURL=publishReplay.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// /workspace/Energy-Consumption/~/rxjs/operator/publishReplay.js\n// module id = 929\n// module chunks = 0 1","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Subscriber_1 = require('../Subscriber');\nvar EmptyObservable_1 = require('../observable/EmptyObservable');\n/**\n * Returns an Observable that repeats the stream of items emitted by the source Observable at most count times,\n * on a particular Scheduler.\n *\n * <img src=\"./img/repeat.png\" width=\"100%\">\n *\n * @param {Scheduler} [scheduler] the Scheduler to emit the items on.\n * @param {number} [count] the number of times the source Observable items are repeated, a count of 0 will yield\n * an empty Observable.\n * @return {Observable} an Observable that repeats the stream of items emitted by the source Observable at most\n * count times.\n * @method repeat\n * @owner Observable\n */\nfunction repeat(count) {\n    if (count === void 0) { count = -1; }\n    if (count === 0) {\n        return new EmptyObservable_1.EmptyObservable();\n    }\n    else if (count < 0) {\n        return this.lift(new RepeatOperator(-1, this));\n    }\n    else {\n        return this.lift(new RepeatOperator(count - 1, this));\n    }\n}\nexports.repeat = repeat;\nvar RepeatOperator = (function () {\n    function RepeatOperator(count, source) {\n        this.count = count;\n        this.source = source;\n    }\n    RepeatOperator.prototype.call = function (subscriber, source) {\n        return source._subscribe(new RepeatSubscriber(subscriber, this.count, this.source));\n    };\n    return RepeatOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar RepeatSubscriber = (function (_super) {\n    __extends(RepeatSubscriber, _super);\n    function RepeatSubscriber(destination, count, source) {\n        _super.call(this, destination);\n        this.count = count;\n        this.source = source;\n    }\n    RepeatSubscriber.prototype.complete = function () {\n        if (!this.isStopped) {\n            var _a = this, source = _a.source, count = _a.count;\n            if (count === 0) {\n                return _super.prototype.complete.call(this);\n            }\n            else if (count > -1) {\n                this.count = count - 1;\n            }\n            this.unsubscribe();\n            this.isStopped = false;\n            this.closed = false;\n            source.subscribe(this);\n        }\n    };\n    return RepeatSubscriber;\n}(Subscriber_1.Subscriber));\n//# sourceMappingURL=repeat.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// /workspace/Energy-Consumption/~/rxjs/operator/repeat.js\n// module id = 930\n// module chunks = 0 1","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Subject_1 = require('../Subject');\nvar tryCatch_1 = require('../util/tryCatch');\nvar errorObject_1 = require('../util/errorObject');\nvar OuterSubscriber_1 = require('../OuterSubscriber');\nvar subscribeToResult_1 = require('../util/subscribeToResult');\n/**\n * Returns an Observable that emits the same values as the source observable with the exception of a `complete`.\n * A `complete` will cause the emission of the Throwable that cause the complete to the Observable returned from\n * notificationHandler. If that Observable calls onComplete or `complete` then retry will call `complete` or `error`\n * on the child subscription. Otherwise, this Observable will resubscribe to the source observable, on a particular\n * Scheduler.\n *\n * <img src=\"./img/repeatWhen.png\" width=\"100%\">\n *\n * @param {notificationHandler} receives an Observable of notifications with which a user can `complete` or `error`,\n * aborting the retry.\n * @param {scheduler} the Scheduler on which to subscribe to the source Observable.\n * @return {Observable} the source Observable modified with retry logic.\n * @method repeatWhen\n * @owner Observable\n */\nfunction repeatWhen(notifier) {\n    return this.lift(new RepeatWhenOperator(notifier, this));\n}\nexports.repeatWhen = repeatWhen;\nvar RepeatWhenOperator = (function () {\n    function RepeatWhenOperator(notifier, source) {\n        this.notifier = notifier;\n        this.source = source;\n    }\n    RepeatWhenOperator.prototype.call = function (subscriber, source) {\n        return source._subscribe(new RepeatWhenSubscriber(subscriber, this.notifier, this.source));\n    };\n    return RepeatWhenOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar RepeatWhenSubscriber = (function (_super) {\n    __extends(RepeatWhenSubscriber, _super);\n    function RepeatWhenSubscriber(destination, notifier, source) {\n        _super.call(this, destination);\n        this.notifier = notifier;\n        this.source = source;\n    }\n    RepeatWhenSubscriber.prototype.complete = function () {\n        if (!this.isStopped) {\n            var notifications = this.notifications;\n            var retries = this.retries;\n            var retriesSubscription = this.retriesSubscription;\n            if (!retries) {\n                notifications = new Subject_1.Subject();\n                retries = tryCatch_1.tryCatch(this.notifier)(notifications);\n                if (retries === errorObject_1.errorObject) {\n                    return _super.prototype.complete.call(this);\n                }\n                retriesSubscription = subscribeToResult_1.subscribeToResult(this, retries);\n            }\n            else {\n                this.notifications = null;\n                this.retriesSubscription = null;\n            }\n            this.unsubscribe();\n            this.closed = false;\n            this.notifications = notifications;\n            this.retries = retries;\n            this.retriesSubscription = retriesSubscription;\n            notifications.next();\n        }\n    };\n    RepeatWhenSubscriber.prototype._unsubscribe = function () {\n        var _a = this, notifications = _a.notifications, retriesSubscription = _a.retriesSubscription;\n        if (notifications) {\n            notifications.unsubscribe();\n            this.notifications = null;\n        }\n        if (retriesSubscription) {\n            retriesSubscription.unsubscribe();\n            this.retriesSubscription = null;\n        }\n        this.retries = null;\n    };\n    RepeatWhenSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {\n        var _a = this, notifications = _a.notifications, retries = _a.retries, retriesSubscription = _a.retriesSubscription;\n        this.notifications = null;\n        this.retries = null;\n        this.retriesSubscription = null;\n        this.unsubscribe();\n        this.isStopped = false;\n        this.closed = false;\n        this.notifications = notifications;\n        this.retries = retries;\n        this.retriesSubscription = retriesSubscription;\n        this.source.subscribe(this);\n    };\n    return RepeatWhenSubscriber;\n}(OuterSubscriber_1.OuterSubscriber));\n//# sourceMappingURL=repeatWhen.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// /workspace/Energy-Consumption/~/rxjs/operator/repeatWhen.js\n// module id = 931\n// module chunks = 0 1","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Subscriber_1 = require('../Subscriber');\n/**\n * Returns an Observable that mirrors the source Observable, resubscribing to it if it calls `error` and the\n * predicate returns true for that specific exception and retry count.\n * If the source Observable calls `error`, this method will resubscribe to the source Observable for a maximum of\n * count resubscriptions (given as a number parameter) rather than propagating the `error` call.\n *\n * <img src=\"./img/retry.png\" width=\"100%\">\n *\n * Any and all items emitted by the source Observable will be emitted by the resulting Observable, even those emitted\n * during failed subscriptions. For example, if an Observable fails at first but emits [1, 2] then succeeds the second\n * time and emits: [1, 2, 3, 4, 5] then the complete stream of emissions and notifications\n * would be: [1, 2, 1, 2, 3, 4, 5, `complete`].\n * @param {number} number of retry attempts before failing.\n * @return {Observable} the source Observable modified with the retry logic.\n * @method retry\n * @owner Observable\n */\nfunction retry(count) {\n    if (count === void 0) { count = -1; }\n    return this.lift(new RetryOperator(count, this));\n}\nexports.retry = retry;\nvar RetryOperator = (function () {\n    function RetryOperator(count, source) {\n        this.count = count;\n        this.source = source;\n    }\n    RetryOperator.prototype.call = function (subscriber, source) {\n        return source._subscribe(new RetrySubscriber(subscriber, this.count, this.source));\n    };\n    return RetryOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar RetrySubscriber = (function (_super) {\n    __extends(RetrySubscriber, _super);\n    function RetrySubscriber(destination, count, source) {\n        _super.call(this, destination);\n        this.count = count;\n        this.source = source;\n    }\n    RetrySubscriber.prototype.error = function (err) {\n        if (!this.isStopped) {\n            var _a = this, source = _a.source, count = _a.count;\n            if (count === 0) {\n                return _super.prototype.error.call(this, err);\n            }\n            else if (count > -1) {\n                this.count = count - 1;\n            }\n            this.unsubscribe();\n            this.isStopped = false;\n            this.closed = false;\n            source.subscribe(this);\n        }\n    };\n    return RetrySubscriber;\n}(Subscriber_1.Subscriber));\n//# sourceMappingURL=retry.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// /workspace/Energy-Consumption/~/rxjs/operator/retry.js\n// module id = 932\n// module chunks = 0 1","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Subject_1 = require('../Subject');\nvar tryCatch_1 = require('../util/tryCatch');\nvar errorObject_1 = require('../util/errorObject');\nvar OuterSubscriber_1 = require('../OuterSubscriber');\nvar subscribeToResult_1 = require('../util/subscribeToResult');\n/**\n * Returns an Observable that emits the same values as the source observable with the exception of an `error`.\n * An `error` will cause the emission of the Throwable that cause the error to the Observable returned from\n * notificationHandler. If that Observable calls onComplete or `error` then retry will call `complete` or `error`\n * on the child subscription. Otherwise, this Observable will resubscribe to the source observable, on a particular\n * Scheduler.\n *\n * <img src=\"./img/retryWhen.png\" width=\"100%\">\n *\n * @param {notificationHandler} receives an Observable of notifications with which a user can `complete` or `error`,\n * aborting the retry.\n * @param {scheduler} the Scheduler on which to subscribe to the source Observable.\n * @return {Observable} the source Observable modified with retry logic.\n * @method retryWhen\n * @owner Observable\n */\nfunction retryWhen(notifier) {\n    return this.lift(new RetryWhenOperator(notifier, this));\n}\nexports.retryWhen = retryWhen;\nvar RetryWhenOperator = (function () {\n    function RetryWhenOperator(notifier, source) {\n        this.notifier = notifier;\n        this.source = source;\n    }\n    RetryWhenOperator.prototype.call = function (subscriber, source) {\n        return source._subscribe(new RetryWhenSubscriber(subscriber, this.notifier, this.source));\n    };\n    return RetryWhenOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar RetryWhenSubscriber = (function (_super) {\n    __extends(RetryWhenSubscriber, _super);\n    function RetryWhenSubscriber(destination, notifier, source) {\n        _super.call(this, destination);\n        this.notifier = notifier;\n        this.source = source;\n    }\n    RetryWhenSubscriber.prototype.error = function (err) {\n        if (!this.isStopped) {\n            var errors = this.errors;\n            var retries = this.retries;\n            var retriesSubscription = this.retriesSubscription;\n            if (!retries) {\n                errors = new Subject_1.Subject();\n                retries = tryCatch_1.tryCatch(this.notifier)(errors);\n                if (retries === errorObject_1.errorObject) {\n                    return _super.prototype.error.call(this, errorObject_1.errorObject.e);\n                }\n                retriesSubscription = subscribeToResult_1.subscribeToResult(this, retries);\n            }\n            else {\n                this.errors = null;\n                this.retriesSubscription = null;\n            }\n            this.unsubscribe();\n            this.closed = false;\n            this.errors = errors;\n            this.retries = retries;\n            this.retriesSubscription = retriesSubscription;\n            errors.next(err);\n        }\n    };\n    RetryWhenSubscriber.prototype._unsubscribe = function () {\n        var _a = this, errors = _a.errors, retriesSubscription = _a.retriesSubscription;\n        if (errors) {\n            errors.unsubscribe();\n            this.errors = null;\n        }\n        if (retriesSubscription) {\n            retriesSubscription.unsubscribe();\n            this.retriesSubscription = null;\n        }\n        this.retries = null;\n    };\n    RetryWhenSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {\n        var _a = this, errors = _a.errors, retries = _a.retries, retriesSubscription = _a.retriesSubscription;\n        this.errors = null;\n        this.retries = null;\n        this.retriesSubscription = null;\n        this.unsubscribe();\n        this.isStopped = false;\n        this.closed = false;\n        this.errors = errors;\n        this.retries = retries;\n        this.retriesSubscription = retriesSubscription;\n        this.source.subscribe(this);\n    };\n    return RetryWhenSubscriber;\n}(OuterSubscriber_1.OuterSubscriber));\n//# sourceMappingURL=retryWhen.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// /workspace/Energy-Consumption/~/rxjs/operator/retryWhen.js\n// module id = 933\n// module chunks = 0 1","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar OuterSubscriber_1 = require('../OuterSubscriber');\nvar subscribeToResult_1 = require('../util/subscribeToResult');\n/**\n * Emits the most recently emitted value from the source Observable whenever\n * another Observable, the `notifier`, emits.\n *\n * <span class=\"informal\">It's like {@link sampleTime}, but samples whenever\n * the `notifier` Observable emits something.</span>\n *\n * <img src=\"./img/sample.png\" width=\"100%\">\n *\n * Whenever the `notifier` Observable emits a value or completes, `sample`\n * looks at the source Observable and emits whichever value it has most recently\n * emitted since the previous sampling, unless the source has not emitted\n * anything since the previous sampling. The `notifier` is subscribed to as soon\n * as the output Observable is subscribed.\n *\n * @example <caption>On every click, sample the most recent \"seconds\" timer</caption>\n * var seconds = Rx.Observable.interval(1000);\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = seconds.sample(clicks);\n * result.subscribe(x => console.log(x));\n *\n * @see {@link audit}\n * @see {@link debounce}\n * @see {@link sampleTime}\n * @see {@link throttle}\n *\n * @param {Observable<any>} notifier The Observable to use for sampling the\n * source Observable.\n * @return {Observable<T>} An Observable that emits the results of sampling the\n * values emitted by the source Observable whenever the notifier Observable\n * emits value or completes.\n * @method sample\n * @owner Observable\n */\nfunction sample(notifier) {\n    return this.lift(new SampleOperator(notifier));\n}\nexports.sample = sample;\nvar SampleOperator = (function () {\n    function SampleOperator(notifier) {\n        this.notifier = notifier;\n    }\n    SampleOperator.prototype.call = function (subscriber, source) {\n        return source._subscribe(new SampleSubscriber(subscriber, this.notifier));\n    };\n    return SampleOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar SampleSubscriber = (function (_super) {\n    __extends(SampleSubscriber, _super);\n    function SampleSubscriber(destination, notifier) {\n        _super.call(this, destination);\n        this.hasValue = false;\n        this.add(subscribeToResult_1.subscribeToResult(this, notifier));\n    }\n    SampleSubscriber.prototype._next = function (value) {\n        this.value = value;\n        this.hasValue = true;\n    };\n    SampleSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {\n        this.emitValue();\n    };\n    SampleSubscriber.prototype.notifyComplete = function () {\n        this.emitValue();\n    };\n    SampleSubscriber.prototype.emitValue = function () {\n        if (this.hasValue) {\n            this.hasValue = false;\n            this.destination.next(this.value);\n        }\n    };\n    return SampleSubscriber;\n}(OuterSubscriber_1.OuterSubscriber));\n//# sourceMappingURL=sample.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// /workspace/Energy-Consumption/~/rxjs/operator/sample.js\n// module id = 934\n// module chunks = 0 1","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Subscriber_1 = require('../Subscriber');\nvar async_1 = require('../scheduler/async');\n/**\n * Emits the most recently emitted value from the source Observable within\n * periodic time intervals.\n *\n * <span class=\"informal\">Samples the source Observable at periodic time\n * intervals, emitting what it samples.</span>\n *\n * <img src=\"./img/sampleTime.png\" width=\"100%\">\n *\n * `sampleTime` periodically looks at the source Observable and emits whichever\n * value it has most recently emitted since the previous sampling, unless the\n * source has not emitted anything since the previous sampling. The sampling\n * happens periodically in time every `period` milliseconds (or the time unit\n * defined by the optional `scheduler` argument). The sampling starts as soon as\n * the output Observable is subscribed.\n *\n * @example <caption>Every second, emit the most recent click at most once</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.sampleTime(1000);\n * result.subscribe(x => console.log(x));\n *\n * @see {@link auditTime}\n * @see {@link debounceTime}\n * @see {@link delay}\n * @see {@link sample}\n * @see {@link throttleTime}\n *\n * @param {number} period The sampling period expressed in milliseconds or the\n * time unit determined internally by the optional `scheduler`.\n * @param {Scheduler} [scheduler=async] The {@link Scheduler} to use for\n * managing the timers that handle the sampling.\n * @return {Observable<T>} An Observable that emits the results of sampling the\n * values emitted by the source Observable at the specified time interval.\n * @method sampleTime\n * @owner Observable\n */\nfunction sampleTime(period, scheduler) {\n    if (scheduler === void 0) { scheduler = async_1.async; }\n    return this.lift(new SampleTimeOperator(period, scheduler));\n}\nexports.sampleTime = sampleTime;\nvar SampleTimeOperator = (function () {\n    function SampleTimeOperator(period, scheduler) {\n        this.period = period;\n        this.scheduler = scheduler;\n    }\n    SampleTimeOperator.prototype.call = function (subscriber, source) {\n        return source._subscribe(new SampleTimeSubscriber(subscriber, this.period, this.scheduler));\n    };\n    return SampleTimeOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar SampleTimeSubscriber = (function (_super) {\n    __extends(SampleTimeSubscriber, _super);\n    function SampleTimeSubscriber(destination, period, scheduler) {\n        _super.call(this, destination);\n        this.period = period;\n        this.scheduler = scheduler;\n        this.hasValue = false;\n        this.add(scheduler.schedule(dispatchNotification, period, { subscriber: this, period: period }));\n    }\n    SampleTimeSubscriber.prototype._next = function (value) {\n        this.lastValue = value;\n        this.hasValue = true;\n    };\n    SampleTimeSubscriber.prototype.notifyNext = function () {\n        if (this.hasValue) {\n            this.hasValue = false;\n            this.destination.next(this.lastValue);\n        }\n    };\n    return SampleTimeSubscriber;\n}(Subscriber_1.Subscriber));\nfunction dispatchNotification(state) {\n    var subscriber = state.subscriber, period = state.period;\n    subscriber.notifyNext();\n    this.schedule(state, period);\n}\n//# sourceMappingURL=sampleTime.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// /workspace/Energy-Consumption/~/rxjs/operator/sampleTime.js\n// module id = 935\n// module chunks = 0 1","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Subscriber_1 = require('../Subscriber');\n/**\n * Applies an accumulator function over the source Observable, and returns each\n * intermediate result, with an optional seed value.\n *\n * <span class=\"informal\">It's like {@link reduce}, but emits the current\n * accumulation whenever the source emits a value.</span>\n *\n * <img src=\"./img/scan.png\" width=\"100%\">\n *\n * Combines together all values emitted on the source, using an accumulator\n * function that knows how to join a new source value into the accumulation from\n * the past. Is similar to {@link reduce}, but emits the intermediate\n * accumulations.\n *\n * Returns an Observable that applies a specified `accumulator` function to each\n * item emitted by the source Observable. If a `seed` value is specified, then\n * that value will be used as the initial value for the accumulator. If no seed\n * value is specified, the first item of the source is used as the seed.\n *\n * @example <caption>Count the number of click events</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var ones = clicks.mapTo(1);\n * var seed = 0;\n * var count = ones.scan((acc, one) => acc + one, seed);\n * count.subscribe(x => console.log(x));\n *\n * @see {@link expand}\n * @see {@link mergeScan}\n * @see {@link reduce}\n *\n * @param {function(acc: R, value: T, index: number): R} accumulator\n * The accumulator function called on each source value.\n * @param {T|R} [seed] The initial accumulation value.\n * @return {Observable<R>} An observable of the accumulated values.\n * @method scan\n * @owner Observable\n */\nfunction scan(accumulator, seed) {\n    return this.lift(new ScanOperator(accumulator, seed));\n}\nexports.scan = scan;\nvar ScanOperator = (function () {\n    function ScanOperator(accumulator, seed) {\n        this.accumulator = accumulator;\n        this.seed = seed;\n    }\n    ScanOperator.prototype.call = function (subscriber, source) {\n        return source._subscribe(new ScanSubscriber(subscriber, this.accumulator, this.seed));\n    };\n    return ScanOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar ScanSubscriber = (function (_super) {\n    __extends(ScanSubscriber, _super);\n    function ScanSubscriber(destination, accumulator, seed) {\n        _super.call(this, destination);\n        this.accumulator = accumulator;\n        this.index = 0;\n        this.accumulatorSet = false;\n        this.seed = seed;\n        this.accumulatorSet = typeof seed !== 'undefined';\n    }\n    Object.defineProperty(ScanSubscriber.prototype, \"seed\", {\n        get: function () {\n            return this._seed;\n        },\n        set: function (value) {\n            this.accumulatorSet = true;\n            this._seed = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    ScanSubscriber.prototype._next = function (value) {\n        if (!this.accumulatorSet) {\n            this.seed = value;\n            this.destination.next(value);\n        }\n        else {\n            return this._tryNext(value);\n        }\n    };\n    ScanSubscriber.prototype._tryNext = function (value) {\n        var index = this.index++;\n        var result;\n        try {\n            result = this.accumulator(this.seed, value, index);\n        }\n        catch (err) {\n            this.destination.error(err);\n        }\n        this.seed = result;\n        this.destination.next(result);\n    };\n    return ScanSubscriber;\n}(Subscriber_1.Subscriber));\n//# sourceMappingURL=scan.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// /workspace/Energy-Consumption/~/rxjs/operator/scan.js\n// module id = 936\n// module chunks = 0 1","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Subscriber_1 = require('../Subscriber');\nvar tryCatch_1 = require('../util/tryCatch');\nvar errorObject_1 = require('../util/errorObject');\n/**\n * Compares all values of two observables in sequence using an optional comparor function\n * and returns an observable of a single boolean value representing whether or not the two sequences\n * are equal.\n *\n * <span class=\"informal\">Checks to see of all values emitted by both observables are equal, in order.</span>\n *\n * <img src=\"./img/sequenceEqual.png\" width=\"100%\">\n *\n * `sequenceEqual` subscribes to two observables and buffers incoming values from each observable. Whenever either\n * observable emits a value, the value is buffered and the buffers are shifted and compared from the bottom\n * up; If any value pair doesn't match, the returned observable will emit `false` and complete. If one of the\n * observables completes, the operator will wait for the other observable to complete; If the other\n * observable emits before completing, the returned observable will emit `false` and complete. If one observable never\n * completes or emits after the other complets, the returned observable will never complete.\n *\n * @example <caption>figure out if the Konami code matches</caption>\n * var code = Observable.from([\n *  \"ArrowUp\",\n *  \"ArrowUp\",\n *  \"ArrowDown\",\n *  \"ArrowDown\",\n *  \"ArrowLeft\",\n *  \"ArrowRight\",\n *  \"ArrowLeft\",\n *  \"ArrowRight\",\n *  \"KeyB\",\n *  \"KeyA\",\n *  \"Enter\" // no start key, clearly.\n * ]);\n *\n * var keys = Rx.Observable.fromEvent(document, 'keyup')\n *  .map(e => e.code);\n * var matches = keys.bufferCount(11, 1)\n *  .mergeMap(\n *    last11 =>\n *      Rx.Observable.from(last11)\n *        .sequenceEqual(code)\n *   );\n * matches.subscribe(matched => console.log('Successful cheat at Contra? ', matched));\n *\n * @see {@link combineLatest}\n * @see {@link zip}\n * @see {@link withLatestFrom}\n *\n * @param {Observable} compareTo the observable sequence to compare the source sequence to.\n * @param {function} [comparor] An optional function to compare each value pair\n * @return {Observable} An Observable of a single boolean value representing whether or not\n * the values emitted by both observables were equal in sequence\n * @method sequenceEqual\n * @owner Observable\n */\nfunction sequenceEqual(compareTo, comparor) {\n    return this.lift(new SequenceEqualOperator(compareTo, comparor));\n}\nexports.sequenceEqual = sequenceEqual;\nvar SequenceEqualOperator = (function () {\n    function SequenceEqualOperator(compareTo, comparor) {\n        this.compareTo = compareTo;\n        this.comparor = comparor;\n    }\n    SequenceEqualOperator.prototype.call = function (subscriber, source) {\n        return source._subscribe(new SequenceEqualSubscriber(subscriber, this.compareTo, this.comparor));\n    };\n    return SequenceEqualOperator;\n}());\nexports.SequenceEqualOperator = SequenceEqualOperator;\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar SequenceEqualSubscriber = (function (_super) {\n    __extends(SequenceEqualSubscriber, _super);\n    function SequenceEqualSubscriber(destination, compareTo, comparor) {\n        _super.call(this, destination);\n        this.compareTo = compareTo;\n        this.comparor = comparor;\n        this._a = [];\n        this._b = [];\n        this._oneComplete = false;\n        this.add(compareTo.subscribe(new SequenceEqualCompareToSubscriber(destination, this)));\n    }\n    SequenceEqualSubscriber.prototype._next = function (value) {\n        if (this._oneComplete && this._b.length === 0) {\n            this.emit(false);\n        }\n        else {\n            this._a.push(value);\n            this.checkValues();\n        }\n    };\n    SequenceEqualSubscriber.prototype._complete = function () {\n        if (this._oneComplete) {\n            this.emit(this._a.length === 0 && this._b.length === 0);\n        }\n        else {\n            this._oneComplete = true;\n        }\n    };\n    SequenceEqualSubscriber.prototype.checkValues = function () {\n        var _c = this, _a = _c._a, _b = _c._b, comparor = _c.comparor;\n        while (_a.length > 0 && _b.length > 0) {\n            var a = _a.shift();\n            var b = _b.shift();\n            var areEqual = false;\n            if (comparor) {\n                areEqual = tryCatch_1.tryCatch(comparor)(a, b);\n                if (areEqual === errorObject_1.errorObject) {\n                    this.destination.error(errorObject_1.errorObject.e);\n                }\n            }\n            else {\n                areEqual = a === b;\n            }\n            if (!areEqual) {\n                this.emit(false);\n            }\n        }\n    };\n    SequenceEqualSubscriber.prototype.emit = function (value) {\n        var destination = this.destination;\n        destination.next(value);\n        destination.complete();\n    };\n    SequenceEqualSubscriber.prototype.nextB = function (value) {\n        if (this._oneComplete && this._a.length === 0) {\n            this.emit(false);\n        }\n        else {\n            this._b.push(value);\n            this.checkValues();\n        }\n    };\n    return SequenceEqualSubscriber;\n}(Subscriber_1.Subscriber));\nexports.SequenceEqualSubscriber = SequenceEqualSubscriber;\nvar SequenceEqualCompareToSubscriber = (function (_super) {\n    __extends(SequenceEqualCompareToSubscriber, _super);\n    function SequenceEqualCompareToSubscriber(destination, parent) {\n        _super.call(this, destination);\n        this.parent = parent;\n    }\n    SequenceEqualCompareToSubscriber.prototype._next = function (value) {\n        this.parent.nextB(value);\n    };\n    SequenceEqualCompareToSubscriber.prototype._error = function (err) {\n        this.parent.error(err);\n    };\n    SequenceEqualCompareToSubscriber.prototype._complete = function () {\n        this.parent._complete();\n    };\n    return SequenceEqualCompareToSubscriber;\n}(Subscriber_1.Subscriber));\n//# sourceMappingURL=sequenceEqual.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// /workspace/Energy-Consumption/~/rxjs/operator/sequenceEqual.js\n// module id = 937\n// module chunks = 0 1","\"use strict\";\nvar multicast_1 = require('./multicast');\nvar Subject_1 = require('../Subject');\nfunction shareSubjectFactory() {\n    return new Subject_1.Subject();\n}\n/**\n * Returns a new Observable that multicasts (shares) the original Observable. As long as there is at least one\n * Subscriber this Observable will be subscribed and emitting data. When all subscribers have unsubscribed it will\n * unsubscribe from the source Observable. Because the Observable is multicasting it makes the stream `hot`.\n * This is an alias for .publish().refCount().\n *\n * <img src=\"./img/share.png\" width=\"100%\">\n *\n * @return {Observable<T>} an Observable that upon connection causes the source Observable to emit items to its Observers\n * @method share\n * @owner Observable\n */\nfunction share() {\n    return multicast_1.multicast.call(this, shareSubjectFactory).refCount();\n}\nexports.share = share;\n;\n//# sourceMappingURL=share.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// /workspace/Energy-Consumption/~/rxjs/operator/share.js\n// module id = 938\n// module chunks = 0 1","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Subscriber_1 = require('../Subscriber');\nvar EmptyError_1 = require('../util/EmptyError');\n/**\n * Returns an Observable that emits the single item emitted by the source Observable that matches a specified\n * predicate, if that Observable emits one such item. If the source Observable emits more than one such item or no\n * such items, notify of an IllegalArgumentException or NoSuchElementException respectively.\n *\n * <img src=\"./img/single.png\" width=\"100%\">\n *\n * @throws {EmptyError} Delivers an EmptyError to the Observer's `error`\n * callback if the Observable completes before any `next` notification was sent.\n * @param {Function} a predicate function to evaluate items emitted by the source Observable.\n * @return {Observable<T>} an Observable that emits the single item emitted by the source Observable that matches\n * the predicate.\n .\n * @method single\n * @owner Observable\n */\nfunction single(predicate) {\n    return this.lift(new SingleOperator(predicate, this));\n}\nexports.single = single;\nvar SingleOperator = (function () {\n    function SingleOperator(predicate, source) {\n        this.predicate = predicate;\n        this.source = source;\n    }\n    SingleOperator.prototype.call = function (subscriber, source) {\n        return source._subscribe(new SingleSubscriber(subscriber, this.predicate, this.source));\n    };\n    return SingleOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar SingleSubscriber = (function (_super) {\n    __extends(SingleSubscriber, _super);\n    function SingleSubscriber(destination, predicate, source) {\n        _super.call(this, destination);\n        this.predicate = predicate;\n        this.source = source;\n        this.seenValue = false;\n        this.index = 0;\n    }\n    SingleSubscriber.prototype.applySingleValue = function (value) {\n        if (this.seenValue) {\n            this.destination.error('Sequence contains more than one element');\n        }\n        else {\n            this.seenValue = true;\n            this.singleValue = value;\n        }\n    };\n    SingleSubscriber.prototype._next = function (value) {\n        var predicate = this.predicate;\n        this.index++;\n        if (predicate) {\n            this.tryNext(value);\n        }\n        else {\n            this.applySingleValue(value);\n        }\n    };\n    SingleSubscriber.prototype.tryNext = function (value) {\n        try {\n            var result = this.predicate(value, this.index, this.source);\n            if (result) {\n                this.applySingleValue(value);\n            }\n        }\n        catch (err) {\n            this.destination.error(err);\n        }\n    };\n    SingleSubscriber.prototype._complete = function () {\n        var destination = this.destination;\n        if (this.index > 0) {\n            destination.next(this.seenValue ? this.singleValue : undefined);\n            destination.complete();\n        }\n        else {\n            destination.error(new EmptyError_1.EmptyError);\n        }\n    };\n    return SingleSubscriber;\n}(Subscriber_1.Subscriber));\n//# sourceMappingURL=single.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// /workspace/Energy-Consumption/~/rxjs/operator/single.js\n// module id = 939\n// module chunks = 0 1","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Subscriber_1 = require('../Subscriber');\n/**\n * Returns an Observable that skips `n` items emitted by an Observable.\n *\n * <img src=\"./img/skip.png\" width=\"100%\">\n *\n * @param {Number} the `n` of times, items emitted by source Observable should be skipped.\n * @return {Observable} an Observable that skips values emitted by the source Observable.\n *\n * @method skip\n * @owner Observable\n */\nfunction skip(total) {\n    return this.lift(new SkipOperator(total));\n}\nexports.skip = skip;\nvar SkipOperator = (function () {\n    function SkipOperator(total) {\n        this.total = total;\n    }\n    SkipOperator.prototype.call = function (subscriber, source) {\n        return source._subscribe(new SkipSubscriber(subscriber, this.total));\n    };\n    return SkipOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar SkipSubscriber = (function (_super) {\n    __extends(SkipSubscriber, _super);\n    function SkipSubscriber(destination, total) {\n        _super.call(this, destination);\n        this.total = total;\n        this.count = 0;\n    }\n    SkipSubscriber.prototype._next = function (x) {\n        if (++this.count > this.total) {\n            this.destination.next(x);\n        }\n    };\n    return SkipSubscriber;\n}(Subscriber_1.Subscriber));\n//# sourceMappingURL=skip.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// /workspace/Energy-Consumption/~/rxjs/operator/skip.js\n// module id = 940\n// module chunks = 0 1","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar OuterSubscriber_1 = require('../OuterSubscriber');\nvar subscribeToResult_1 = require('../util/subscribeToResult');\n/**\n * Returns an Observable that skips items emitted by the source Observable until a second Observable emits an item.\n *\n * <img src=\"./img/skipUntil.png\" width=\"100%\">\n *\n * @param {Observable} the second Observable that has to emit an item before the source Observable's elements begin to\n * be mirrored by the resulting Observable.\n * @return {Observable<T>} an Observable that skips items from the source Observable until the second Observable emits\n * an item, then emits the remaining items.\n * @method skipUntil\n * @owner Observable\n */\nfunction skipUntil(notifier) {\n    return this.lift(new SkipUntilOperator(notifier));\n}\nexports.skipUntil = skipUntil;\nvar SkipUntilOperator = (function () {\n    function SkipUntilOperator(notifier) {\n        this.notifier = notifier;\n    }\n    SkipUntilOperator.prototype.call = function (subscriber, source) {\n        return source._subscribe(new SkipUntilSubscriber(subscriber, this.notifier));\n    };\n    return SkipUntilOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar SkipUntilSubscriber = (function (_super) {\n    __extends(SkipUntilSubscriber, _super);\n    function SkipUntilSubscriber(destination, notifier) {\n        _super.call(this, destination);\n        this.hasValue = false;\n        this.isInnerStopped = false;\n        this.add(subscribeToResult_1.subscribeToResult(this, notifier));\n    }\n    SkipUntilSubscriber.prototype._next = function (value) {\n        if (this.hasValue) {\n            _super.prototype._next.call(this, value);\n        }\n    };\n    SkipUntilSubscriber.prototype._complete = function () {\n        if (this.isInnerStopped) {\n            _super.prototype._complete.call(this);\n        }\n        else {\n            this.unsubscribe();\n        }\n    };\n    SkipUntilSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {\n        this.hasValue = true;\n    };\n    SkipUntilSubscriber.prototype.notifyComplete = function () {\n        this.isInnerStopped = true;\n        if (this.isStopped) {\n            _super.prototype._complete.call(this);\n        }\n    };\n    return SkipUntilSubscriber;\n}(OuterSubscriber_1.OuterSubscriber));\n//# sourceMappingURL=skipUntil.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// /workspace/Energy-Consumption/~/rxjs/operator/skipUntil.js\n// module id = 941\n// module chunks = 0 1","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Subscriber_1 = require('../Subscriber');\n/**\n * Returns an Observable that skips all items emitted by the source Observable as long as a specified condition holds\n * true, but emits all further source items as soon as the condition becomes false.\n *\n * <img src=\"./img/skipWhile.png\" width=\"100%\">\n *\n * @param {Function} predicate - a function to test each item emitted from the source Observable.\n * @return {Observable<T>} an Observable that begins emitting items emitted by the source Observable when the\n * specified predicate becomes false.\n * @method skipWhile\n * @owner Observable\n */\nfunction skipWhile(predicate) {\n    return this.lift(new SkipWhileOperator(predicate));\n}\nexports.skipWhile = skipWhile;\nvar SkipWhileOperator = (function () {\n    function SkipWhileOperator(predicate) {\n        this.predicate = predicate;\n    }\n    SkipWhileOperator.prototype.call = function (subscriber, source) {\n        return source._subscribe(new SkipWhileSubscriber(subscriber, this.predicate));\n    };\n    return SkipWhileOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar SkipWhileSubscriber = (function (_super) {\n    __extends(SkipWhileSubscriber, _super);\n    function SkipWhileSubscriber(destination, predicate) {\n        _super.call(this, destination);\n        this.predicate = predicate;\n        this.skipping = true;\n        this.index = 0;\n    }\n    SkipWhileSubscriber.prototype._next = function (value) {\n        var destination = this.destination;\n        if (this.skipping) {\n            this.tryCallPredicate(value);\n        }\n        if (!this.skipping) {\n            destination.next(value);\n        }\n    };\n    SkipWhileSubscriber.prototype.tryCallPredicate = function (value) {\n        try {\n            var result = this.predicate(value, this.index++);\n            this.skipping = Boolean(result);\n        }\n        catch (err) {\n            this.destination.error(err);\n        }\n    };\n    return SkipWhileSubscriber;\n}(Subscriber_1.Subscriber));\n//# sourceMappingURL=skipWhile.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// /workspace/Energy-Consumption/~/rxjs/operator/skipWhile.js\n// module id = 942\n// module chunks = 0 1","\"use strict\";\nvar ArrayObservable_1 = require('../observable/ArrayObservable');\nvar ScalarObservable_1 = require('../observable/ScalarObservable');\nvar EmptyObservable_1 = require('../observable/EmptyObservable');\nvar concat_1 = require('./concat');\nvar isScheduler_1 = require('../util/isScheduler');\n/**\n * Returns an Observable that emits the items in a specified Iterable before it begins to emit items emitted by the\n * source Observable.\n *\n * <img src=\"./img/startWith.png\" width=\"100%\">\n *\n * @param {Values} an Iterable that contains the items you want the modified Observable to emit first.\n * @return {Observable} an Observable that emits the items in the specified Iterable and then emits the items\n * emitted by the source Observable.\n * @method startWith\n * @owner Observable\n */\nfunction startWith() {\n    var array = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        array[_i - 0] = arguments[_i];\n    }\n    var scheduler = array[array.length - 1];\n    if (isScheduler_1.isScheduler(scheduler)) {\n        array.pop();\n    }\n    else {\n        scheduler = null;\n    }\n    var len = array.length;\n    if (len === 1) {\n        return concat_1.concatStatic(new ScalarObservable_1.ScalarObservable(array[0], scheduler), this);\n    }\n    else if (len > 1) {\n        return concat_1.concatStatic(new ArrayObservable_1.ArrayObservable(array, scheduler), this);\n    }\n    else {\n        return concat_1.concatStatic(new EmptyObservable_1.EmptyObservable(scheduler), this);\n    }\n}\nexports.startWith = startWith;\n//# sourceMappingURL=startWith.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// /workspace/Energy-Consumption/~/rxjs/operator/startWith.js\n// module id = 943\n// module chunks = 0 1","\"use strict\";\nvar SubscribeOnObservable_1 = require('../observable/SubscribeOnObservable');\n/**\n * Asynchronously subscribes Observers to this Observable on the specified Scheduler.\n *\n * <img src=\"./img/subscribeOn.png\" width=\"100%\">\n *\n * @param {Scheduler} the Scheduler to perform subscription actions on.\n * @return {Observable<T>} the source Observable modified so that its subscriptions happen on the specified Scheduler\n .\n * @method subscribeOn\n * @owner Observable\n */\nfunction subscribeOn(scheduler, delay) {\n    if (delay === void 0) { delay = 0; }\n    return new SubscribeOnObservable_1.SubscribeOnObservable(this, delay, scheduler);\n}\nexports.subscribeOn = subscribeOn;\n//# sourceMappingURL=subscribeOn.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// /workspace/Energy-Consumption/~/rxjs/operator/subscribeOn.js\n// module id = 944\n// module chunks = 0 1","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar OuterSubscriber_1 = require('../OuterSubscriber');\nvar subscribeToResult_1 = require('../util/subscribeToResult');\n/**\n * Converts a higher-order Observable into a first-order Observable by\n * subscribing to only the most recently emitted of those inner Observables.\n *\n * <span class=\"informal\">Flattens an Observable-of-Observables by dropping the\n * previous inner Observable once a new one appears.</span>\n *\n * <img src=\"./img/switch.png\" width=\"100%\">\n *\n * `switch` subscribes to an Observable that emits Observables, also known as a\n * higher-order Observable. Each time it observes one of these emitted inner\n * Observables, the output Observable subscribes to the inner Observable and\n * begins emitting the items emitted by that. So far, it behaves\n * like {@link mergeAll}. However, when a new inner Observable is emitted,\n * `switch` unsubscribes from the earlier-emitted inner Observable and\n * subscribes to the new inner Observable and begins emitting items from it. It\n * continues to behave like this for subsequent inner Observables.\n *\n * @example <caption>Rerun an interval Observable on every click event</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * // Each click event is mapped to an Observable that ticks every second\n * var higherOrder = clicks.map((ev) => Rx.Observable.interval(1000));\n * var switched = higherOrder.switch();\n * // The outcome is that `switched` is essentially a timer that restarts\n * // on every click. The interval Observables from older clicks do not merge\n * // with the current interval Observable.\n * switched.subscribe(x => console.log(x));\n *\n * @see {@link combineAll}\n * @see {@link concatAll}\n * @see {@link exhaust}\n * @see {@link mergeAll}\n * @see {@link switchMap}\n * @see {@link switchMapTo}\n * @see {@link zipAll}\n *\n * @return {Observable<T>} An Observable that emits the items emitted by the\n * Observable most recently emitted by the source Observable.\n * @method switch\n * @name switch\n * @owner Observable\n */\nfunction _switch() {\n    return this.lift(new SwitchOperator());\n}\nexports._switch = _switch;\nvar SwitchOperator = (function () {\n    function SwitchOperator() {\n    }\n    SwitchOperator.prototype.call = function (subscriber, source) {\n        return source._subscribe(new SwitchSubscriber(subscriber));\n    };\n    return SwitchOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar SwitchSubscriber = (function (_super) {\n    __extends(SwitchSubscriber, _super);\n    function SwitchSubscriber(destination) {\n        _super.call(this, destination);\n        this.active = 0;\n        this.hasCompleted = false;\n    }\n    SwitchSubscriber.prototype._next = function (value) {\n        this.unsubscribeInner();\n        this.active++;\n        this.add(this.innerSubscription = subscribeToResult_1.subscribeToResult(this, value));\n    };\n    SwitchSubscriber.prototype._complete = function () {\n        this.hasCompleted = true;\n        if (this.active === 0) {\n            this.destination.complete();\n        }\n    };\n    SwitchSubscriber.prototype.unsubscribeInner = function () {\n        this.active = this.active > 0 ? this.active - 1 : 0;\n        var innerSubscription = this.innerSubscription;\n        if (innerSubscription) {\n            innerSubscription.unsubscribe();\n            this.remove(innerSubscription);\n        }\n    };\n    SwitchSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {\n        this.destination.next(innerValue);\n    };\n    SwitchSubscriber.prototype.notifyError = function (err) {\n        this.destination.error(err);\n    };\n    SwitchSubscriber.prototype.notifyComplete = function () {\n        this.unsubscribeInner();\n        if (this.hasCompleted && this.active === 0) {\n            this.destination.complete();\n        }\n    };\n    return SwitchSubscriber;\n}(OuterSubscriber_1.OuterSubscriber));\n//# sourceMappingURL=switch.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// /workspace/Energy-Consumption/~/rxjs/operator/switch.js\n// module id = 945\n// module chunks = 0 1","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar OuterSubscriber_1 = require('../OuterSubscriber');\nvar subscribeToResult_1 = require('../util/subscribeToResult');\n/**\n * Projects each source value to an Observable which is merged in the output\n * Observable, emitting values only from the most recently projected Observable.\n *\n * <span class=\"informal\">Maps each value to an Observable, then flattens all of\n * these inner Observables using {@link switch}.</span>\n *\n * <img src=\"./img/switchMap.png\" width=\"100%\">\n *\n * Returns an Observable that emits items based on applying a function that you\n * supply to each item emitted by the source Observable, where that function\n * returns an (so-called \"inner\") Observable. Each time it observes one of these\n * inner Observables, the output Observable begins emitting the items emitted by\n * that inner Observable. When a new inner Observable is emitted, `switchMap`\n * stops emitting items from the earlier-emitted inner Observable and begins\n * emitting items from the new one. It continues to behave like this for\n * subsequent inner Observables.\n *\n * @example <caption>Rerun an interval Observable on every click event</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.switchMap((ev) => Rx.Observable.interval(1000));\n * result.subscribe(x => console.log(x));\n *\n * @see {@link concatMap}\n * @see {@link exhaustMap}\n * @see {@link mergeMap}\n * @see {@link switch}\n * @see {@link switchMapTo}\n *\n * @param {function(value: T, ?index: number): Observable} project A function\n * that, when applied to an item emitted by the source Observable, returns an\n * Observable.\n * @param {function(outerValue: T, innerValue: I, outerIndex: number, innerIndex: number): any} [resultSelector]\n * A function to produce the value on the output Observable based on the values\n * and the indices of the source (outer) emission and the inner Observable\n * emission. The arguments passed to this function are:\n * - `outerValue`: the value that came from the source\n * - `innerValue`: the value that came from the projected Observable\n * - `outerIndex`: the \"index\" of the value that came from the source\n * - `innerIndex`: the \"index\" of the value from the projected Observable\n * @return {Observable} An Observable that emits the result of applying the\n * projection function (and the optional `resultSelector`) to each item emitted\n * by the source Observable and taking only the values from the most recently\n * projected inner Observable.\n * @method switchMap\n * @owner Observable\n */\nfunction switchMap(project, resultSelector) {\n    return this.lift(new SwitchMapOperator(project, resultSelector));\n}\nexports.switchMap = switchMap;\nvar SwitchMapOperator = (function () {\n    function SwitchMapOperator(project, resultSelector) {\n        this.project = project;\n        this.resultSelector = resultSelector;\n    }\n    SwitchMapOperator.prototype.call = function (subscriber, source) {\n        return source._subscribe(new SwitchMapSubscriber(subscriber, this.project, this.resultSelector));\n    };\n    return SwitchMapOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar SwitchMapSubscriber = (function (_super) {\n    __extends(SwitchMapSubscriber, _super);\n    function SwitchMapSubscriber(destination, project, resultSelector) {\n        _super.call(this, destination);\n        this.project = project;\n        this.resultSelector = resultSelector;\n        this.index = 0;\n    }\n    SwitchMapSubscriber.prototype._next = function (value) {\n        var result;\n        var index = this.index++;\n        try {\n            result = this.project(value, index);\n        }\n        catch (error) {\n            this.destination.error(error);\n            return;\n        }\n        this._innerSub(result, value, index);\n    };\n    SwitchMapSubscriber.prototype._innerSub = function (result, value, index) {\n        var innerSubscription = this.innerSubscription;\n        if (innerSubscription) {\n            innerSubscription.unsubscribe();\n        }\n        this.add(this.innerSubscription = subscribeToResult_1.subscribeToResult(this, result, value, index));\n    };\n    SwitchMapSubscriber.prototype._complete = function () {\n        var innerSubscription = this.innerSubscription;\n        if (!innerSubscription || innerSubscription.closed) {\n            _super.prototype._complete.call(this);\n        }\n    };\n    SwitchMapSubscriber.prototype._unsubscribe = function () {\n        this.innerSubscription = null;\n    };\n    SwitchMapSubscriber.prototype.notifyComplete = function (innerSub) {\n        this.remove(innerSub);\n        this.innerSubscription = null;\n        if (this.isStopped) {\n            _super.prototype._complete.call(this);\n        }\n    };\n    SwitchMapSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {\n        if (this.resultSelector) {\n            this._tryNotifyNext(outerValue, innerValue, outerIndex, innerIndex);\n        }\n        else {\n            this.destination.next(innerValue);\n        }\n    };\n    SwitchMapSubscriber.prototype._tryNotifyNext = function (outerValue, innerValue, outerIndex, innerIndex) {\n        var result;\n        try {\n            result = this.resultSelector(outerValue, innerValue, outerIndex, innerIndex);\n        }\n        catch (err) {\n            this.destination.error(err);\n            return;\n        }\n        this.destination.next(result);\n    };\n    return SwitchMapSubscriber;\n}(OuterSubscriber_1.OuterSubscriber));\n//# sourceMappingURL=switchMap.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// /workspace/Energy-Consumption/~/rxjs/operator/switchMap.js\n// module id = 946\n// module chunks = 0 1","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar OuterSubscriber_1 = require('../OuterSubscriber');\nvar subscribeToResult_1 = require('../util/subscribeToResult');\n/**\n * Projects each source value to the same Observable which is flattened multiple\n * times with {@link switch} in the output Observable.\n *\n * <span class=\"informal\">It's like {@link switchMap}, but maps each value\n * always to the same inner Observable.</span>\n *\n * <img src=\"./img/switchMapTo.png\" width=\"100%\">\n *\n * Maps each source value to the given Observable `innerObservable` regardless\n * of the source value, and then flattens those resulting Observables into one\n * single Observable, which is the output Observable. The output Observables\n * emits values only from the most recently emitted instance of\n * `innerObservable`.\n *\n * @example <caption>Rerun an interval Observable on every click event</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.switchMapTo(Rx.Observable.interval(1000));\n * result.subscribe(x => console.log(x));\n *\n * @see {@link concatMapTo}\n * @see {@link switch}\n * @see {@link switchMap}\n * @see {@link mergeMapTo}\n *\n * @param {Observable} innerObservable An Observable to replace each value from\n * the source Observable.\n * @param {function(outerValue: T, innerValue: I, outerIndex: number, innerIndex: number): any} [resultSelector]\n * A function to produce the value on the output Observable based on the values\n * and the indices of the source (outer) emission and the inner Observable\n * emission. The arguments passed to this function are:\n * - `outerValue`: the value that came from the source\n * - `innerValue`: the value that came from the projected Observable\n * - `outerIndex`: the \"index\" of the value that came from the source\n * - `innerIndex`: the \"index\" of the value from the projected Observable\n * @return {Observable} An Observable that emits items from the given\n * `innerObservable` every time a value is emitted on the source Observable.\n * @return {Observable} An Observable that emits items from the given\n * `innerObservable` (and optionally transformed through `resultSelector`) every\n * time a value is emitted on the source Observable, and taking only the values\n * from the most recently projected inner Observable.\n * @method switchMapTo\n * @owner Observable\n */\nfunction switchMapTo(innerObservable, resultSelector) {\n    return this.lift(new SwitchMapToOperator(innerObservable, resultSelector));\n}\nexports.switchMapTo = switchMapTo;\nvar SwitchMapToOperator = (function () {\n    function SwitchMapToOperator(observable, resultSelector) {\n        this.observable = observable;\n        this.resultSelector = resultSelector;\n    }\n    SwitchMapToOperator.prototype.call = function (subscriber, source) {\n        return source._subscribe(new SwitchMapToSubscriber(subscriber, this.observable, this.resultSelector));\n    };\n    return SwitchMapToOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar SwitchMapToSubscriber = (function (_super) {\n    __extends(SwitchMapToSubscriber, _super);\n    function SwitchMapToSubscriber(destination, inner, resultSelector) {\n        _super.call(this, destination);\n        this.inner = inner;\n        this.resultSelector = resultSelector;\n        this.index = 0;\n    }\n    SwitchMapToSubscriber.prototype._next = function (value) {\n        var innerSubscription = this.innerSubscription;\n        if (innerSubscription) {\n            innerSubscription.unsubscribe();\n        }\n        this.add(this.innerSubscription = subscribeToResult_1.subscribeToResult(this, this.inner, value, this.index++));\n    };\n    SwitchMapToSubscriber.prototype._complete = function () {\n        var innerSubscription = this.innerSubscription;\n        if (!innerSubscription || innerSubscription.closed) {\n            _super.prototype._complete.call(this);\n        }\n    };\n    SwitchMapToSubscriber.prototype._unsubscribe = function () {\n        this.innerSubscription = null;\n    };\n    SwitchMapToSubscriber.prototype.notifyComplete = function (innerSub) {\n        this.remove(innerSub);\n        this.innerSubscription = null;\n        if (this.isStopped) {\n            _super.prototype._complete.call(this);\n        }\n    };\n    SwitchMapToSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {\n        var _a = this, resultSelector = _a.resultSelector, destination = _a.destination;\n        if (resultSelector) {\n            this.tryResultSelector(outerValue, innerValue, outerIndex, innerIndex);\n        }\n        else {\n            destination.next(innerValue);\n        }\n    };\n    SwitchMapToSubscriber.prototype.tryResultSelector = function (outerValue, innerValue, outerIndex, innerIndex) {\n        var _a = this, resultSelector = _a.resultSelector, destination = _a.destination;\n        var result;\n        try {\n            result = resultSelector(outerValue, innerValue, outerIndex, innerIndex);\n        }\n        catch (err) {\n            destination.error(err);\n            return;\n        }\n        destination.next(result);\n    };\n    return SwitchMapToSubscriber;\n}(OuterSubscriber_1.OuterSubscriber));\n//# sourceMappingURL=switchMapTo.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// /workspace/Energy-Consumption/~/rxjs/operator/switchMapTo.js\n// module id = 947\n// module chunks = 0 1","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Subscriber_1 = require('../Subscriber');\nvar ArgumentOutOfRangeError_1 = require('../util/ArgumentOutOfRangeError');\nvar EmptyObservable_1 = require('../observable/EmptyObservable');\n/**\n * Emits only the first `count` values emitted by the source Observable.\n *\n * <span class=\"informal\">Takes the first `count` values from the source, then\n * completes.</span>\n *\n * <img src=\"./img/take.png\" width=\"100%\">\n *\n * `take` returns an Observable that emits only the first `count` values emitted\n * by the source Observable. If the source emits fewer than `count` values then\n * all of its values are emitted. After that, it completes, regardless if the\n * source completes.\n *\n * @example <caption>Take the first 5 seconds of an infinite 1-second interval Observable</caption>\n * var interval = Rx.Observable.interval(1000);\n * var five = interval.take(5);\n * five.subscribe(x => console.log(x));\n *\n * @see {@link takeLast}\n * @see {@link takeUntil}\n * @see {@link takeWhile}\n * @see {@link skip}\n *\n * @throws {ArgumentOutOfRangeError} When using `take(i)`, it delivers an\n * ArgumentOutOrRangeError to the Observer's `error` callback if `i < 0`.\n *\n * @param {number} count The maximum number of `next` values to emit.\n * @return {Observable<T>} An Observable that emits only the first `count`\n * values emitted by the source Observable, or all of the values from the source\n * if the source emits fewer than `count` values.\n * @method take\n * @owner Observable\n */\nfunction take(count) {\n    if (count === 0) {\n        return new EmptyObservable_1.EmptyObservable();\n    }\n    else {\n        return this.lift(new TakeOperator(count));\n    }\n}\nexports.take = take;\nvar TakeOperator = (function () {\n    function TakeOperator(total) {\n        this.total = total;\n        if (this.total < 0) {\n            throw new ArgumentOutOfRangeError_1.ArgumentOutOfRangeError;\n        }\n    }\n    TakeOperator.prototype.call = function (subscriber, source) {\n        return source._subscribe(new TakeSubscriber(subscriber, this.total));\n    };\n    return TakeOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar TakeSubscriber = (function (_super) {\n    __extends(TakeSubscriber, _super);\n    function TakeSubscriber(destination, total) {\n        _super.call(this, destination);\n        this.total = total;\n        this.count = 0;\n    }\n    TakeSubscriber.prototype._next = function (value) {\n        var total = this.total;\n        if (++this.count <= total) {\n            this.destination.next(value);\n            if (this.count === total) {\n                this.destination.complete();\n                this.unsubscribe();\n            }\n        }\n    };\n    return TakeSubscriber;\n}(Subscriber_1.Subscriber));\n//# sourceMappingURL=take.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// /workspace/Energy-Consumption/~/rxjs/operator/take.js\n// module id = 948\n// module chunks = 0 1","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Subscriber_1 = require('../Subscriber');\nvar ArgumentOutOfRangeError_1 = require('../util/ArgumentOutOfRangeError');\nvar EmptyObservable_1 = require('../observable/EmptyObservable');\n/**\n * Emits only the last `count` values emitted by the source Observable.\n *\n * <span class=\"informal\">Remembers the latest `count` values, then emits those\n * only when the source completes.</span>\n *\n * <img src=\"./img/takeLast.png\" width=\"100%\">\n *\n * `takeLast` returns an Observable that emits at most the last `count` values\n * emitted by the source Observable. If the source emits fewer than `count`\n * values then all of its values are emitted. This operator must wait until the\n * `complete` notification emission from the source in order to emit the `next`\n * values on the output Observable, because otherwise it is impossible to know\n * whether or not more values will be emitted on the source. For this reason,\n * all values are emitted synchronously, followed by the complete notification.\n *\n * @example <caption>Take the last 3 values of an Observable with many values</caption>\n * var many = Rx.Observable.range(1, 100);\n * var lastThree = many.takeLast(3);\n * lastThree.subscribe(x => console.log(x));\n *\n * @see {@link take}\n * @see {@link takeUntil}\n * @see {@link takeWhile}\n * @see {@link skip}\n *\n * @throws {ArgumentOutOfRangeError} When using `takeLast(i)`, it delivers an\n * ArgumentOutOrRangeError to the Observer's `error` callback if `i < 0`.\n *\n * @param {number} count The maximum number of values to emit from the end of\n * the sequence of values emitted by the source Observable.\n * @return {Observable<T>} An Observable that emits at most the last count\n * values emitted by the source Observable.\n * @method takeLast\n * @owner Observable\n */\nfunction takeLast(count) {\n    if (count === 0) {\n        return new EmptyObservable_1.EmptyObservable();\n    }\n    else {\n        return this.lift(new TakeLastOperator(count));\n    }\n}\nexports.takeLast = takeLast;\nvar TakeLastOperator = (function () {\n    function TakeLastOperator(total) {\n        this.total = total;\n        if (this.total < 0) {\n            throw new ArgumentOutOfRangeError_1.ArgumentOutOfRangeError;\n        }\n    }\n    TakeLastOperator.prototype.call = function (subscriber, source) {\n        return source._subscribe(new TakeLastSubscriber(subscriber, this.total));\n    };\n    return TakeLastOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar TakeLastSubscriber = (function (_super) {\n    __extends(TakeLastSubscriber, _super);\n    function TakeLastSubscriber(destination, total) {\n        _super.call(this, destination);\n        this.total = total;\n        this.ring = new Array();\n        this.count = 0;\n    }\n    TakeLastSubscriber.prototype._next = function (value) {\n        var ring = this.ring;\n        var total = this.total;\n        var count = this.count++;\n        if (ring.length < total) {\n            ring.push(value);\n        }\n        else {\n            var index = count % total;\n            ring[index] = value;\n        }\n    };\n    TakeLastSubscriber.prototype._complete = function () {\n        var destination = this.destination;\n        var count = this.count;\n        if (count > 0) {\n            var total = this.count >= this.total ? this.total : this.count;\n            var ring = this.ring;\n            for (var i = 0; i < total; i++) {\n                var idx = (count++) % total;\n                destination.next(ring[idx]);\n            }\n        }\n        destination.complete();\n    };\n    return TakeLastSubscriber;\n}(Subscriber_1.Subscriber));\n//# sourceMappingURL=takeLast.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// /workspace/Energy-Consumption/~/rxjs/operator/takeLast.js\n// module id = 949\n// module chunks = 0 1","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar OuterSubscriber_1 = require('../OuterSubscriber');\nvar subscribeToResult_1 = require('../util/subscribeToResult');\n/**\n * Emits the values emitted by the source Observable until a `notifier`\n * Observable emits a value.\n *\n * <span class=\"informal\">Lets values pass until a second Observable,\n * `notifier`, emits something. Then, it completes.</span>\n *\n * <img src=\"./img/takeUntil.png\" width=\"100%\">\n *\n * `takeUntil` subscribes and begins mirroring the source Observable. It also\n * monitors a second Observable, `notifier` that you provide. If the `notifier`\n * emits a value or a complete notification, the output Observable stops\n * mirroring the source Observable and completes.\n *\n * @example <caption>Tick every second until the first click happens</caption>\n * var interval = Rx.Observable.interval(1000);\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = interval.takeUntil(clicks);\n * result.subscribe(x => console.log(x));\n *\n * @see {@link take}\n * @see {@link takeLast}\n * @see {@link takeWhile}\n * @see {@link skip}\n *\n * @param {Observable} notifier The Observable whose first emitted value will\n * cause the output Observable of `takeUntil` to stop emitting values from the\n * source Observable.\n * @return {Observable<T>} An Observable that emits the values from the source\n * Observable until such time as `notifier` emits its first value.\n * @method takeUntil\n * @owner Observable\n */\nfunction takeUntil(notifier) {\n    return this.lift(new TakeUntilOperator(notifier));\n}\nexports.takeUntil = takeUntil;\nvar TakeUntilOperator = (function () {\n    function TakeUntilOperator(notifier) {\n        this.notifier = notifier;\n    }\n    TakeUntilOperator.prototype.call = function (subscriber, source) {\n        return source._subscribe(new TakeUntilSubscriber(subscriber, this.notifier));\n    };\n    return TakeUntilOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar TakeUntilSubscriber = (function (_super) {\n    __extends(TakeUntilSubscriber, _super);\n    function TakeUntilSubscriber(destination, notifier) {\n        _super.call(this, destination);\n        this.notifier = notifier;\n        this.add(subscribeToResult_1.subscribeToResult(this, notifier));\n    }\n    TakeUntilSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {\n        this.complete();\n    };\n    TakeUntilSubscriber.prototype.notifyComplete = function () {\n        // noop\n    };\n    return TakeUntilSubscriber;\n}(OuterSubscriber_1.OuterSubscriber));\n//# sourceMappingURL=takeUntil.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// /workspace/Energy-Consumption/~/rxjs/operator/takeUntil.js\n// module id = 950\n// module chunks = 0 1","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Subscriber_1 = require('../Subscriber');\n/**\n * Emits values emitted by the source Observable so long as each value satisfies\n * the given `predicate`, and then completes as soon as this `predicate` is not\n * satisfied.\n *\n * <span class=\"informal\">Takes values from the source only while they pass the\n * condition given. When the first value does not satisfy, it completes.</span>\n *\n * <img src=\"./img/takeWhile.png\" width=\"100%\">\n *\n * `takeWhile` subscribes and begins mirroring the source Observable. Each value\n * emitted on the source is given to the `predicate` function which returns a\n * boolean, representing a condition to be satisfied by the source values. The\n * output Observable emits the source values until such time as the `predicate`\n * returns false, at which point `takeWhile` stops mirroring the source\n * Observable and completes the output Observable.\n *\n * @example <caption>Emit click events only while the clientX property is greater than 200</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.takeWhile(ev => ev.clientX > 200);\n * result.subscribe(x => console.log(x));\n *\n * @see {@link take}\n * @see {@link takeLast}\n * @see {@link takeUntil}\n * @see {@link skip}\n *\n * @param {function(value: T, index: number): boolean} predicate A function that\n * evaluates a value emitted by the source Observable and returns a boolean.\n * Also takes the (zero-based) index as the second argument.\n * @return {Observable<T>} An Observable that emits the values from the source\n * Observable so long as each value satisfies the condition defined by the\n * `predicate`, then completes.\n * @method takeWhile\n * @owner Observable\n */\nfunction takeWhile(predicate) {\n    return this.lift(new TakeWhileOperator(predicate));\n}\nexports.takeWhile = takeWhile;\nvar TakeWhileOperator = (function () {\n    function TakeWhileOperator(predicate) {\n        this.predicate = predicate;\n    }\n    TakeWhileOperator.prototype.call = function (subscriber, source) {\n        return source._subscribe(new TakeWhileSubscriber(subscriber, this.predicate));\n    };\n    return TakeWhileOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar TakeWhileSubscriber = (function (_super) {\n    __extends(TakeWhileSubscriber, _super);\n    function TakeWhileSubscriber(destination, predicate) {\n        _super.call(this, destination);\n        this.predicate = predicate;\n        this.index = 0;\n    }\n    TakeWhileSubscriber.prototype._next = function (value) {\n        var destination = this.destination;\n        var result;\n        try {\n            result = this.predicate(value, this.index++);\n        }\n        catch (err) {\n            destination.error(err);\n            return;\n        }\n        this.nextOrComplete(value, result);\n    };\n    TakeWhileSubscriber.prototype.nextOrComplete = function (value, predicateResult) {\n        var destination = this.destination;\n        if (Boolean(predicateResult)) {\n            destination.next(value);\n        }\n        else {\n            destination.complete();\n        }\n    };\n    return TakeWhileSubscriber;\n}(Subscriber_1.Subscriber));\n//# sourceMappingURL=takeWhile.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// /workspace/Energy-Consumption/~/rxjs/operator/takeWhile.js\n// module id = 951\n// module chunks = 0 1","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar OuterSubscriber_1 = require('../OuterSubscriber');\nvar subscribeToResult_1 = require('../util/subscribeToResult');\n/**\n * Emits a value from the source Observable, then ignores subsequent source\n * values for a duration determined by another Observable, then repeats this\n * process.\n *\n * <span class=\"informal\">It's like {@link throttleTime}, but the silencing\n * duration is determined by a second Observable.</span>\n *\n * <img src=\"./img/throttle.png\" width=\"100%\">\n *\n * `throttle` emits the source Observable values on the output Observable\n * when its internal timer is disabled, and ignores source values when the timer\n * is enabled. Initially, the timer is disabled. As soon as the first source\n * value arrives, it is forwarded to the output Observable, and then the timer\n * is enabled by calling the `durationSelector` function with the source value,\n * which returns the \"duration\" Observable. When the duration Observable emits a\n * value or completes, the timer is disabled, and this process repeats for the\n * next source value.\n *\n * @example <caption>Emit clicks at a rate of at most one click per second</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.throttle(ev => Rx.Observable.interval(1000));\n * result.subscribe(x => console.log(x));\n *\n * @see {@link audit}\n * @see {@link debounce}\n * @see {@link delayWhen}\n * @see {@link sample}\n * @see {@link throttleTime}\n *\n * @param {function(value: T): Observable|Promise} durationSelector A function\n * that receives a value from the source Observable, for computing the silencing\n * duration for each source value, returned as an Observable or a Promise.\n * @return {Observable<T>} An Observable that performs the throttle operation to\n * limit the rate of emissions from the source.\n * @method throttle\n * @owner Observable\n */\nfunction throttle(durationSelector) {\n    return this.lift(new ThrottleOperator(durationSelector));\n}\nexports.throttle = throttle;\nvar ThrottleOperator = (function () {\n    function ThrottleOperator(durationSelector) {\n        this.durationSelector = durationSelector;\n    }\n    ThrottleOperator.prototype.call = function (subscriber, source) {\n        return source._subscribe(new ThrottleSubscriber(subscriber, this.durationSelector));\n    };\n    return ThrottleOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar ThrottleSubscriber = (function (_super) {\n    __extends(ThrottleSubscriber, _super);\n    function ThrottleSubscriber(destination, durationSelector) {\n        _super.call(this, destination);\n        this.destination = destination;\n        this.durationSelector = durationSelector;\n    }\n    ThrottleSubscriber.prototype._next = function (value) {\n        if (!this.throttled) {\n            this.tryDurationSelector(value);\n        }\n    };\n    ThrottleSubscriber.prototype.tryDurationSelector = function (value) {\n        var duration = null;\n        try {\n            duration = this.durationSelector(value);\n        }\n        catch (err) {\n            this.destination.error(err);\n            return;\n        }\n        this.emitAndThrottle(value, duration);\n    };\n    ThrottleSubscriber.prototype.emitAndThrottle = function (value, duration) {\n        this.add(this.throttled = subscribeToResult_1.subscribeToResult(this, duration));\n        this.destination.next(value);\n    };\n    ThrottleSubscriber.prototype._unsubscribe = function () {\n        var throttled = this.throttled;\n        if (throttled) {\n            this.remove(throttled);\n            this.throttled = null;\n            throttled.unsubscribe();\n        }\n    };\n    ThrottleSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {\n        this._unsubscribe();\n    };\n    ThrottleSubscriber.prototype.notifyComplete = function () {\n        this._unsubscribe();\n    };\n    return ThrottleSubscriber;\n}(OuterSubscriber_1.OuterSubscriber));\n//# sourceMappingURL=throttle.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// /workspace/Energy-Consumption/~/rxjs/operator/throttle.js\n// module id = 952\n// module chunks = 0 1","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Subscriber_1 = require('../Subscriber');\nvar async_1 = require('../scheduler/async');\n/**\n * Emits a value from the source Observable, then ignores subsequent source\n * values for `duration` milliseconds, then repeats this process.\n *\n * <span class=\"informal\">Lets a value pass, then ignores source values for the\n * next `duration` milliseconds.</span>\n *\n * <img src=\"./img/throttleTime.png\" width=\"100%\">\n *\n * `throttleTime` emits the source Observable values on the output Observable\n * when its internal timer is disabled, and ignores source values when the timer\n * is enabled. Initially, the timer is disabled. As soon as the first source\n * value arrives, it is forwarded to the output Observable, and then the timer\n * is enabled. After `duration` milliseconds (or the time unit determined\n * internally by the optional `scheduler`) has passed, the timer is disabled,\n * and this process repeats for the next source value. Optionally takes a\n * {@link Scheduler} for managing timers.\n *\n * @example <caption>Emit clicks at a rate of at most one click per second</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.throttleTime(1000);\n * result.subscribe(x => console.log(x));\n *\n * @see {@link auditTime}\n * @see {@link debounceTime}\n * @see {@link delay}\n * @see {@link sampleTime}\n * @see {@link throttle}\n *\n * @param {number} duration Time to wait before emitting another value after\n * emitting the last value, measured in milliseconds or the time unit determined\n * internally by the optional `scheduler`.\n * @param {Scheduler} [scheduler=async] The {@link Scheduler} to use for\n * managing the timers that handle the sampling.\n * @return {Observable<T>} An Observable that performs the throttle operation to\n * limit the rate of emissions from the source.\n * @method throttleTime\n * @owner Observable\n */\nfunction throttleTime(duration, scheduler) {\n    if (scheduler === void 0) { scheduler = async_1.async; }\n    return this.lift(new ThrottleTimeOperator(duration, scheduler));\n}\nexports.throttleTime = throttleTime;\nvar ThrottleTimeOperator = (function () {\n    function ThrottleTimeOperator(duration, scheduler) {\n        this.duration = duration;\n        this.scheduler = scheduler;\n    }\n    ThrottleTimeOperator.prototype.call = function (subscriber, source) {\n        return source._subscribe(new ThrottleTimeSubscriber(subscriber, this.duration, this.scheduler));\n    };\n    return ThrottleTimeOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar ThrottleTimeSubscriber = (function (_super) {\n    __extends(ThrottleTimeSubscriber, _super);\n    function ThrottleTimeSubscriber(destination, duration, scheduler) {\n        _super.call(this, destination);\n        this.duration = duration;\n        this.scheduler = scheduler;\n    }\n    ThrottleTimeSubscriber.prototype._next = function (value) {\n        if (!this.throttled) {\n            this.add(this.throttled = this.scheduler.schedule(dispatchNext, this.duration, { subscriber: this }));\n            this.destination.next(value);\n        }\n    };\n    ThrottleTimeSubscriber.prototype.clearThrottle = function () {\n        var throttled = this.throttled;\n        if (throttled) {\n            throttled.unsubscribe();\n            this.remove(throttled);\n            this.throttled = null;\n        }\n    };\n    return ThrottleTimeSubscriber;\n}(Subscriber_1.Subscriber));\nfunction dispatchNext(arg) {\n    var subscriber = arg.subscriber;\n    subscriber.clearThrottle();\n}\n//# sourceMappingURL=throttleTime.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// /workspace/Energy-Consumption/~/rxjs/operator/throttleTime.js\n// module id = 953\n// module chunks = 0 1","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar async_1 = require('../scheduler/async');\nvar isDate_1 = require('../util/isDate');\nvar Subscriber_1 = require('../Subscriber');\n/**\n * @param due\n * @param errorToSend\n * @param scheduler\n * @return {Observable<R>|WebSocketSubject<T>|Observable<T>}\n * @method timeout\n * @owner Observable\n */\nfunction timeout(due, errorToSend, scheduler) {\n    if (errorToSend === void 0) { errorToSend = null; }\n    if (scheduler === void 0) { scheduler = async_1.async; }\n    var absoluteTimeout = isDate_1.isDate(due);\n    var waitFor = absoluteTimeout ? (+due - scheduler.now()) : Math.abs(due);\n    return this.lift(new TimeoutOperator(waitFor, absoluteTimeout, errorToSend, scheduler));\n}\nexports.timeout = timeout;\nvar TimeoutOperator = (function () {\n    function TimeoutOperator(waitFor, absoluteTimeout, errorToSend, scheduler) {\n        this.waitFor = waitFor;\n        this.absoluteTimeout = absoluteTimeout;\n        this.errorToSend = errorToSend;\n        this.scheduler = scheduler;\n    }\n    TimeoutOperator.prototype.call = function (subscriber, source) {\n        return source._subscribe(new TimeoutSubscriber(subscriber, this.absoluteTimeout, this.waitFor, this.errorToSend, this.scheduler));\n    };\n    return TimeoutOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar TimeoutSubscriber = (function (_super) {\n    __extends(TimeoutSubscriber, _super);\n    function TimeoutSubscriber(destination, absoluteTimeout, waitFor, errorToSend, scheduler) {\n        _super.call(this, destination);\n        this.absoluteTimeout = absoluteTimeout;\n        this.waitFor = waitFor;\n        this.errorToSend = errorToSend;\n        this.scheduler = scheduler;\n        this.index = 0;\n        this._previousIndex = 0;\n        this._hasCompleted = false;\n        this.scheduleTimeout();\n    }\n    Object.defineProperty(TimeoutSubscriber.prototype, \"previousIndex\", {\n        get: function () {\n            return this._previousIndex;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(TimeoutSubscriber.prototype, \"hasCompleted\", {\n        get: function () {\n            return this._hasCompleted;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    TimeoutSubscriber.dispatchTimeout = function (state) {\n        var source = state.subscriber;\n        var currentIndex = state.index;\n        if (!source.hasCompleted && source.previousIndex === currentIndex) {\n            source.notifyTimeout();\n        }\n    };\n    TimeoutSubscriber.prototype.scheduleTimeout = function () {\n        var currentIndex = this.index;\n        this.scheduler.schedule(TimeoutSubscriber.dispatchTimeout, this.waitFor, { subscriber: this, index: currentIndex });\n        this.index++;\n        this._previousIndex = currentIndex;\n    };\n    TimeoutSubscriber.prototype._next = function (value) {\n        this.destination.next(value);\n        if (!this.absoluteTimeout) {\n            this.scheduleTimeout();\n        }\n    };\n    TimeoutSubscriber.prototype._error = function (err) {\n        this.destination.error(err);\n        this._hasCompleted = true;\n    };\n    TimeoutSubscriber.prototype._complete = function () {\n        this.destination.complete();\n        this._hasCompleted = true;\n    };\n    TimeoutSubscriber.prototype.notifyTimeout = function () {\n        this.error(this.errorToSend || new Error('timeout'));\n    };\n    return TimeoutSubscriber;\n}(Subscriber_1.Subscriber));\n//# sourceMappingURL=timeout.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// /workspace/Energy-Consumption/~/rxjs/operator/timeout.js\n// module id = 954\n// module chunks = 0 1","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar async_1 = require('../scheduler/async');\nvar isDate_1 = require('../util/isDate');\nvar OuterSubscriber_1 = require('../OuterSubscriber');\nvar subscribeToResult_1 = require('../util/subscribeToResult');\n/**\n * @param due\n * @param withObservable\n * @param scheduler\n * @return {Observable<R>|WebSocketSubject<T>|Observable<T>}\n * @method timeoutWith\n * @owner Observable\n */\nfunction timeoutWith(due, withObservable, scheduler) {\n    if (scheduler === void 0) { scheduler = async_1.async; }\n    var absoluteTimeout = isDate_1.isDate(due);\n    var waitFor = absoluteTimeout ? (+due - scheduler.now()) : Math.abs(due);\n    return this.lift(new TimeoutWithOperator(waitFor, absoluteTimeout, withObservable, scheduler));\n}\nexports.timeoutWith = timeoutWith;\nvar TimeoutWithOperator = (function () {\n    function TimeoutWithOperator(waitFor, absoluteTimeout, withObservable, scheduler) {\n        this.waitFor = waitFor;\n        this.absoluteTimeout = absoluteTimeout;\n        this.withObservable = withObservable;\n        this.scheduler = scheduler;\n    }\n    TimeoutWithOperator.prototype.call = function (subscriber, source) {\n        return source._subscribe(new TimeoutWithSubscriber(subscriber, this.absoluteTimeout, this.waitFor, this.withObservable, this.scheduler));\n    };\n    return TimeoutWithOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar TimeoutWithSubscriber = (function (_super) {\n    __extends(TimeoutWithSubscriber, _super);\n    function TimeoutWithSubscriber(destination, absoluteTimeout, waitFor, withObservable, scheduler) {\n        _super.call(this);\n        this.destination = destination;\n        this.absoluteTimeout = absoluteTimeout;\n        this.waitFor = waitFor;\n        this.withObservable = withObservable;\n        this.scheduler = scheduler;\n        this.timeoutSubscription = undefined;\n        this.index = 0;\n        this._previousIndex = 0;\n        this._hasCompleted = false;\n        destination.add(this);\n        this.scheduleTimeout();\n    }\n    Object.defineProperty(TimeoutWithSubscriber.prototype, \"previousIndex\", {\n        get: function () {\n            return this._previousIndex;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(TimeoutWithSubscriber.prototype, \"hasCompleted\", {\n        get: function () {\n            return this._hasCompleted;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    TimeoutWithSubscriber.dispatchTimeout = function (state) {\n        var source = state.subscriber;\n        var currentIndex = state.index;\n        if (!source.hasCompleted && source.previousIndex === currentIndex) {\n            source.handleTimeout();\n        }\n    };\n    TimeoutWithSubscriber.prototype.scheduleTimeout = function () {\n        var currentIndex = this.index;\n        var timeoutState = { subscriber: this, index: currentIndex };\n        this.scheduler.schedule(TimeoutWithSubscriber.dispatchTimeout, this.waitFor, timeoutState);\n        this.index++;\n        this._previousIndex = currentIndex;\n    };\n    TimeoutWithSubscriber.prototype._next = function (value) {\n        this.destination.next(value);\n        if (!this.absoluteTimeout) {\n            this.scheduleTimeout();\n        }\n    };\n    TimeoutWithSubscriber.prototype._error = function (err) {\n        this.destination.error(err);\n        this._hasCompleted = true;\n    };\n    TimeoutWithSubscriber.prototype._complete = function () {\n        this.destination.complete();\n        this._hasCompleted = true;\n    };\n    TimeoutWithSubscriber.prototype.handleTimeout = function () {\n        if (!this.closed) {\n            var withObservable = this.withObservable;\n            this.unsubscribe();\n            this.destination.add(this.timeoutSubscription = subscribeToResult_1.subscribeToResult(this, withObservable));\n        }\n    };\n    return TimeoutWithSubscriber;\n}(OuterSubscriber_1.OuterSubscriber));\n//# sourceMappingURL=timeoutWith.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// /workspace/Energy-Consumption/~/rxjs/operator/timeoutWith.js\n// module id = 955\n// module chunks = 0 1","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Subscriber_1 = require('../Subscriber');\n/**\n * @return {Observable<any[]>|WebSocketSubject<T>|Observable<T>}\n * @method toArray\n * @owner Observable\n */\nfunction toArray() {\n    return this.lift(new ToArrayOperator());\n}\nexports.toArray = toArray;\nvar ToArrayOperator = (function () {\n    function ToArrayOperator() {\n    }\n    ToArrayOperator.prototype.call = function (subscriber, source) {\n        return source._subscribe(new ToArraySubscriber(subscriber));\n    };\n    return ToArrayOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar ToArraySubscriber = (function (_super) {\n    __extends(ToArraySubscriber, _super);\n    function ToArraySubscriber(destination) {\n        _super.call(this, destination);\n        this.array = [];\n    }\n    ToArraySubscriber.prototype._next = function (x) {\n        this.array.push(x);\n    };\n    ToArraySubscriber.prototype._complete = function () {\n        this.destination.next(this.array);\n        this.destination.complete();\n    };\n    return ToArraySubscriber;\n}(Subscriber_1.Subscriber));\n//# sourceMappingURL=toArray.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// /workspace/Energy-Consumption/~/rxjs/operator/toArray.js\n// module id = 956\n// module chunks = 0 1","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Subject_1 = require('../Subject');\nvar OuterSubscriber_1 = require('../OuterSubscriber');\nvar subscribeToResult_1 = require('../util/subscribeToResult');\n/**\n * Branch out the source Observable values as a nested Observable whenever\n * `windowBoundaries` emits.\n *\n * <span class=\"informal\">It's like {@link buffer}, but emits a nested Observable\n * instead of an array.</span>\n *\n * <img src=\"./img/window.png\" width=\"100%\">\n *\n * Returns an Observable that emits windows of items it collects from the source\n * Observable. The output Observable emits connected, non-overlapping\n * windows. It emits the current window and opens a new one whenever the\n * Observable `windowBoundaries` emits an item. Because each window is an\n * Observable, the output is a higher-order Observable.\n *\n * @example <caption>In every window of 1 second each, emit at most 2 click events</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var interval = Rx.Observable.interval(1000);\n * var result = clicks.window(interval)\n *   .map(win => win.take(2)) // each window has at most 2 emissions\n *   .mergeAll(); // flatten the Observable-of-Observables\n * result.subscribe(x => console.log(x));\n *\n * @see {@link windowCount}\n * @see {@link windowTime}\n * @see {@link windowToggle}\n * @see {@link windowWhen}\n * @see {@link buffer}\n *\n * @param {Observable<any>} windowBoundaries An Observable that completes the\n * previous window and starts a new window.\n * @return {Observable<Observable<T>>} An Observable of windows, which are\n * Observables emitting values of the source Observable.\n * @method window\n * @owner Observable\n */\nfunction window(windowBoundaries) {\n    return this.lift(new WindowOperator(windowBoundaries));\n}\nexports.window = window;\nvar WindowOperator = (function () {\n    function WindowOperator(windowBoundaries) {\n        this.windowBoundaries = windowBoundaries;\n    }\n    WindowOperator.prototype.call = function (subscriber, source) {\n        var windowSubscriber = new WindowSubscriber(subscriber);\n        var sourceSubscription = source._subscribe(windowSubscriber);\n        if (!sourceSubscription.closed) {\n            windowSubscriber.add(subscribeToResult_1.subscribeToResult(windowSubscriber, this.windowBoundaries));\n        }\n        return sourceSubscription;\n    };\n    return WindowOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar WindowSubscriber = (function (_super) {\n    __extends(WindowSubscriber, _super);\n    function WindowSubscriber(destination) {\n        _super.call(this, destination);\n        this.window = new Subject_1.Subject();\n        destination.next(this.window);\n    }\n    WindowSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {\n        this.openWindow();\n    };\n    WindowSubscriber.prototype.notifyError = function (error, innerSub) {\n        this._error(error);\n    };\n    WindowSubscriber.prototype.notifyComplete = function (innerSub) {\n        this._complete();\n    };\n    WindowSubscriber.prototype._next = function (value) {\n        this.window.next(value);\n    };\n    WindowSubscriber.prototype._error = function (err) {\n        this.window.error(err);\n        this.destination.error(err);\n    };\n    WindowSubscriber.prototype._complete = function () {\n        this.window.complete();\n        this.destination.complete();\n    };\n    WindowSubscriber.prototype._unsubscribe = function () {\n        this.window = null;\n    };\n    WindowSubscriber.prototype.openWindow = function () {\n        var prevWindow = this.window;\n        if (prevWindow) {\n            prevWindow.complete();\n        }\n        var destination = this.destination;\n        var newWindow = this.window = new Subject_1.Subject();\n        destination.next(newWindow);\n    };\n    return WindowSubscriber;\n}(OuterSubscriber_1.OuterSubscriber));\n//# sourceMappingURL=window.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// /workspace/Energy-Consumption/~/rxjs/operator/window.js\n// module id = 957\n// module chunks = 0 1","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Subscriber_1 = require('../Subscriber');\nvar Subject_1 = require('../Subject');\n/**\n * Branch out the source Observable values as a nested Observable with each\n * nested Observable emitting at most `windowSize` values.\n *\n * <span class=\"informal\">It's like {@link bufferCount}, but emits a nested\n * Observable instead of an array.</span>\n *\n * <img src=\"./img/windowCount.png\" width=\"100%\">\n *\n * Returns an Observable that emits windows of items it collects from the source\n * Observable. The output Observable emits windows every `startWindowEvery`\n * items, each containing no more than `windowSize` items. When the source\n * Observable completes or encounters an error, the output Observable emits\n * the current window and propagates the notification from the source\n * Observable. If `startWindowEvery` is not provided, then new windows are\n * started immediately at the start of the source and when each window completes\n * with size `windowSize`.\n *\n * @example <caption>Ignore every 3rd click event, starting from the first one</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.windowCount(3)\n *   .map(win => win.skip(1)) // skip first of every 3 clicks\n *   .mergeAll(); // flatten the Observable-of-Observables\n * result.subscribe(x => console.log(x));\n *\n * @example <caption>Ignore every 3rd click event, starting from the third one</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.windowCount(2, 3)\n *   .mergeAll(); // flatten the Observable-of-Observables\n * result.subscribe(x => console.log(x));\n *\n * @see {@link window}\n * @see {@link windowTime}\n * @see {@link windowToggle}\n * @see {@link windowWhen}\n * @see {@link bufferCount}\n *\n * @param {number} windowSize The maximum number of values emitted by each\n * window.\n * @param {number} [startWindowEvery] Interval at which to start a new window.\n * For example if `startWindowEvery` is `2`, then a new window will be started\n * on every other value from the source. A new window is started at the\n * beginning of the source by default.\n * @return {Observable<Observable<T>>} An Observable of windows, which in turn\n * are Observable of values.\n * @method windowCount\n * @owner Observable\n */\nfunction windowCount(windowSize, startWindowEvery) {\n    if (startWindowEvery === void 0) { startWindowEvery = 0; }\n    return this.lift(new WindowCountOperator(windowSize, startWindowEvery));\n}\nexports.windowCount = windowCount;\nvar WindowCountOperator = (function () {\n    function WindowCountOperator(windowSize, startWindowEvery) {\n        this.windowSize = windowSize;\n        this.startWindowEvery = startWindowEvery;\n    }\n    WindowCountOperator.prototype.call = function (subscriber, source) {\n        return source._subscribe(new WindowCountSubscriber(subscriber, this.windowSize, this.startWindowEvery));\n    };\n    return WindowCountOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar WindowCountSubscriber = (function (_super) {\n    __extends(WindowCountSubscriber, _super);\n    function WindowCountSubscriber(destination, windowSize, startWindowEvery) {\n        _super.call(this, destination);\n        this.destination = destination;\n        this.windowSize = windowSize;\n        this.startWindowEvery = startWindowEvery;\n        this.windows = [new Subject_1.Subject()];\n        this.count = 0;\n        destination.next(this.windows[0]);\n    }\n    WindowCountSubscriber.prototype._next = function (value) {\n        var startWindowEvery = (this.startWindowEvery > 0) ? this.startWindowEvery : this.windowSize;\n        var destination = this.destination;\n        var windowSize = this.windowSize;\n        var windows = this.windows;\n        var len = windows.length;\n        for (var i = 0; i < len && !this.closed; i++) {\n            windows[i].next(value);\n        }\n        var c = this.count - windowSize + 1;\n        if (c >= 0 && c % startWindowEvery === 0 && !this.closed) {\n            windows.shift().complete();\n        }\n        if (++this.count % startWindowEvery === 0 && !this.closed) {\n            var window_1 = new Subject_1.Subject();\n            windows.push(window_1);\n            destination.next(window_1);\n        }\n    };\n    WindowCountSubscriber.prototype._error = function (err) {\n        var windows = this.windows;\n        if (windows) {\n            while (windows.length > 0 && !this.closed) {\n                windows.shift().error(err);\n            }\n        }\n        this.destination.error(err);\n    };\n    WindowCountSubscriber.prototype._complete = function () {\n        var windows = this.windows;\n        if (windows) {\n            while (windows.length > 0 && !this.closed) {\n                windows.shift().complete();\n            }\n        }\n        this.destination.complete();\n    };\n    WindowCountSubscriber.prototype._unsubscribe = function () {\n        this.count = 0;\n        this.windows = null;\n    };\n    return WindowCountSubscriber;\n}(Subscriber_1.Subscriber));\n//# sourceMappingURL=windowCount.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// /workspace/Energy-Consumption/~/rxjs/operator/windowCount.js\n// module id = 958\n// module chunks = 0 1","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Subject_1 = require('../Subject');\nvar async_1 = require('../scheduler/async');\nvar Subscriber_1 = require('../Subscriber');\n/**\n * Branch out the source Observable values as a nested Observable periodically\n * in time.\n *\n * <span class=\"informal\">It's like {@link bufferTime}, but emits a nested\n * Observable instead of an array.</span>\n *\n * <img src=\"./img/windowTime.png\" width=\"100%\">\n *\n * Returns an Observable that emits windows of items it collects from the source\n * Observable. The output Observable starts a new window periodically, as\n * determined by the `windowCreationInterval` argument. It emits each window\n * after a fixed timespan, specified by the `windowTimeSpan` argument. When the\n * source Observable completes or encounters an error, the output Observable\n * emits the current window and propagates the notification from the source\n * Observable. If `windowCreationInterval` is not provided, the output\n * Observable starts a new window when the previous window of duration\n * `windowTimeSpan` completes.\n *\n * @example <caption>In every window of 1 second each, emit at most 2 click events</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.windowTime(1000)\n *   .map(win => win.take(2)) // each window has at most 2 emissions\n *   .mergeAll(); // flatten the Observable-of-Observables\n * result.subscribe(x => console.log(x));\n *\n * @example <caption>Every 5 seconds start a window 1 second long, and emit at most 2 click events per window</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.windowTime(1000, 5000)\n *   .map(win => win.take(2)) // each window has at most 2 emissions\n *   .mergeAll(); // flatten the Observable-of-Observables\n * result.subscribe(x => console.log(x));\n *\n * @see {@link window}\n * @see {@link windowCount}\n * @see {@link windowToggle}\n * @see {@link windowWhen}\n * @see {@link bufferTime}\n *\n * @param {number} windowTimeSpan The amount of time to fill each window.\n * @param {number} [windowCreationInterval] The interval at which to start new\n * windows.\n * @param {Scheduler} [scheduler=async] The scheduler on which to schedule the\n * intervals that determine window boundaries.\n * @return {Observable<Observable<T>>} An observable of windows, which in turn\n * are Observables.\n * @method windowTime\n * @owner Observable\n */\nfunction windowTime(windowTimeSpan, windowCreationInterval, scheduler) {\n    if (windowCreationInterval === void 0) { windowCreationInterval = null; }\n    if (scheduler === void 0) { scheduler = async_1.async; }\n    return this.lift(new WindowTimeOperator(windowTimeSpan, windowCreationInterval, scheduler));\n}\nexports.windowTime = windowTime;\nvar WindowTimeOperator = (function () {\n    function WindowTimeOperator(windowTimeSpan, windowCreationInterval, scheduler) {\n        this.windowTimeSpan = windowTimeSpan;\n        this.windowCreationInterval = windowCreationInterval;\n        this.scheduler = scheduler;\n    }\n    WindowTimeOperator.prototype.call = function (subscriber, source) {\n        return source._subscribe(new WindowTimeSubscriber(subscriber, this.windowTimeSpan, this.windowCreationInterval, this.scheduler));\n    };\n    return WindowTimeOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar WindowTimeSubscriber = (function (_super) {\n    __extends(WindowTimeSubscriber, _super);\n    function WindowTimeSubscriber(destination, windowTimeSpan, windowCreationInterval, scheduler) {\n        _super.call(this, destination);\n        this.destination = destination;\n        this.windowTimeSpan = windowTimeSpan;\n        this.windowCreationInterval = windowCreationInterval;\n        this.scheduler = scheduler;\n        this.windows = [];\n        if (windowCreationInterval !== null && windowCreationInterval >= 0) {\n            var window_1 = this.openWindow();\n            var closeState = { subscriber: this, window: window_1, context: null };\n            var creationState = { windowTimeSpan: windowTimeSpan, windowCreationInterval: windowCreationInterval, subscriber: this, scheduler: scheduler };\n            this.add(scheduler.schedule(dispatchWindowClose, windowTimeSpan, closeState));\n            this.add(scheduler.schedule(dispatchWindowCreation, windowCreationInterval, creationState));\n        }\n        else {\n            var window_2 = this.openWindow();\n            var timeSpanOnlyState = { subscriber: this, window: window_2, windowTimeSpan: windowTimeSpan };\n            this.add(scheduler.schedule(dispatchWindowTimeSpanOnly, windowTimeSpan, timeSpanOnlyState));\n        }\n    }\n    WindowTimeSubscriber.prototype._next = function (value) {\n        var windows = this.windows;\n        var len = windows.length;\n        for (var i = 0; i < len; i++) {\n            var window_3 = windows[i];\n            if (!window_3.closed) {\n                window_3.next(value);\n            }\n        }\n    };\n    WindowTimeSubscriber.prototype._error = function (err) {\n        var windows = this.windows;\n        while (windows.length > 0) {\n            windows.shift().error(err);\n        }\n        this.destination.error(err);\n    };\n    WindowTimeSubscriber.prototype._complete = function () {\n        var windows = this.windows;\n        while (windows.length > 0) {\n            var window_4 = windows.shift();\n            if (!window_4.closed) {\n                window_4.complete();\n            }\n        }\n        this.destination.complete();\n    };\n    WindowTimeSubscriber.prototype.openWindow = function () {\n        var window = new Subject_1.Subject();\n        this.windows.push(window);\n        var destination = this.destination;\n        destination.next(window);\n        return window;\n    };\n    WindowTimeSubscriber.prototype.closeWindow = function (window) {\n        window.complete();\n        var windows = this.windows;\n        windows.splice(windows.indexOf(window), 1);\n    };\n    return WindowTimeSubscriber;\n}(Subscriber_1.Subscriber));\nfunction dispatchWindowTimeSpanOnly(state) {\n    var subscriber = state.subscriber, windowTimeSpan = state.windowTimeSpan, window = state.window;\n    if (window) {\n        window.complete();\n    }\n    state.window = subscriber.openWindow();\n    this.schedule(state, windowTimeSpan);\n}\nfunction dispatchWindowCreation(state) {\n    var windowTimeSpan = state.windowTimeSpan, subscriber = state.subscriber, scheduler = state.scheduler, windowCreationInterval = state.windowCreationInterval;\n    var window = subscriber.openWindow();\n    var action = this;\n    var context = { action: action, subscription: null };\n    var timeSpanState = { subscriber: subscriber, window: window, context: context };\n    context.subscription = scheduler.schedule(dispatchWindowClose, windowTimeSpan, timeSpanState);\n    action.add(context.subscription);\n    action.schedule(state, windowCreationInterval);\n}\nfunction dispatchWindowClose(arg) {\n    var subscriber = arg.subscriber, window = arg.window, context = arg.context;\n    if (context && context.action && context.subscription) {\n        context.action.remove(context.subscription);\n    }\n    subscriber.closeWindow(window);\n}\n//# sourceMappingURL=windowTime.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// /workspace/Energy-Consumption/~/rxjs/operator/windowTime.js\n// module id = 959\n// module chunks = 0 1","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Subject_1 = require('../Subject');\nvar Subscription_1 = require('../Subscription');\nvar tryCatch_1 = require('../util/tryCatch');\nvar errorObject_1 = require('../util/errorObject');\nvar OuterSubscriber_1 = require('../OuterSubscriber');\nvar subscribeToResult_1 = require('../util/subscribeToResult');\n/**\n * Branch out the source Observable values as a nested Observable starting from\n * an emission from `openings` and ending when the output of `closingSelector`\n * emits.\n *\n * <span class=\"informal\">It's like {@link bufferToggle}, but emits a nested\n * Observable instead of an array.</span>\n *\n * <img src=\"./img/windowToggle.png\" width=\"100%\">\n *\n * Returns an Observable that emits windows of items it collects from the source\n * Observable. The output Observable emits windows that contain those items\n * emitted by the source Observable between the time when the `openings`\n * Observable emits an item and when the Observable returned by\n * `closingSelector` emits an item.\n *\n * @example <caption>Every other second, emit the click events from the next 500ms</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var openings = Rx.Observable.interval(1000);\n * var result = clicks.windowToggle(openings, i =>\n *   i % 2 ? Rx.Observable.interval(500) : Rx.Observable.empty()\n * ).mergeAll();\n * result.subscribe(x => console.log(x));\n *\n * @see {@link window}\n * @see {@link windowCount}\n * @see {@link windowTime}\n * @see {@link windowWhen}\n * @see {@link bufferToggle}\n *\n * @param {Observable<O>} openings An observable of notifications to start new\n * windows.\n * @param {function(value: O): Observable} closingSelector A function that takes\n * the value emitted by the `openings` observable and returns an Observable,\n * which, when it emits (either `next` or `complete`), signals that the\n * associated window should complete.\n * @return {Observable<Observable<T>>} An observable of windows, which in turn\n * are Observables.\n * @method windowToggle\n * @owner Observable\n */\nfunction windowToggle(openings, closingSelector) {\n    return this.lift(new WindowToggleOperator(openings, closingSelector));\n}\nexports.windowToggle = windowToggle;\nvar WindowToggleOperator = (function () {\n    function WindowToggleOperator(openings, closingSelector) {\n        this.openings = openings;\n        this.closingSelector = closingSelector;\n    }\n    WindowToggleOperator.prototype.call = function (subscriber, source) {\n        return source._subscribe(new WindowToggleSubscriber(subscriber, this.openings, this.closingSelector));\n    };\n    return WindowToggleOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar WindowToggleSubscriber = (function (_super) {\n    __extends(WindowToggleSubscriber, _super);\n    function WindowToggleSubscriber(destination, openings, closingSelector) {\n        _super.call(this, destination);\n        this.openings = openings;\n        this.closingSelector = closingSelector;\n        this.contexts = [];\n        this.add(this.openSubscription = subscribeToResult_1.subscribeToResult(this, openings, openings));\n    }\n    WindowToggleSubscriber.prototype._next = function (value) {\n        var contexts = this.contexts;\n        if (contexts) {\n            var len = contexts.length;\n            for (var i = 0; i < len; i++) {\n                contexts[i].window.next(value);\n            }\n        }\n    };\n    WindowToggleSubscriber.prototype._error = function (err) {\n        var contexts = this.contexts;\n        this.contexts = null;\n        if (contexts) {\n            var len = contexts.length;\n            var index = -1;\n            while (++index < len) {\n                var context = contexts[index];\n                context.window.error(err);\n                context.subscription.unsubscribe();\n            }\n        }\n        _super.prototype._error.call(this, err);\n    };\n    WindowToggleSubscriber.prototype._complete = function () {\n        var contexts = this.contexts;\n        this.contexts = null;\n        if (contexts) {\n            var len = contexts.length;\n            var index = -1;\n            while (++index < len) {\n                var context = contexts[index];\n                context.window.complete();\n                context.subscription.unsubscribe();\n            }\n        }\n        _super.prototype._complete.call(this);\n    };\n    WindowToggleSubscriber.prototype._unsubscribe = function () {\n        var contexts = this.contexts;\n        this.contexts = null;\n        if (contexts) {\n            var len = contexts.length;\n            var index = -1;\n            while (++index < len) {\n                var context = contexts[index];\n                context.window.unsubscribe();\n                context.subscription.unsubscribe();\n            }\n        }\n    };\n    WindowToggleSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {\n        if (outerValue === this.openings) {\n            var closingSelector = this.closingSelector;\n            var closingNotifier = tryCatch_1.tryCatch(closingSelector)(innerValue);\n            if (closingNotifier === errorObject_1.errorObject) {\n                return this.error(errorObject_1.errorObject.e);\n            }\n            else {\n                var window_1 = new Subject_1.Subject();\n                var subscription = new Subscription_1.Subscription();\n                var context = { window: window_1, subscription: subscription };\n                this.contexts.push(context);\n                var innerSubscription = subscribeToResult_1.subscribeToResult(this, closingNotifier, context);\n                if (innerSubscription.closed) {\n                    this.closeWindow(this.contexts.length - 1);\n                }\n                else {\n                    innerSubscription.context = context;\n                    subscription.add(innerSubscription);\n                }\n                this.destination.next(window_1);\n            }\n        }\n        else {\n            this.closeWindow(this.contexts.indexOf(outerValue));\n        }\n    };\n    WindowToggleSubscriber.prototype.notifyError = function (err) {\n        this.error(err);\n    };\n    WindowToggleSubscriber.prototype.notifyComplete = function (inner) {\n        if (inner !== this.openSubscription) {\n            this.closeWindow(this.contexts.indexOf(inner.context));\n        }\n    };\n    WindowToggleSubscriber.prototype.closeWindow = function (index) {\n        if (index === -1) {\n            return;\n        }\n        var contexts = this.contexts;\n        var context = contexts[index];\n        var window = context.window, subscription = context.subscription;\n        contexts.splice(index, 1);\n        window.complete();\n        subscription.unsubscribe();\n    };\n    return WindowToggleSubscriber;\n}(OuterSubscriber_1.OuterSubscriber));\n//# sourceMappingURL=windowToggle.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// /workspace/Energy-Consumption/~/rxjs/operator/windowToggle.js\n// module id = 960\n// module chunks = 0 1","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Subject_1 = require('../Subject');\nvar tryCatch_1 = require('../util/tryCatch');\nvar errorObject_1 = require('../util/errorObject');\nvar OuterSubscriber_1 = require('../OuterSubscriber');\nvar subscribeToResult_1 = require('../util/subscribeToResult');\n/**\n * Branch out the source Observable values as a nested Observable using a\n * factory function of closing Observables to determine when to start a new\n * window.\n *\n * <span class=\"informal\">It's like {@link bufferWhen}, but emits a nested\n * Observable instead of an array.</span>\n *\n * <img src=\"./img/windowWhen.png\" width=\"100%\">\n *\n * Returns an Observable that emits windows of items it collects from the source\n * Observable. The output Observable emits connected, non-overlapping windows.\n * It emits the current window and opens a new one whenever the Observable\n * produced by the specified `closingSelector` function emits an item. The first\n * window is opened immediately when subscribing to the output Observable.\n *\n * @example <caption>Emit only the first two clicks events in every window of [1-5] random seconds</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks\n *   .windowWhen(() => Rx.Observable.interval(1000 + Math.random() * 4000))\n *   .map(win => win.take(2)) // each window has at most 2 emissions\n *   .mergeAll(); // flatten the Observable-of-Observables\n * result.subscribe(x => console.log(x));\n *\n * @see {@link window}\n * @see {@link windowCount}\n * @see {@link windowTime}\n * @see {@link windowToggle}\n * @see {@link bufferWhen}\n *\n * @param {function(): Observable} closingSelector A function that takes no\n * arguments and returns an Observable that signals (on either `next` or\n * `complete`) when to close the previous window and start a new one.\n * @return {Observable<Observable<T>>} An observable of windows, which in turn\n * are Observables.\n * @method windowWhen\n * @owner Observable\n */\nfunction windowWhen(closingSelector) {\n    return this.lift(new WindowOperator(closingSelector));\n}\nexports.windowWhen = windowWhen;\nvar WindowOperator = (function () {\n    function WindowOperator(closingSelector) {\n        this.closingSelector = closingSelector;\n    }\n    WindowOperator.prototype.call = function (subscriber, source) {\n        return source._subscribe(new WindowSubscriber(subscriber, this.closingSelector));\n    };\n    return WindowOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar WindowSubscriber = (function (_super) {\n    __extends(WindowSubscriber, _super);\n    function WindowSubscriber(destination, closingSelector) {\n        _super.call(this, destination);\n        this.destination = destination;\n        this.closingSelector = closingSelector;\n        this.openWindow();\n    }\n    WindowSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {\n        this.openWindow(innerSub);\n    };\n    WindowSubscriber.prototype.notifyError = function (error, innerSub) {\n        this._error(error);\n    };\n    WindowSubscriber.prototype.notifyComplete = function (innerSub) {\n        this.openWindow(innerSub);\n    };\n    WindowSubscriber.prototype._next = function (value) {\n        this.window.next(value);\n    };\n    WindowSubscriber.prototype._error = function (err) {\n        this.window.error(err);\n        this.destination.error(err);\n        this.unsubscribeClosingNotification();\n    };\n    WindowSubscriber.prototype._complete = function () {\n        this.window.complete();\n        this.destination.complete();\n        this.unsubscribeClosingNotification();\n    };\n    WindowSubscriber.prototype.unsubscribeClosingNotification = function () {\n        if (this.closingNotification) {\n            this.closingNotification.unsubscribe();\n        }\n    };\n    WindowSubscriber.prototype.openWindow = function (innerSub) {\n        if (innerSub === void 0) { innerSub = null; }\n        if (innerSub) {\n            this.remove(innerSub);\n            innerSub.unsubscribe();\n        }\n        var prevWindow = this.window;\n        if (prevWindow) {\n            prevWindow.complete();\n        }\n        var window = this.window = new Subject_1.Subject();\n        this.destination.next(window);\n        var closingNotifier = tryCatch_1.tryCatch(this.closingSelector)();\n        if (closingNotifier === errorObject_1.errorObject) {\n            var err = errorObject_1.errorObject.e;\n            this.destination.error(err);\n            this.window.error(err);\n        }\n        else {\n            this.add(this.closingNotification = subscribeToResult_1.subscribeToResult(this, closingNotifier));\n        }\n    };\n    return WindowSubscriber;\n}(OuterSubscriber_1.OuterSubscriber));\n//# sourceMappingURL=windowWhen.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// /workspace/Energy-Consumption/~/rxjs/operator/windowWhen.js\n// module id = 961\n// module chunks = 0 1","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar OuterSubscriber_1 = require('../OuterSubscriber');\nvar subscribeToResult_1 = require('../util/subscribeToResult');\n/**\n * Combines the source Observable with other Observables to create an Observable\n * whose values are calculated from the latest values of each, only when the\n * source emits.\n *\n * <span class=\"informal\">Whenever the source Observable emits a value, it\n * computes a formula using that value plus the latest values from other input\n * Observables, then emits the output of that formula.</span>\n *\n * <img src=\"./img/withLatestFrom.png\" width=\"100%\">\n *\n * `withLatestFrom` combines each value from the source Observable (the\n * instance) with the latest values from the other input Observables only when\n * the source emits a value, optionally using a `project` function to determine\n * the value to be emitted on the output Observable. All input Observables must\n * emit at least one value before the output Observable will emit a value.\n *\n * @example <caption>On every click event, emit an array with the latest timer event plus the click event</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var timer = Rx.Observable.interval(1000);\n * var result = clicks.withLatestFrom(timer);\n * result.subscribe(x => console.log(x));\n *\n * @see {@link combineLatest}\n *\n * @param {Observable} other An input Observable to combine with the source\n * Observable. More than one input Observables may be given as argument.\n * @param {Function} [project] Projection function for combining values\n * together. Receives all values in order of the Observables passed, where the\n * first parameter is a value from the source Observable. (e.g.\n * `a.withLatestFrom(b, c, (a1, b1, c1) => a1 + b1 + c1)`). If this is not\n * passed, arrays will be emitted on the output Observable.\n * @return {Observable} An Observable of projected values from the most recent\n * values from each input Observable, or an array of the most recent values from\n * each input Observable.\n * @method withLatestFrom\n * @owner Observable\n */\nfunction withLatestFrom() {\n    var args = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        args[_i - 0] = arguments[_i];\n    }\n    var project;\n    if (typeof args[args.length - 1] === 'function') {\n        project = args.pop();\n    }\n    var observables = args;\n    return this.lift(new WithLatestFromOperator(observables, project));\n}\nexports.withLatestFrom = withLatestFrom;\n/* tslint:enable:max-line-length */\nvar WithLatestFromOperator = (function () {\n    function WithLatestFromOperator(observables, project) {\n        this.observables = observables;\n        this.project = project;\n    }\n    WithLatestFromOperator.prototype.call = function (subscriber, source) {\n        return source._subscribe(new WithLatestFromSubscriber(subscriber, this.observables, this.project));\n    };\n    return WithLatestFromOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar WithLatestFromSubscriber = (function (_super) {\n    __extends(WithLatestFromSubscriber, _super);\n    function WithLatestFromSubscriber(destination, observables, project) {\n        _super.call(this, destination);\n        this.observables = observables;\n        this.project = project;\n        this.toRespond = [];\n        var len = observables.length;\n        this.values = new Array(len);\n        for (var i = 0; i < len; i++) {\n            this.toRespond.push(i);\n        }\n        for (var i = 0; i < len; i++) {\n            var observable = observables[i];\n            this.add(subscribeToResult_1.subscribeToResult(this, observable, observable, i));\n        }\n    }\n    WithLatestFromSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {\n        this.values[outerIndex] = innerValue;\n        var toRespond = this.toRespond;\n        if (toRespond.length > 0) {\n            var found = toRespond.indexOf(outerIndex);\n            if (found !== -1) {\n                toRespond.splice(found, 1);\n            }\n        }\n    };\n    WithLatestFromSubscriber.prototype.notifyComplete = function () {\n        // noop\n    };\n    WithLatestFromSubscriber.prototype._next = function (value) {\n        if (this.toRespond.length === 0) {\n            var args = [value].concat(this.values);\n            if (this.project) {\n                this._tryProject(args);\n            }\n            else {\n                this.destination.next(args);\n            }\n        }\n    };\n    WithLatestFromSubscriber.prototype._tryProject = function (args) {\n        var result;\n        try {\n            result = this.project.apply(this, args);\n        }\n        catch (err) {\n            this.destination.error(err);\n            return;\n        }\n        this.destination.next(result);\n    };\n    return WithLatestFromSubscriber;\n}(OuterSubscriber_1.OuterSubscriber));\n//# sourceMappingURL=withLatestFrom.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// /workspace/Energy-Consumption/~/rxjs/operator/withLatestFrom.js\n// module id = 962\n// module chunks = 0 1","\"use strict\";\nvar zip_1 = require('./zip');\n/**\n * @param project\n * @return {Observable<R>|WebSocketSubject<T>|Observable<T>}\n * @method zipAll\n * @owner Observable\n */\nfunction zipAll(project) {\n    return this.lift(new zip_1.ZipOperator(project));\n}\nexports.zipAll = zipAll;\n//# sourceMappingURL=zipAll.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// /workspace/Energy-Consumption/~/rxjs/operator/zipAll.js\n// module id = 963\n// module chunks = 0 1","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Subscription_1 = require('../Subscription');\n/**\n * A unit of work to be executed in a {@link Scheduler}. An action is typically\n * created from within a Scheduler and an RxJS user does not need to concern\n * themselves about creating and manipulating an Action.\n *\n * ```ts\n * class Action<T> extends Subscription {\n *   new (scheduler: Scheduler, work: (state?: T) => void);\n *   schedule(state?: T, delay: number = 0): Subscription;\n * }\n * ```\n *\n * @class Action<T>\n */\nvar Action = (function (_super) {\n    __extends(Action, _super);\n    function Action(scheduler, work) {\n        _super.call(this);\n    }\n    /**\n     * Schedules this action on its parent Scheduler for execution. May be passed\n     * some context object, `state`. May happen at some point in the future,\n     * according to the `delay` parameter, if specified.\n     * @param {T} [state] Some contextual data that the `work` function uses when\n     * called by the Scheduler.\n     * @param {number} [delay] Time to wait before executing the work, where the\n     * time unit is implicit and defined by the Scheduler.\n     * @return {void}\n     */\n    Action.prototype.schedule = function (state, delay) {\n        if (delay === void 0) { delay = 0; }\n        return this;\n    };\n    return Action;\n}(Subscription_1.Subscription));\nexports.Action = Action;\n//# sourceMappingURL=Action.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// /workspace/Energy-Consumption/~/rxjs/scheduler/Action.js\n// module id = 964\n// module chunks = 0 1","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar AsyncAction_1 = require('./AsyncAction');\nvar AnimationFrame_1 = require('../util/AnimationFrame');\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar AnimationFrameAction = (function (_super) {\n    __extends(AnimationFrameAction, _super);\n    function AnimationFrameAction(scheduler, work) {\n        _super.call(this, scheduler, work);\n        this.scheduler = scheduler;\n        this.work = work;\n    }\n    AnimationFrameAction.prototype.requestAsyncId = function (scheduler, id, delay) {\n        if (delay === void 0) { delay = 0; }\n        // If delay is greater than 0, request as an async action.\n        if (delay !== null && delay > 0) {\n            return _super.prototype.requestAsyncId.call(this, scheduler, id, delay);\n        }\n        // Push the action to the end of the scheduler queue.\n        scheduler.actions.push(this);\n        // If an animation frame has already been requested, don't request another\n        // one. If an animation frame hasn't been requested yet, request one. Return\n        // the current animation frame request id.\n        return scheduler.scheduled || (scheduler.scheduled = AnimationFrame_1.AnimationFrame.requestAnimationFrame(scheduler.flush.bind(scheduler, null)));\n    };\n    AnimationFrameAction.prototype.recycleAsyncId = function (scheduler, id, delay) {\n        if (delay === void 0) { delay = 0; }\n        // If delay exists and is greater than 0, recycle as an async action.\n        if (delay !== null && delay > 0) {\n            return _super.prototype.recycleAsyncId.call(this, scheduler, id, delay);\n        }\n        // If the scheduler queue is empty, cancel the requested animation frame and\n        // set the scheduled flag to undefined so the next AnimationFrameAction will\n        // request its own.\n        if (scheduler.actions.length === 0) {\n            AnimationFrame_1.AnimationFrame.cancelAnimationFrame(id);\n            scheduler.scheduled = undefined;\n        }\n        // Return undefined so the action knows to request a new async id if it's rescheduled.\n        return undefined;\n    };\n    return AnimationFrameAction;\n}(AsyncAction_1.AsyncAction));\nexports.AnimationFrameAction = AnimationFrameAction;\n//# sourceMappingURL=AnimationFrameAction.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// /workspace/Energy-Consumption/~/rxjs/scheduler/AnimationFrameAction.js\n// module id = 965\n// module chunks = 0 1","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar AsyncScheduler_1 = require('./AsyncScheduler');\nvar AnimationFrameScheduler = (function (_super) {\n    __extends(AnimationFrameScheduler, _super);\n    function AnimationFrameScheduler() {\n        _super.apply(this, arguments);\n    }\n    AnimationFrameScheduler.prototype.flush = function () {\n        this.active = true;\n        this.scheduled = undefined;\n        var actions = this.actions;\n        var error;\n        var index = -1;\n        var count = actions.length;\n        var action = actions.shift();\n        do {\n            if (error = action.execute(action.state, action.delay)) {\n                break;\n            }\n        } while (++index < count && (action = actions.shift()));\n        this.active = false;\n        if (error) {\n            while (++index < count && (action = actions.shift())) {\n                action.unsubscribe();\n            }\n            throw error;\n        }\n    };\n    return AnimationFrameScheduler;\n}(AsyncScheduler_1.AsyncScheduler));\nexports.AnimationFrameScheduler = AnimationFrameScheduler;\n//# sourceMappingURL=AnimationFrameScheduler.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// /workspace/Energy-Consumption/~/rxjs/scheduler/AnimationFrameScheduler.js\n// module id = 966\n// module chunks = 0 1","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Immediate_1 = require('../util/Immediate');\nvar AsyncAction_1 = require('./AsyncAction');\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar AsapAction = (function (_super) {\n    __extends(AsapAction, _super);\n    function AsapAction(scheduler, work) {\n        _super.call(this, scheduler, work);\n        this.scheduler = scheduler;\n        this.work = work;\n    }\n    AsapAction.prototype.requestAsyncId = function (scheduler, id, delay) {\n        if (delay === void 0) { delay = 0; }\n        // If delay is greater than 0, request as an async action.\n        if (delay !== null && delay > 0) {\n            return _super.prototype.requestAsyncId.call(this, scheduler, id, delay);\n        }\n        // Push the action to the end of the scheduler queue.\n        scheduler.actions.push(this);\n        // If a microtask has already been scheduled, don't schedule another\n        // one. If a microtask hasn't been scheduled yet, schedule one now. Return\n        // the current scheduled microtask id.\n        return scheduler.scheduled || (scheduler.scheduled = Immediate_1.Immediate.setImmediate(scheduler.flush.bind(scheduler, null)));\n    };\n    AsapAction.prototype.recycleAsyncId = function (scheduler, id, delay) {\n        if (delay === void 0) { delay = 0; }\n        // If delay exists and is greater than 0, recycle as an async action.\n        if (delay !== null && delay > 0) {\n            return _super.prototype.recycleAsyncId.call(this, scheduler, id, delay);\n        }\n        // If the scheduler queue is empty, cancel the requested microtask and\n        // set the scheduled flag to undefined so the next AsapAction will schedule\n        // its own.\n        if (scheduler.actions.length === 0) {\n            Immediate_1.Immediate.clearImmediate(id);\n            scheduler.scheduled = undefined;\n        }\n        // Return undefined so the action knows to request a new async id if it's rescheduled.\n        return undefined;\n    };\n    return AsapAction;\n}(AsyncAction_1.AsyncAction));\nexports.AsapAction = AsapAction;\n//# sourceMappingURL=AsapAction.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// /workspace/Energy-Consumption/~/rxjs/scheduler/AsapAction.js\n// module id = 967\n// module chunks = 0 1","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar AsyncScheduler_1 = require('./AsyncScheduler');\nvar AsapScheduler = (function (_super) {\n    __extends(AsapScheduler, _super);\n    function AsapScheduler() {\n        _super.apply(this, arguments);\n    }\n    AsapScheduler.prototype.flush = function () {\n        this.active = true;\n        this.scheduled = undefined;\n        var actions = this.actions;\n        var error;\n        var index = -1;\n        var count = actions.length;\n        var action = actions.shift();\n        do {\n            if (error = action.execute(action.state, action.delay)) {\n                break;\n            }\n        } while (++index < count && (action = actions.shift()));\n        this.active = false;\n        if (error) {\n            while (++index < count && (action = actions.shift())) {\n                action.unsubscribe();\n            }\n            throw error;\n        }\n    };\n    return AsapScheduler;\n}(AsyncScheduler_1.AsyncScheduler));\nexports.AsapScheduler = AsapScheduler;\n//# sourceMappingURL=AsapScheduler.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// /workspace/Energy-Consumption/~/rxjs/scheduler/AsapScheduler.js\n// module id = 968\n// module chunks = 0 1","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar AsyncAction_1 = require('./AsyncAction');\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar QueueAction = (function (_super) {\n    __extends(QueueAction, _super);\n    function QueueAction(scheduler, work) {\n        _super.call(this, scheduler, work);\n        this.scheduler = scheduler;\n        this.work = work;\n    }\n    QueueAction.prototype.schedule = function (state, delay) {\n        if (delay === void 0) { delay = 0; }\n        if (delay > 0) {\n            return _super.prototype.schedule.call(this, state, delay);\n        }\n        this.delay = delay;\n        this.state = state;\n        this.scheduler.flush(this);\n        return this;\n    };\n    QueueAction.prototype.execute = function (state, delay) {\n        return (delay > 0 || this.closed) ?\n            _super.prototype.execute.call(this, state, delay) :\n            this._execute(state, delay);\n    };\n    QueueAction.prototype.requestAsyncId = function (scheduler, id, delay) {\n        if (delay === void 0) { delay = 0; }\n        // If delay is greater than 0, enqueue as an async action.\n        if (delay !== null && delay > 0) {\n            return _super.prototype.requestAsyncId.call(this, scheduler, id, delay);\n        }\n        // Otherwise flush the scheduler starting with this action.\n        return scheduler.flush(this);\n    };\n    return QueueAction;\n}(AsyncAction_1.AsyncAction));\nexports.QueueAction = QueueAction;\n//# sourceMappingURL=QueueAction.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// /workspace/Energy-Consumption/~/rxjs/scheduler/QueueAction.js\n// module id = 969\n// module chunks = 0 1","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar AsyncScheduler_1 = require('./AsyncScheduler');\nvar QueueScheduler = (function (_super) {\n    __extends(QueueScheduler, _super);\n    function QueueScheduler() {\n        _super.apply(this, arguments);\n    }\n    return QueueScheduler;\n}(AsyncScheduler_1.AsyncScheduler));\nexports.QueueScheduler = QueueScheduler;\n//# sourceMappingURL=QueueScheduler.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// /workspace/Energy-Consumption/~/rxjs/scheduler/QueueScheduler.js\n// module id = 970\n// module chunks = 0 1","\"use strict\";\nvar AnimationFrameAction_1 = require('./AnimationFrameAction');\nvar AnimationFrameScheduler_1 = require('./AnimationFrameScheduler');\nexports.animationFrame = new AnimationFrameScheduler_1.AnimationFrameScheduler(AnimationFrameAction_1.AnimationFrameAction);\n//# sourceMappingURL=animationFrame.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// /workspace/Energy-Consumption/~/rxjs/scheduler/animationFrame.js\n// module id = 971\n// module chunks = 0 1","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Observable_1 = require('../Observable');\nvar Subscription_1 = require('../Subscription');\nvar SubscriptionLoggable_1 = require('./SubscriptionLoggable');\nvar applyMixins_1 = require('../util/applyMixins');\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar ColdObservable = (function (_super) {\n    __extends(ColdObservable, _super);\n    function ColdObservable(messages, scheduler) {\n        _super.call(this, function (subscriber) {\n            var observable = this;\n            var index = observable.logSubscribedFrame();\n            subscriber.add(new Subscription_1.Subscription(function () {\n                observable.logUnsubscribedFrame(index);\n            }));\n            observable.scheduleMessages(subscriber);\n            return subscriber;\n        });\n        this.messages = messages;\n        this.subscriptions = [];\n        this.scheduler = scheduler;\n    }\n    ColdObservable.prototype.scheduleMessages = function (subscriber) {\n        var messagesLength = this.messages.length;\n        for (var i = 0; i < messagesLength; i++) {\n            var message = this.messages[i];\n            subscriber.add(this.scheduler.schedule(function (_a) {\n                var message = _a.message, subscriber = _a.subscriber;\n                message.notification.observe(subscriber);\n            }, message.frame, { message: message, subscriber: subscriber }));\n        }\n    };\n    return ColdObservable;\n}(Observable_1.Observable));\nexports.ColdObservable = ColdObservable;\napplyMixins_1.applyMixins(ColdObservable, [SubscriptionLoggable_1.SubscriptionLoggable]);\n//# sourceMappingURL=ColdObservable.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// /workspace/Energy-Consumption/~/rxjs/testing/ColdObservable.js\n// module id = 972\n// module chunks = 0 1","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Subject_1 = require('../Subject');\nvar Subscription_1 = require('../Subscription');\nvar SubscriptionLoggable_1 = require('./SubscriptionLoggable');\nvar applyMixins_1 = require('../util/applyMixins');\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar HotObservable = (function (_super) {\n    __extends(HotObservable, _super);\n    function HotObservable(messages, scheduler) {\n        _super.call(this);\n        this.messages = messages;\n        this.subscriptions = [];\n        this.scheduler = scheduler;\n    }\n    HotObservable.prototype._subscribe = function (subscriber) {\n        var subject = this;\n        var index = subject.logSubscribedFrame();\n        subscriber.add(new Subscription_1.Subscription(function () {\n            subject.logUnsubscribedFrame(index);\n        }));\n        return _super.prototype._subscribe.call(this, subscriber);\n    };\n    HotObservable.prototype.setup = function () {\n        var subject = this;\n        var messagesLength = subject.messages.length;\n        /* tslint:disable:no-var-keyword */\n        for (var i = 0; i < messagesLength; i++) {\n            (function () {\n                var message = subject.messages[i];\n                /* tslint:enable */\n                subject.scheduler.schedule(function () { message.notification.observe(subject); }, message.frame);\n            })();\n        }\n    };\n    return HotObservable;\n}(Subject_1.Subject));\nexports.HotObservable = HotObservable;\napplyMixins_1.applyMixins(HotObservable, [SubscriptionLoggable_1.SubscriptionLoggable]);\n//# sourceMappingURL=HotObservable.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// /workspace/Energy-Consumption/~/rxjs/testing/HotObservable.js\n// module id = 973\n// module chunks = 0 1","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Observable_1 = require('../Observable');\nvar Notification_1 = require('../Notification');\nvar ColdObservable_1 = require('./ColdObservable');\nvar HotObservable_1 = require('./HotObservable');\nvar SubscriptionLog_1 = require('./SubscriptionLog');\nvar VirtualTimeScheduler_1 = require('../scheduler/VirtualTimeScheduler');\nvar defaultMaxFrame = 750;\nvar TestScheduler = (function (_super) {\n    __extends(TestScheduler, _super);\n    function TestScheduler(assertDeepEqual) {\n        _super.call(this, VirtualTimeScheduler_1.VirtualAction, defaultMaxFrame);\n        this.assertDeepEqual = assertDeepEqual;\n        this.hotObservables = [];\n        this.coldObservables = [];\n        this.flushTests = [];\n    }\n    TestScheduler.prototype.createTime = function (marbles) {\n        var indexOf = marbles.indexOf('|');\n        if (indexOf === -1) {\n            throw new Error('marble diagram for time should have a completion marker \"|\"');\n        }\n        return indexOf * TestScheduler.frameTimeFactor;\n    };\n    TestScheduler.prototype.createColdObservable = function (marbles, values, error) {\n        if (marbles.indexOf('^') !== -1) {\n            throw new Error('cold observable cannot have subscription offset \"^\"');\n        }\n        if (marbles.indexOf('!') !== -1) {\n            throw new Error('cold observable cannot have unsubscription marker \"!\"');\n        }\n        var messages = TestScheduler.parseMarbles(marbles, values, error);\n        var cold = new ColdObservable_1.ColdObservable(messages, this);\n        this.coldObservables.push(cold);\n        return cold;\n    };\n    TestScheduler.prototype.createHotObservable = function (marbles, values, error) {\n        if (marbles.indexOf('!') !== -1) {\n            throw new Error('hot observable cannot have unsubscription marker \"!\"');\n        }\n        var messages = TestScheduler.parseMarbles(marbles, values, error);\n        var subject = new HotObservable_1.HotObservable(messages, this);\n        this.hotObservables.push(subject);\n        return subject;\n    };\n    TestScheduler.prototype.materializeInnerObservable = function (observable, outerFrame) {\n        var _this = this;\n        var messages = [];\n        observable.subscribe(function (value) {\n            messages.push({ frame: _this.frame - outerFrame, notification: Notification_1.Notification.createNext(value) });\n        }, function (err) {\n            messages.push({ frame: _this.frame - outerFrame, notification: Notification_1.Notification.createError(err) });\n        }, function () {\n            messages.push({ frame: _this.frame - outerFrame, notification: Notification_1.Notification.createComplete() });\n        });\n        return messages;\n    };\n    TestScheduler.prototype.expectObservable = function (observable, unsubscriptionMarbles) {\n        var _this = this;\n        if (unsubscriptionMarbles === void 0) { unsubscriptionMarbles = null; }\n        var actual = [];\n        var flushTest = { actual: actual, ready: false };\n        var unsubscriptionFrame = TestScheduler\n            .parseMarblesAsSubscriptions(unsubscriptionMarbles).unsubscribedFrame;\n        var subscription;\n        this.schedule(function () {\n            subscription = observable.subscribe(function (x) {\n                var value = x;\n                // Support Observable-of-Observables\n                if (x instanceof Observable_1.Observable) {\n                    value = _this.materializeInnerObservable(value, _this.frame);\n                }\n                actual.push({ frame: _this.frame, notification: Notification_1.Notification.createNext(value) });\n            }, function (err) {\n                actual.push({ frame: _this.frame, notification: Notification_1.Notification.createError(err) });\n            }, function () {\n                actual.push({ frame: _this.frame, notification: Notification_1.Notification.createComplete() });\n            });\n        }, 0);\n        if (unsubscriptionFrame !== Number.POSITIVE_INFINITY) {\n            this.schedule(function () { return subscription.unsubscribe(); }, unsubscriptionFrame);\n        }\n        this.flushTests.push(flushTest);\n        return {\n            toBe: function (marbles, values, errorValue) {\n                flushTest.ready = true;\n                flushTest.expected = TestScheduler.parseMarbles(marbles, values, errorValue, true);\n            }\n        };\n    };\n    TestScheduler.prototype.expectSubscriptions = function (actualSubscriptionLogs) {\n        var flushTest = { actual: actualSubscriptionLogs, ready: false };\n        this.flushTests.push(flushTest);\n        return {\n            toBe: function (marbles) {\n                var marblesArray = (typeof marbles === 'string') ? [marbles] : marbles;\n                flushTest.ready = true;\n                flushTest.expected = marblesArray.map(function (marbles) {\n                    return TestScheduler.parseMarblesAsSubscriptions(marbles);\n                });\n            }\n        };\n    };\n    TestScheduler.prototype.flush = function () {\n        var hotObservables = this.hotObservables;\n        while (hotObservables.length > 0) {\n            hotObservables.shift().setup();\n        }\n        _super.prototype.flush.call(this);\n        var readyFlushTests = this.flushTests.filter(function (test) { return test.ready; });\n        while (readyFlushTests.length > 0) {\n            var test = readyFlushTests.shift();\n            this.assertDeepEqual(test.actual, test.expected);\n        }\n    };\n    TestScheduler.parseMarblesAsSubscriptions = function (marbles) {\n        if (typeof marbles !== 'string') {\n            return new SubscriptionLog_1.SubscriptionLog(Number.POSITIVE_INFINITY);\n        }\n        var len = marbles.length;\n        var groupStart = -1;\n        var subscriptionFrame = Number.POSITIVE_INFINITY;\n        var unsubscriptionFrame = Number.POSITIVE_INFINITY;\n        for (var i = 0; i < len; i++) {\n            var frame = i * this.frameTimeFactor;\n            var c = marbles[i];\n            switch (c) {\n                case '-':\n                case ' ':\n                    break;\n                case '(':\n                    groupStart = frame;\n                    break;\n                case ')':\n                    groupStart = -1;\n                    break;\n                case '^':\n                    if (subscriptionFrame !== Number.POSITIVE_INFINITY) {\n                        throw new Error('found a second subscription point \\'^\\' in a ' +\n                            'subscription marble diagram. There can only be one.');\n                    }\n                    subscriptionFrame = groupStart > -1 ? groupStart : frame;\n                    break;\n                case '!':\n                    if (unsubscriptionFrame !== Number.POSITIVE_INFINITY) {\n                        throw new Error('found a second subscription point \\'^\\' in a ' +\n                            'subscription marble diagram. There can only be one.');\n                    }\n                    unsubscriptionFrame = groupStart > -1 ? groupStart : frame;\n                    break;\n                default:\n                    throw new Error('there can only be \\'^\\' and \\'!\\' markers in a ' +\n                        'subscription marble diagram. Found instead \\'' + c + '\\'.');\n            }\n        }\n        if (unsubscriptionFrame < 0) {\n            return new SubscriptionLog_1.SubscriptionLog(subscriptionFrame);\n        }\n        else {\n            return new SubscriptionLog_1.SubscriptionLog(subscriptionFrame, unsubscriptionFrame);\n        }\n    };\n    TestScheduler.parseMarbles = function (marbles, values, errorValue, materializeInnerObservables) {\n        if (materializeInnerObservables === void 0) { materializeInnerObservables = false; }\n        if (marbles.indexOf('!') !== -1) {\n            throw new Error('conventional marble diagrams cannot have the ' +\n                'unsubscription marker \"!\"');\n        }\n        var len = marbles.length;\n        var testMessages = [];\n        var subIndex = marbles.indexOf('^');\n        var frameOffset = subIndex === -1 ? 0 : (subIndex * -this.frameTimeFactor);\n        var getValue = typeof values !== 'object' ?\n            function (x) { return x; } :\n            function (x) {\n                // Support Observable-of-Observables\n                if (materializeInnerObservables && values[x] instanceof ColdObservable_1.ColdObservable) {\n                    return values[x].messages;\n                }\n                return values[x];\n            };\n        var groupStart = -1;\n        for (var i = 0; i < len; i++) {\n            var frame = i * this.frameTimeFactor + frameOffset;\n            var notification = void 0;\n            var c = marbles[i];\n            switch (c) {\n                case '-':\n                case ' ':\n                    break;\n                case '(':\n                    groupStart = frame;\n                    break;\n                case ')':\n                    groupStart = -1;\n                    break;\n                case '|':\n                    notification = Notification_1.Notification.createComplete();\n                    break;\n                case '^':\n                    break;\n                case '#':\n                    notification = Notification_1.Notification.createError(errorValue || 'error');\n                    break;\n                default:\n                    notification = Notification_1.Notification.createNext(getValue(c));\n                    break;\n            }\n            if (notification) {\n                testMessages.push({ frame: groupStart > -1 ? groupStart : frame, notification: notification });\n            }\n        }\n        return testMessages;\n    };\n    return TestScheduler;\n}(VirtualTimeScheduler_1.VirtualTimeScheduler));\nexports.TestScheduler = TestScheduler;\n//# sourceMappingURL=TestScheduler.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// /workspace/Energy-Consumption/~/rxjs/testing/TestScheduler.js\n// module id = 974\n// module chunks = 0 1","\"use strict\";\nvar root_1 = require('./root');\nvar RequestAnimationFrameDefinition = (function () {\n    function RequestAnimationFrameDefinition(root) {\n        if (root.requestAnimationFrame) {\n            this.cancelAnimationFrame = root.cancelAnimationFrame.bind(root);\n            this.requestAnimationFrame = root.requestAnimationFrame.bind(root);\n        }\n        else if (root.mozRequestAnimationFrame) {\n            this.cancelAnimationFrame = root.mozCancelAnimationFrame.bind(root);\n            this.requestAnimationFrame = root.mozRequestAnimationFrame.bind(root);\n        }\n        else if (root.webkitRequestAnimationFrame) {\n            this.cancelAnimationFrame = root.webkitCancelAnimationFrame.bind(root);\n            this.requestAnimationFrame = root.webkitRequestAnimationFrame.bind(root);\n        }\n        else if (root.msRequestAnimationFrame) {\n            this.cancelAnimationFrame = root.msCancelAnimationFrame.bind(root);\n            this.requestAnimationFrame = root.msRequestAnimationFrame.bind(root);\n        }\n        else if (root.oRequestAnimationFrame) {\n            this.cancelAnimationFrame = root.oCancelAnimationFrame.bind(root);\n            this.requestAnimationFrame = root.oRequestAnimationFrame.bind(root);\n        }\n        else {\n            this.cancelAnimationFrame = root.clearTimeout.bind(root);\n            this.requestAnimationFrame = function (cb) { return root.setTimeout(cb, 1000 / 60); };\n        }\n    }\n    return RequestAnimationFrameDefinition;\n}());\nexports.RequestAnimationFrameDefinition = RequestAnimationFrameDefinition;\nexports.AnimationFrame = new RequestAnimationFrameDefinition(root_1.root);\n//# sourceMappingURL=AnimationFrame.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// /workspace/Energy-Consumption/~/rxjs/util/AnimationFrame.js\n// module id = 975\n// module chunks = 0 1","\"use strict\";\nvar FastMap = (function () {\n    function FastMap() {\n        this.values = {};\n    }\n    FastMap.prototype.delete = function (key) {\n        this.values[key] = null;\n        return true;\n    };\n    FastMap.prototype.set = function (key, value) {\n        this.values[key] = value;\n        return this;\n    };\n    FastMap.prototype.get = function (key) {\n        return this.values[key];\n    };\n    FastMap.prototype.forEach = function (cb, thisArg) {\n        var values = this.values;\n        for (var key in values) {\n            if (values.hasOwnProperty(key) && values[key] !== null) {\n                cb.call(thisArg, values[key], key);\n            }\n        }\n    };\n    FastMap.prototype.clear = function () {\n        this.values = {};\n    };\n    return FastMap;\n}());\nexports.FastMap = FastMap;\n//# sourceMappingURL=FastMap.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// /workspace/Energy-Consumption/~/rxjs/util/FastMap.js\n// module id = 976\n// module chunks = 0 1","/**\nSome credit for this helper goes to http://github.com/YuzuJS/setImmediate\n*/\n\"use strict\";\nvar root_1 = require('./root');\nvar ImmediateDefinition = (function () {\n    function ImmediateDefinition(root) {\n        this.root = root;\n        if (root.setImmediate && typeof root.setImmediate === 'function') {\n            this.setImmediate = root.setImmediate.bind(root);\n            this.clearImmediate = root.clearImmediate.bind(root);\n        }\n        else {\n            this.nextHandle = 1;\n            this.tasksByHandle = {};\n            this.currentlyRunningATask = false;\n            // Don't get fooled by e.g. browserify environments.\n            if (this.canUseProcessNextTick()) {\n                // For Node.js before 0.9\n                this.setImmediate = this.createProcessNextTickSetImmediate();\n            }\n            else if (this.canUsePostMessage()) {\n                // For non-IE10 modern browsers\n                this.setImmediate = this.createPostMessageSetImmediate();\n            }\n            else if (this.canUseMessageChannel()) {\n                // For web workers, where supported\n                this.setImmediate = this.createMessageChannelSetImmediate();\n            }\n            else if (this.canUseReadyStateChange()) {\n                // For IE 6–8\n                this.setImmediate = this.createReadyStateChangeSetImmediate();\n            }\n            else {\n                // For older browsers\n                this.setImmediate = this.createSetTimeoutSetImmediate();\n            }\n            var ci = function clearImmediate(handle) {\n                delete clearImmediate.instance.tasksByHandle[handle];\n            };\n            ci.instance = this;\n            this.clearImmediate = ci;\n        }\n    }\n    ImmediateDefinition.prototype.identify = function (o) {\n        return this.root.Object.prototype.toString.call(o);\n    };\n    ImmediateDefinition.prototype.canUseProcessNextTick = function () {\n        return this.identify(this.root.process) === '[object process]';\n    };\n    ImmediateDefinition.prototype.canUseMessageChannel = function () {\n        return Boolean(this.root.MessageChannel);\n    };\n    ImmediateDefinition.prototype.canUseReadyStateChange = function () {\n        var document = this.root.document;\n        return Boolean(document && 'onreadystatechange' in document.createElement('script'));\n    };\n    ImmediateDefinition.prototype.canUsePostMessage = function () {\n        var root = this.root;\n        // The test against `importScripts` prevents this implementation from being installed inside a web worker,\n        // where `root.postMessage` means something completely different and can't be used for this purpose.\n        if (root.postMessage && !root.importScripts) {\n            var postMessageIsAsynchronous_1 = true;\n            var oldOnMessage = root.onmessage;\n            root.onmessage = function () {\n                postMessageIsAsynchronous_1 = false;\n            };\n            root.postMessage('', '*');\n            root.onmessage = oldOnMessage;\n            return postMessageIsAsynchronous_1;\n        }\n        return false;\n    };\n    // This function accepts the same arguments as setImmediate, but\n    // returns a function that requires no arguments.\n    ImmediateDefinition.prototype.partiallyApplied = function (handler) {\n        var args = [];\n        for (var _i = 1; _i < arguments.length; _i++) {\n            args[_i - 1] = arguments[_i];\n        }\n        var fn = function result() {\n            var _a = result, handler = _a.handler, args = _a.args;\n            if (typeof handler === 'function') {\n                handler.apply(undefined, args);\n            }\n            else {\n                (new Function('' + handler))();\n            }\n        };\n        fn.handler = handler;\n        fn.args = args;\n        return fn;\n    };\n    ImmediateDefinition.prototype.addFromSetImmediateArguments = function (args) {\n        this.tasksByHandle[this.nextHandle] = this.partiallyApplied.apply(undefined, args);\n        return this.nextHandle++;\n    };\n    ImmediateDefinition.prototype.createProcessNextTickSetImmediate = function () {\n        var fn = function setImmediate() {\n            var instance = setImmediate.instance;\n            var handle = instance.addFromSetImmediateArguments(arguments);\n            instance.root.process.nextTick(instance.partiallyApplied(instance.runIfPresent, handle));\n            return handle;\n        };\n        fn.instance = this;\n        return fn;\n    };\n    ImmediateDefinition.prototype.createPostMessageSetImmediate = function () {\n        // Installs an event handler on `global` for the `message` event: see\n        // * https://developer.mozilla.org/en/DOM/window.postMessage\n        // * http://www.whatwg.org/specs/web-apps/current-work/multipage/comms.html#crossDocumentMessages\n        var root = this.root;\n        var messagePrefix = 'setImmediate$' + root.Math.random() + '$';\n        var onGlobalMessage = function globalMessageHandler(event) {\n            var instance = globalMessageHandler.instance;\n            if (event.source === root &&\n                typeof event.data === 'string' &&\n                event.data.indexOf(messagePrefix) === 0) {\n                instance.runIfPresent(+event.data.slice(messagePrefix.length));\n            }\n        };\n        onGlobalMessage.instance = this;\n        root.addEventListener('message', onGlobalMessage, false);\n        var fn = function setImmediate() {\n            var _a = setImmediate, messagePrefix = _a.messagePrefix, instance = _a.instance;\n            var handle = instance.addFromSetImmediateArguments(arguments);\n            instance.root.postMessage(messagePrefix + handle, '*');\n            return handle;\n        };\n        fn.instance = this;\n        fn.messagePrefix = messagePrefix;\n        return fn;\n    };\n    ImmediateDefinition.prototype.runIfPresent = function (handle) {\n        // From the spec: 'Wait until any invocations of this algorithm started before this one have completed.'\n        // So if we're currently running a task, we'll need to delay this invocation.\n        if (this.currentlyRunningATask) {\n            // Delay by doing a setTimeout. setImmediate was tried instead, but in Firefox 7 it generated a\n            // 'too much recursion' error.\n            this.root.setTimeout(this.partiallyApplied(this.runIfPresent, handle), 0);\n        }\n        else {\n            var task = this.tasksByHandle[handle];\n            if (task) {\n                this.currentlyRunningATask = true;\n                try {\n                    task();\n                }\n                finally {\n                    this.clearImmediate(handle);\n                    this.currentlyRunningATask = false;\n                }\n            }\n        }\n    };\n    ImmediateDefinition.prototype.createMessageChannelSetImmediate = function () {\n        var _this = this;\n        var channel = new this.root.MessageChannel();\n        channel.port1.onmessage = function (event) {\n            var handle = event.data;\n            _this.runIfPresent(handle);\n        };\n        var fn = function setImmediate() {\n            var _a = setImmediate, channel = _a.channel, instance = _a.instance;\n            var handle = instance.addFromSetImmediateArguments(arguments);\n            channel.port2.postMessage(handle);\n            return handle;\n        };\n        fn.channel = channel;\n        fn.instance = this;\n        return fn;\n    };\n    ImmediateDefinition.prototype.createReadyStateChangeSetImmediate = function () {\n        var fn = function setImmediate() {\n            var instance = setImmediate.instance;\n            var root = instance.root;\n            var doc = root.document;\n            var html = doc.documentElement;\n            var handle = instance.addFromSetImmediateArguments(arguments);\n            // Create a <script> element; its readystatechange event will be fired asynchronously once it is inserted\n            // into the document. Do so, thus queuing up the task. Remember to clean up once it's been called.\n            var script = doc.createElement('script');\n            script.onreadystatechange = function () {\n                instance.runIfPresent(handle);\n                script.onreadystatechange = null;\n                html.removeChild(script);\n                script = null;\n            };\n            html.appendChild(script);\n            return handle;\n        };\n        fn.instance = this;\n        return fn;\n    };\n    ImmediateDefinition.prototype.createSetTimeoutSetImmediate = function () {\n        var fn = function setImmediate() {\n            var instance = setImmediate.instance;\n            var handle = instance.addFromSetImmediateArguments(arguments);\n            instance.root.setTimeout(instance.partiallyApplied(instance.runIfPresent, handle), 0);\n            return handle;\n        };\n        fn.instance = this;\n        return fn;\n    };\n    return ImmediateDefinition;\n}());\nexports.ImmediateDefinition = ImmediateDefinition;\nexports.Immediate = new ImmediateDefinition(root_1.root);\n//# sourceMappingURL=Immediate.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// /workspace/Energy-Consumption/~/rxjs/util/Immediate.js\n// module id = 977\n// module chunks = 0 1","\"use strict\";\nvar root_1 = require('./root');\nvar MapPolyfill_1 = require('./MapPolyfill');\nexports.Map = root_1.root.Map || (function () { return MapPolyfill_1.MapPolyfill; })();\n//# sourceMappingURL=Map.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// /workspace/Energy-Consumption/~/rxjs/util/Map.js\n// module id = 978\n// module chunks = 0 1","\"use strict\";\nvar MapPolyfill = (function () {\n    function MapPolyfill() {\n        this.size = 0;\n        this._values = [];\n        this._keys = [];\n    }\n    MapPolyfill.prototype.get = function (key) {\n        var i = this._keys.indexOf(key);\n        return i === -1 ? undefined : this._values[i];\n    };\n    MapPolyfill.prototype.set = function (key, value) {\n        var i = this._keys.indexOf(key);\n        if (i === -1) {\n            this._keys.push(key);\n            this._values.push(value);\n            this.size++;\n        }\n        else {\n            this._values[i] = value;\n        }\n        return this;\n    };\n    MapPolyfill.prototype.delete = function (key) {\n        var i = this._keys.indexOf(key);\n        if (i === -1) {\n            return false;\n        }\n        this._values.splice(i, 1);\n        this._keys.splice(i, 1);\n        this.size--;\n        return true;\n    };\n    MapPolyfill.prototype.clear = function () {\n        this._keys.length = 0;\n        this._values.length = 0;\n        this.size = 0;\n    };\n    MapPolyfill.prototype.forEach = function (cb, thisArg) {\n        for (var i = 0; i < this.size; i++) {\n            cb.call(thisArg, this._values[i], this._keys[i]);\n        }\n    };\n    return MapPolyfill;\n}());\nexports.MapPolyfill = MapPolyfill;\n//# sourceMappingURL=MapPolyfill.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// /workspace/Energy-Consumption/~/rxjs/util/MapPolyfill.js\n// module id = 979\n// module chunks = 0 1","\"use strict\";\nvar root_1 = require('./root');\nvar Object = root_1.root.Object;\nif (typeof Object.assign != 'function') {\n    (function () {\n        Object.assign = function assignPolyfill(target) {\n            var sources = [];\n            for (var _i = 1; _i < arguments.length; _i++) {\n                sources[_i - 1] = arguments[_i];\n            }\n            if (target === undefined || target === null) {\n                throw new TypeError('cannot convert undefined or null to object');\n            }\n            var output = Object(target);\n            var len = sources.length;\n            for (var index = 0; index < len; index++) {\n                var source = sources[index];\n                if (source !== undefined && source !== null) {\n                    for (var key in source) {\n                        if (source.hasOwnProperty(key)) {\n                            output[key] = source[key];\n                        }\n                    }\n                }\n            }\n            return output;\n        };\n    })();\n}\nexports.assign = Object.assign;\n//# sourceMappingURL=assign.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// /workspace/Energy-Consumption/~/rxjs/util/assign.js\n// module id = 980\n// module chunks = 0 1","\"use strict\";\nfunction not(pred, thisArg) {\n    function notPred() {\n        return !(notPred.pred.apply(notPred.thisArg, arguments));\n    }\n    notPred.pred = pred;\n    notPred.thisArg = thisArg;\n    return notPred;\n}\nexports.not = not;\n//# sourceMappingURL=not.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// /workspace/Energy-Consumption/~/rxjs/util/not.js\n// module id = 981\n// module chunks = 0 1","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute }    from '@angular/router';\n\nimport { Building,\n         BuildingService }    from './building.service';\n\n@Component({\n  template: `\n    <h3 highlight>Building Detail</h3>\n    <div *ngIf=\"building\">\n      <div>Id: {{building}}</div><br>\n      <label>Name:\n        <input [(ngModel)]=\"building.field.name\">\n      </label>\n    </div>\n    <br>\n    <a routerLink=\"../\">Building List</a>\n  `\n})\nexport class BuildingDetailComponent implements OnInit {\n  building: Building;\n\n  private buildingID: string;\n  private entityID: string;\n  private interval: string;\n  private startDate: Date;\n  private endDate: Date;\n  private paramText: string;\n\n  constructor(\n    private route: ActivatedRoute,\n    private buildingService: BuildingService) { \n    this.buildingID = '0';\n    this.entityID = 'all';\n    this.interval = '0';\n    this.paramText = 'consumption?';\n    this.startDate = new Date();\n    this.endDate = new Date();\n  }\n\n  ngOnInit() {\n    // let id = parseInt(this.route.snapshot.params['id'], 10);\n    // this.buildingService.getBuilding(id).map(building => this.building = building);\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// /workspace/Energy-Consumption/~/angular2-template-loader!/workspace/Energy-Consumption/src/app/building/building-detail.component.ts","import { Component, OnInit } from '@angular/core';\n\nimport { Building,\n         BuildingService } from './building.service';\n\n@Component({\n  selector: 'building-list',\n  template: require('./building-list.component.html'),\n  providers: [ BuildingService ],\n  styles: ['.error {color:red;}']\n})\n\nexport class BuildingListComponent implements OnInit {\n  errorMessage: string;\n  buildings: Building[];\n  mode = 'Observable';\n\n  private date;\n  private buildingID: string;\n  private entityID: string;\n  private interval: string;\n  private startDate: Date;\n  private endDate: Date;\n  private paramText: string;\n\n\n  constructor(private buildingService: BuildingService) { \n    this.date = new Date();\n    this.date = this.date.toISOString();\n    this.buildingID = '0';\n    this.entityID = 'all';\n    this.interval = '0';\n    this.paramText = 'consumption?';\n    this.startDate = new Date();\n    this.startDate.setHours(0,0,0,0);\n    this.endDate = new Date();\n  }\n\n  ngOnInit() {\n    this.getBuildings();  }\n\n   getBuildings() {\n\n    this.buildingService.getBuildings(this.buildingID, this.entityID, this.interval, this.paramText, this.startDate, this.endDate)\n                     .subscribe(\n                       buildings => this.buildings = buildings,\n                       error =>  this.errorMessage = <any>error);\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// /workspace/Energy-Consumption/~/angular2-template-loader!/workspace/Energy-Consumption/src/app/building/building-list.component.ts","import { Component, OnInit } from '@angular/core';\nimport { BuildingService } from './building.service';\n\n@Component({\n  selector: 'app-building',\n  template: `\n    <router-outlet></router-outlet>\n  `,\n  providers: [ BuildingService ]\n})\nexport class BuildingComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// /workspace/Energy-Consumption/~/angular2-template-loader!/workspace/Energy-Consumption/src/app/building/building.component.ts","import { NgModule }     from '@angular/core';\nimport { Routes,\n         RouterModule } from '@angular/router';\n\nimport { BuildingComponent }       from './building.component';\nimport { BuildingListComponent }   from './building-list.component';\nimport { BuildingDetailComponent } from './building-detail.component';\n\nconst routes: Routes = [\n  { path: '',\n    component: BuildingComponent,\n    children: [\n      { path: '',    component: BuildingListComponent },\n      { path: ':id', component: BuildingDetailComponent }\n    ]\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class BuildingRoutingModule {}\n\n\n\n// WEBPACK FOOTER //\n// /workspace/Energy-Consumption/~/angular2-template-loader!/workspace/Energy-Consumption/src/app/building/building.routing.module.ts","module.exports = \"<div class=\\\"page-header\\\">\\n\\t<h2> The energy consumption in {{date | date:'yyyy-MM-dd'}}</h2>\\n</div>\\n<div class=\\\"table-responsive\\\">\\n\\t<table class=\\\"table\\\">\\n\\t\\t<thead>\\n\\t\\t\\t<tr>\\n\\t\\t\\t\\t<th>ID</th>\\n\\t\\t\\t\\t<th>Name</th>\\n\\t\\t\\t\\t<th>Electric</th>\\n\\t\\t\\t\\t<th>Ga</th>\\n\\t\\t\\t</tr>\\n\\t\\t</thead>\\n\\t\\t\\n\\t\\t<tbody>\\n\\t\\t\\t<tr *ngFor=\\\"let building of buildings\\\">\\n\\t\\t\\t\\t<td>{{building.fields.id}}</td>\\n\\t\\t\\t\\t<td>{{building.fields.name}}</td>\\n\\t\\t\\t\\t<td *ngFor=\\\"let entity of building.data\\\">\\n\\t\\t\\t\\t\\t{{entity.actual}} {{entity.metric}}\\n\\t\\t\\t\\t</td>\\n\\t\\t\\t</tr>\\n\\t\\t</tbody>\\n\\t</table>\\n</div>\\n\\n<p class=\\\"error\\\" *ngIf=\\\"errorMessage\\\">{{errorMessage}}</p>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /workspace/Energy-Consumption/src/app/building/building-list.component.html\n// module id = 1006\n// module chunks = 1"],"sourceRoot":""}